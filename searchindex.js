Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[839,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[389,0,0,"-"],creation_functions:[390,0,0,"-"],data_type_functions:[395,0,0,"-"],data_types:[399,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[391,2,1,""],ones:[392,2,1,""],tril:[393,2,1,""],zeros:[394,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[395,1,1,""],finfo:[397,2,1,""],iinfo:[398,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[395,3,1,""],bits:[395,3,1,""],eps:[395,3,1,""],max:[395,3,1,""],min:[395,3,1,""],smallest_normal:[395,3,1,""]},"ivy.functional.backends.numpy.core":{device:[437,0,0,"-"],general:[439,0,0,"-"],gradients:[473,0,0,"-"],image:[478,0,0,"-"],linear_algebra:[482,0,0,"-"],logic:[486,0,0,"-"],math:[487,0,0,"-"],random:[489,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[438,1,1,""],clear_mem_on_dev:[437,2,1,""],dev:[437,2,1,""],dev_from_str:[437,2,1,""],dev_to_str:[437,2,1,""],gpu_is_available:[437,2,1,""],num_gpus:[437,2,1,""],to_dev:[437,2,1,""],tpu_is_available:[437,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[438,3,1,""],start:[438,3,1,""],stop:[438,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[439,2,1,""],arange:[440,2,1,""],argmax:[441,2,1,""],argmin:[442,2,1,""],array:[443,2,1,""],asarray:[439,2,1,""],astype:[439,2,1,""],cast:[444,2,1,""],clip:[439,2,1,""],compile:[445,2,1,""],concatenate:[446,2,1,""],constant_pad:[439,2,1,""],container_types:[439,2,1,""],copy_array:[439,2,1,""],cumprod:[447,2,1,""],current_framework_str:[439,2,1,""],dtype:[448,2,1,""],dtype_bits:[449,2,1,""],dtype_from_str:[450,2,1,""],dtype_to_str:[451,2,1,""],equal:[439,2,1,""],floor:[439,2,1,""],floormod:[439,2,1,""],full:[452,2,1,""],gather:[453,2,1,""],gather_nd:[454,2,1,""],get_num_dims:[439,2,1,""],identity:[455,2,1,""],indices_where:[456,2,1,""],inplace_arrays_supported:[439,2,1,""],inplace_decrement:[457,2,1,""],inplace_increment:[458,2,1,""],inplace_update:[459,2,1,""],inplace_variables_supported:[439,2,1,""],is_array:[460,2,1,""],linear_resample:[461,2,1,""],linspace:[462,2,1,""],logspace:[463,2,1,""],matmul:[439,2,1,""],meshgrid:[439,2,1,""],multiprocessing:[439,2,1,""],one_hot:[464,2,1,""],ones_like:[465,2,1,""],round:[439,2,1,""],scatter_flat:[466,2,1,""],scatter_nd:[467,2,1,""],shape:[439,2,1,""],split:[468,2,1,""],squeeze:[469,2,1,""],to_list:[439,2,1,""],to_numpy:[439,2,1,""],to_scalar:[439,2,1,""],transpose:[470,2,1,""],unstack:[471,2,1,""],where:[439,2,1,""],zero_pad:[439,2,1,""],zeros_like:[472,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[474,2,1,""],is_variable:[475,2,1,""],stop_gradient:[476,2,1,""],variable:[477,2,1,""],variable_data:[473,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[479,2,1,""],gradient_image:[480,2,1,""],stack_images:[481,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[483,2,1,""],qr:[484,2,1,""],vector_to_skew_symmetric_matrix:[485,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[488,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[490,2,1,""],randint:[489,2,1,""],random_normal:[489,2,1,""],random_uniform:[489,2,1,""],seed:[489,2,1,""],shuffle:[489,2,1,""]},"ivy.functional.ivy":{array_api:[840,0,0,"-"],core:[878,0,0,"-"],nn:[1217,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[841,0,0,"-"],creation_functions:[842,0,0,"-"],data_type_functions:[847,0,0,"-"],data_types:[850,0,0,"-"],elementwise_functions:[851,0,0,"-"],function_and_method_signatures:[864,0,0,"-"],linear_algebra:[865,0,0,"-"],manipulation_functions:[868,0,0,"-"],searching_functions:[870,0,0,"-"],set_functions:[871,0,0,"-"],sorting_functions:[872,0,0,"-"],statistical_functions:[874,0,0,"-"],utility_functions:[875,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[841,4,1,""],nan:[841,4,1,""],pi:[841,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[843,2,1,""],ones:[844,2,1,""],tril:[845,2,1,""],zeros:[846,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[848,2,1,""],iinfo:[849,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[852,2,1,""],bitwise_and:[853,2,1,""],ceil:[854,2,1,""],cos:[855,2,1,""],cosh:[856,2,1,""],isfinite:[857,2,1,""],isnan:[858,2,1,""],less:[859,2,1,""],log1p:[860,2,1,""],log2:[861,2,1,""],logical_not:[862,2,1,""],sqrt:[863,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[866,2,1,""],vector_norm:[867,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[869,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[873,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[876,2,1,""],any:[877,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[879,0,0,"-"],compilation:[918,0,0,"-"],device:[920,0,0,"-"],dtype:[970,0,0,"-"],general:[994,0,0,"-"],gradients:[1091,0,0,"-"],image:[1107,0,0,"-"],linalg:[1114,0,0,"-"],logic:[1122,0,0,"-"],math:[1125,0,0,"-"],meta:[1141,0,0,"-"],multi_node:[1145,0,0,"-"],nest:[1189,0,0,"-"],random:[1201,0,0,"-"],reductions:[1208,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[880,2,1,""],builtin_add:[881,2,1,""],builtin_and:[882,2,1,""],builtin_bool:[883,2,1,""],builtin_contains:[884,2,1,""],builtin_deepcopy:[885,2,1,""],builtin_dir:[886,2,1,""],builtin_eq:[887,2,1,""],builtin_float:[888,2,1,""],builtin_floordiv:[889,2,1,""],builtin_ge:[890,2,1,""],builtin_getattr:[891,2,1,""],builtin_getattribute:[892,2,1,""],builtin_getitem:[893,2,1,""],builtin_gt:[894,2,1,""],builtin_int:[895,2,1,""],builtin_invert:[896,2,1,""],builtin_le:[897,2,1,""],builtin_lt:[898,2,1,""],builtin_mul:[899,2,1,""],builtin_ne:[900,2,1,""],builtin_neg:[901,2,1,""],builtin_or:[902,2,1,""],builtin_pos:[903,2,1,""],builtin_pow:[904,2,1,""],builtin_radd:[905,2,1,""],builtin_rand:[906,2,1,""],builtin_rfloordiv:[907,2,1,""],builtin_rmul:[908,2,1,""],builtin_ror:[909,2,1,""],builtin_rpow:[910,2,1,""],builtin_rsub:[911,2,1,""],builtin_rtruediv:[912,2,1,""],builtin_rxor:[913,2,1,""],builtin_setitem:[914,2,1,""],builtin_sub:[915,2,1,""],builtin_truediv:[916,2,1,""],builtin_xor:[917,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[919,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[920,1,1,""],DevClonedItem:[922,1,1,""],DevClonedIter:[923,1,1,""],DevClonedNest:[924,1,1,""],DevDistItem:[925,1,1,""],DevDistIter:[926,1,1,""],DevDistNest:[927,1,1,""],DevManager:[920,1,1,""],DevMapper:[929,1,1,""],DevMapperMultiProc:[930,1,1,""],MultiDev:[920,1,1,""],MultiDevItem:[932,1,1,""],MultiDevIter:[933,1,1,""],MultiDevNest:[934,1,1,""],Profiler:[935,1,1,""],clear_mem_on_dev:[936,2,1,""],default_device:[937,2,1,""],dev:[938,2,1,""],dev_clone:[939,2,1,""],dev_clone_array:[940,2,1,""],dev_clone_iter:[941,2,1,""],dev_clone_nest:[942,2,1,""],dev_dist:[943,2,1,""],dev_dist_array:[944,2,1,""],dev_dist_iter:[945,2,1,""],dev_dist_nest:[946,2,1,""],dev_from_str:[947,2,1,""],dev_to_str:[948,2,1,""],dev_unify:[949,2,1,""],dev_unify_array:[950,2,1,""],dev_unify_iter:[951,2,1,""],dev_unify_nest:[952,2,1,""],dev_util:[953,2,1,""],get_all_arrays_on_dev:[954,2,1,""],gpu_is_available:[955,2,1,""],num_arrays_on_dev:[956,2,1,""],num_cpu_cores:[957,2,1,""],num_gpus:[958,2,1,""],percent_used_mem_on_dev:[959,2,1,""],print_all_arrays_on_dev:[960,2,1,""],set_default_device:[961,2,1,""],set_split_factor:[962,2,1,""],split_factor:[963,2,1,""],split_func_call:[964,2,1,""],to_dev:[965,2,1,""],total_mem_on_dev:[966,2,1,""],tpu_is_available:[967,2,1,""],unset_default_device:[968,2,1,""],used_mem_on_dev:[969,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[920,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[920,3,1,""],da_tune_step:[920,3,1,""],dim_size:[920,3,1,""],ds_tune_step:[920,3,1,""],map:[920,3,1,""],repeated_config_check:[920,3,1,""],tune_step:[920,3,1,""],tuned:[920,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[929,3,1,""],map:[929,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[930,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[920,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[932,3,1,""],items:[932,3,1,""],keys:[932,3,1,""],shape:[932,3,1,""],values:[932,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[933,3,1,""],at_dev:[933,3,1,""],at_devs:[933,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[934,3,1,""],at_dev:[934,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[935,3,1,""],start:[935,3,1,""],stop:[935,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[970,1,1,""],DefaultFloatDtype:[970,1,1,""],DefaultIntDtype:[970,1,1,""],astype:[970,2,1,""],cast:[974,2,1,""],closest_valid_dtype:[975,2,1,""],convert_dtype:[976,2,1,""],default_dtype:[977,2,1,""],default_float_dtype:[978,2,1,""],default_int_dtype:[979,2,1,""],dtype:[980,2,1,""],dtype_bits:[981,2,1,""],dtype_from_str:[982,2,1,""],dtype_to_str:[983,2,1,""],invalid_dtype:[984,2,1,""],is_float_dtype:[985,2,1,""],is_int_dtype:[986,2,1,""],set_default_dtype:[987,2,1,""],set_default_float_dtype:[988,2,1,""],set_default_int_dtype:[989,2,1,""],unset_default_dtype:[990,2,1,""],unset_default_float_dtype:[991,2,1,""],unset_default_int_dtype:[992,2,1,""],valid_dtype:[993,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[970,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[970,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[970,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1018,2,1,""],abs:[995,2,1,""],all_equal:[996,2,1,""],arange:[997,2,1,""],arg_names:[998,2,1,""],argmax:[999,2,1,""],argmin:[1000,2,1,""],array:[1001,2,1,""],array_equal:[1002,2,1,""],arrays_equal:[1003,2,1,""],asarray:[994,2,1,""],assert_supports_inplace:[1004,2,1,""],broadcast_to:[1005,2,1,""],cache_fn:[1006,2,1,""],clip:[1007,2,1,""],clip_matrix_norm:[1008,2,1,""],clip_vector_norm:[1009,2,1,""],concatenate:[1010,2,1,""],constant_pad:[1011,2,1,""],container_types:[1012,2,1,""],copy_array:[1013,2,1,""],cross:[1014,2,1,""],cumprod:[1015,2,1,""],cumsum:[1016,2,1,""],current_framework_str:[1017,2,1,""],einops_rearrange:[1019,2,1,""],einops_reduce:[1020,2,1,""],einops_repeat:[1021,2,1,""],equal:[1022,2,1,""],exists:[1023,2,1,""],expand_dims:[1024,2,1,""],floor:[1025,2,1,""],floormod:[1026,2,1,""],fourier_encode:[1027,2,1,""],full:[1028,2,1,""],gather:[1029,2,1,""],gather_nd:[1030,2,1,""],get_all_arrays_in_memory:[1031,2,1,""],get_min_base:[1032,2,1,""],get_min_denominator:[1033,2,1,""],get_num_dims:[1034,2,1,""],get_referrers_recursive:[1035,2,1,""],has_nans:[1036,2,1,""],identity:[1037,2,1,""],indices_where:[1038,2,1,""],inplace_arrays_supported:[1039,2,1,""],inplace_decrement:[1040,2,1,""],inplace_increment:[1041,2,1,""],inplace_update:[1042,2,1,""],inplace_variables_supported:[1043,2,1,""],is_array:[1044,2,1,""],isinf:[1045,2,1,""],linear_resample:[1046,2,1,""],linspace:[1047,2,1,""],logspace:[1048,2,1,""],match_kwargs:[1049,2,1,""],matmul:[1050,2,1,""],maximum:[1051,2,1,""],meshgrid:[1052,2,1,""],minimum:[1053,2,1,""],multiprocessing:[1054,2,1,""],num_arrays_in_memory:[1055,2,1,""],one_hot:[1056,2,1,""],ones:[1057,2,1,""],ones_like:[1058,2,1,""],print_all_arrays_in_memory:[1059,2,1,""],queue_timeout:[1060,2,1,""],repeat:[1061,2,1,""],reshape:[1062,2,1,""],round:[1063,2,1,""],scatter_flat:[1064,2,1,""],scatter_nd:[1065,2,1,""],set_min_base:[1066,2,1,""],set_min_denominator:[1067,2,1,""],set_queue_timeout:[1068,2,1,""],set_tmp_dir:[1069,2,1,""],shape:[1070,2,1,""],shape_to_tuple:[1071,2,1,""],split:[1072,2,1,""],squeeze:[1073,2,1,""],stable_divide:[1074,2,1,""],stable_pow:[1075,2,1,""],stack:[1076,2,1,""],supports_inplace:[1077,2,1,""],swapaxes:[1078,2,1,""],tile:[1079,2,1,""],tmp_dir:[1080,2,1,""],to_list:[1081,2,1,""],to_numpy:[1082,2,1,""],to_scalar:[1083,2,1,""],transpose:[1084,2,1,""],try_else_none:[1085,2,1,""],unstack:[1086,2,1,""],value_is_nan:[1087,2,1,""],where:[1088,2,1,""],zero_pad:[1089,2,1,""],zeros_like:[1090,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1091,1,1,""],adam_step:[1093,2,1,""],adam_update:[1094,2,1,""],execute_with_gradients:[1095,2,1,""],gradient_descent_update:[1096,2,1,""],is_variable:[1097,2,1,""],lamb_update:[1098,2,1,""],lars_update:[1099,2,1,""],optimizer_update:[1100,2,1,""],set_with_grads:[1101,2,1,""],stop_gradient:[1102,2,1,""],unset_with_grads:[1103,2,1,""],variable:[1104,2,1,""],variable_data:[1105,2,1,""],with_grads:[1106,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1091,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1108,2,1,""],float_img_to_uint8_img:[1109,2,1,""],gradient_image:[1110,2,1,""],random_crop:[1111,2,1,""],stack_images:[1112,2,1,""],uint8_img_to_float_img:[1113,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1115,2,1,""],inv:[1116,2,1,""],matrix_norm:[1117,2,1,""],pinv:[1118,2,1,""],qr:[1119,2,1,""],svd:[1120,2,1,""],vector_to_skew_symmetric_matrix:[1121,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1123,2,1,""],logical_or:[1124,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1126,2,1,""],acosh:[1127,2,1,""],asin:[1128,2,1,""],atan2:[1130,2,1,""],atan:[1129,2,1,""],atanh:[1131,2,1,""],cosh:[1132,2,1,""],divide:[1133,2,1,""],erf:[1134,2,1,""],exp:[1135,2,1,""],log:[1136,2,1,""],sin:[1137,2,1,""],sinh:[1138,2,1,""],tan:[1139,2,1,""],tanh:[1140,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1142,2,1,""],maml_step:[1143,2,1,""],reptile_step:[1144,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1145,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1190,2,1,""],copy_nest:[1191,2,1,""],index_nest:[1192,2,1,""],map:[1193,2,1,""],map_nest_at_index:[1194,2,1,""],map_nest_at_indices:[1195,2,1,""],multi_index_nest:[1196,2,1,""],nested_indices_where:[1197,2,1,""],nested_map:[1198,2,1,""],set_nest_at_index:[1199,2,1,""],set_nest_at_indices:[1200,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1202,2,1,""],randint:[1203,2,1,""],random_normal:[1204,2,1,""],random_uniform:[1205,2,1,""],seed:[1206,2,1,""],shuffle:[1207,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1209,2,1,""],reduce_max:[1210,2,1,""],reduce_mean:[1211,2,1,""],reduce_min:[1212,2,1,""],reduce_prod:[1213,2,1,""],reduce_std:[1214,2,1,""],reduce_sum:[1215,2,1,""],reduce_var:[1216,2,1,""]},"ivy.functional.ivy.nn":{activations:[1218,0,0,"-"],layers:[1226,0,0,"-"],losses:[1239,0,0,"-"],norms:[1243,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1219,2,1,""],leaky_relu:[1220,2,1,""],relu:[1221,2,1,""],sigmoid:[1222,2,1,""],softmax:[1223,2,1,""],softplus:[1224,2,1,""],tanh:[1225,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1227,2,1,""],conv1d_transpose:[1228,2,1,""],conv2d:[1229,2,1,""],conv2d_transpose:[1230,2,1,""],conv3d:[1231,2,1,""],conv3d_transpose:[1232,2,1,""],depthwise_conv2d:[1233,2,1,""],dropout:[1234,2,1,""],linear:[1235,2,1,""],lstm_update:[1236,2,1,""],multi_head_attention:[1237,2,1,""],scaled_dot_product_attention:[1238,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1240,2,1,""],cross_entropy:[1241,2,1,""],sparse_cross_entropy:[1242,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1244,2,1,""]},"ivy.stateful":{activations:[1248,0,0,"-"],converters:[1251,0,0,"-"],initializers:[1253,0,0,"-"],layers:[1262,0,0,"-"],module:[1274,0,0,"-"],norms:[1276,0,0,"-"],optimizers:[1278,0,0,"-"],sequential:[1284,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1249,1,1,""],GELU:[1250,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1249,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1250,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1252,2,1,""]},"ivy.stateful.initializers":{Constant:[1253,1,1,""],FirstLayerSiren:[1255,1,1,""],GlorotUniform:[1256,1,1,""],KaimingNormal:[1253,1,1,""],Ones:[1258,1,1,""],Siren:[1259,1,1,""],Uniform:[1253,1,1,""],Zeros:[1261,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1253,3,1,""],create_variables:[1253,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1255,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1256,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1253,3,1,""],create_variables:[1253,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1258,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1259,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1253,3,1,""],create_variables:[1253,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1261,3,1,""]},"ivy.stateful.layers":{Conv1D:[1263,1,1,""],Conv1DTranspose:[1264,1,1,""],Conv2D:[1265,1,1,""],Conv2DTranspose:[1266,1,1,""],Conv3D:[1267,1,1,""],Conv3DTranspose:[1268,1,1,""],DepthwiseConv2D:[1269,1,1,""],Dropout:[1270,1,1,""],LSTM:[1271,1,1,""],Linear:[1272,1,1,""],MultiHeadAttention:[1273,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1263,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1264,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1265,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1266,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1267,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1268,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1269,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1270,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1271,3,1,""],get_initial_state:[1271,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1272,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1273,3,1,""]},"ivy.stateful.module":{Module:[1275,1,1,""]},"ivy.stateful.module.Module":{__init__:[1275,3,1,""],build:[1275,3,1,""],build_mode:[1275,3,1,""],built:[1275,3,1,""],check_submod_rets:[1275,3,1,""],get_mod_key:[1275,3,1,""],mod_depth:[1275,3,1,""],mod_height:[1275,3,1,""],mod_with_top_mod_key_chain:[1275,3,1,""],save_weights:[1275,3,1,""],show_mod_in_top_mod:[1275,3,1,""],show_structure:[1275,3,1,""],show_v_in_top_v:[1275,3,1,""],sub_mods:[1275,3,1,""],track_submod_call_order:[1275,3,1,""],track_submod_rets:[1275,3,1,""],v_with_top_v_key_chains:[1275,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1277,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1277,3,1,""]},"ivy.stateful.optimizers":{Adam:[1279,1,1,""],LAMB:[1280,1,1,""],LARS:[1281,1,1,""],Optimizer:[1282,1,1,""],SGD:[1283,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1279,3,1,""],set_state:[1279,3,1,""],state:[1279,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1280,3,1,""],set_state:[1280,3,1,""],state:[1280,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1281,3,1,""],set_state:[1281,3,1,""],state:[1281,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1282,3,1,""],set_state:[1282,3,1,""],step:[1282,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1283,3,1,""],set_state:[1283,3,1,""],state:[1283,3,1,""]},"ivy.stateful.sequential":{Sequential:[1285,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1285,3,1,""]},"ivy.verbosity":{cprint:[1290,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1289,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1278,1279,1280],"02886":1245,"100":[1145,1245,1287],"141592653589793":841,"2021":1245,"2102":1245,"360":[1125,1137,1139],"718281828459045":841,"754":[841,847,848,851,863],"999":[1091,1093,1094,1098,1278,1279,1280],"abstract":[920,935,1245,1278,1282],"boolean":[40,41,851,853,862,920,955,967,970,984,993,994,996,1002,1003,1036,1038,1039,1043,1044,1045,1077,1087,1091,1097,1122,1123,1124,1141,1142,1143,1145],"break":43,"case":[15,18,19,40,41,42,43,851,852,854,855,856,861,863,920,959,966,969,994,997,1062,1064,1065,1114,1117,1119,1145,1189,1192,1196,1245,1262,1273,1274,1275,1278,1282,1291],"catch":[994,1018],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,395,437,438,847,849,920,922,923,924,925,926,927,929,930,932,933,934,935,947,948,970,994,998,1049,1091,1105,1145,1189,1191,1198,1239,1241,1242,1245,1248,1249,1250,1251,1252,1253,1255,1256,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1291],"default":[15,18,19,40,41,42,43,842,843,844,845,846,865,866,867,868,869,872,873,875,876,877,918,919,920,929,930,937,938,942,943,944,945,946,949,950,951,952,959,962,963,964,969,970,977,978,979,980,994,996,997,999,1000,1008,1009,1010,1011,1014,1015,1016,1027,1028,1029,1034,1036,1037,1046,1048,1049,1052,1054,1057,1060,1061,1064,1065,1068,1070,1072,1074,1075,1084,1086,1087,1091,1094,1096,1097,1098,1099,1100,1102,1106,1114,1117,1119,1141,1142,1143,1144,1145,1189,1190,1191,1193,1197,1198,1201,1202,1204,1205,1208,1210,1211,1212,1213,1214,1215,1216,1218,1219,1223,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1237,1238,1239,1240,1241,1242,1243,1244,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285],"final":[40,41,43,994,1027,1047,1048,1145,1262,1273,1288],"float":[40,41,42,43,841,842,843,844,846,847,848,851,852,854,855,856,861,863,865,867,879,898,904,920,929,930,953,959,962,966,969,970,978,985,994,997,1008,1009,1011,1027,1028,1032,1033,1048,1066,1067,1068,1074,1075,1091,1093,1094,1096,1098,1099,1100,1107,1109,1113,1125,1133,1141,1142,1143,1144,1145,1201,1204,1205,1218,1220,1226,1234,1237,1238,1239,1240,1241,1242,1243,1244,1262,1270,1273,1276,1277,1278,1279,1280,1281,1282,1283],"function":[15,40,41,43,391,392,393,394,397,398,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,841,843,844,845,846,848,849,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,869,873,876,877,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,922,923,924,925,926,927,929,930,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1248,1249,1250,1278,1281,1282,1283,1287,1288,1291],"import":[43,1245,1288,1291],"int":[40,41,42,43,390,391,392,393,394,489,842,843,844,845,846,847,848,849,865,866,867,868,869,872,873,875,876,877,879,898,904,918,919,920,942,943,944,945,946,949,950,951,952,957,958,964,970,979,981,986,994,999,1000,1005,1010,1011,1015,1016,1019,1020,1021,1024,1027,1028,1029,1034,1037,1046,1047,1048,1056,1057,1061,1062,1064,1065,1070,1071,1072,1073,1076,1078,1079,1084,1086,1089,1091,1093,1094,1098,1107,1111,1112,1114,1117,1141,1142,1143,1144,1145,1189,1198,1201,1202,1203,1205,1206,1208,1210,1211,1212,1213,1214,1215,1216,1218,1223,1226,1227,1228,1229,1230,1231,1232,1233,1237,1239,1241,1242,1243,1244,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1276,1277],"long":[43,1226,1236],"new":[40,41,43,489,842,843,844,846,851,860,970,974,994,995,1005,1019,1020,1021,1024,1027,1028,1029,1030,1057,1062,1064,1065,1066,1067,1074,1075,1076,1091,1094,1096,1098,1099,1100,1107,1109,1111,1113,1125,1127,1131,1132,1138,1140,1145,1189,1199,1200,1201,1202,1243,1244,1245,1251,1252,1262,1272,1276,1277,1278,1279,1280,1281,1282,1283,1288,1291],"public":[994,1012],"return":[15,16,17,18,19,40,41,42,43,489,842,843,844,845,846,851,852,853,854,855,856,857,858,859,861,862,863,865,866,867,872,873,875,876,877,879,898,904,918,919,920,929,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,955,956,958,959,963,964,965,966,967,969,970,974,975,976,977,978,979,980,981,982,983,984,985,986,993,994,995,996,997,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1034,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1061,1062,1063,1064,1065,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1102,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1189,1190,1191,1193,1197,1198,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1251,1252,1262,1271,1272,1278,1282,1287,1288,1291],"short":[43,1226,1236,1245,1291],"static":[40,41,918,919],"super":1145,"true":[40,41,42,439,445,473,476,489,490,851,857,858,862,865,867,872,873,875,876,877,918,919,920,994,996,1004,1006,1023,1027,1036,1038,1087,1088,1091,1094,1096,1097,1098,1099,1100,1102,1114,1117,1141,1142,1143,1144,1145,1189,1190,1197,1201,1202,1208,1210,1211,1212,1213,1214,1215,1216,1218,1219,1226,1234,1239,1240,1241,1242,1262,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283],"try":[40,41,994,1085,1145],"var":[40,41,1141,1142,1143,1291],"while":[40,41,42,851,862,1145],AND:[851,853,875,876,1122,1123],But:1291,For:[43,851,852,854,855,856,861,863,994,997,1007,1076,1091,1097,1105,1114,1119,1125,1126,1245,1251,1252,1288,1291],Its:[1125,1129],NOT:[851,862],Not:841,One:[40,41,43,994,1020,1062,1201,1203,1291],Ones:[1245,1253],PRs:43,Such:[994,1012],That:1288,The:[15,16,17,18,19,40,41,42,43,842,845,851,852,853,854,855,856,857,858,859,861,862,863,865,866,867,868,869,872,873,875,876,877,879,898,904,918,919,920,929,930,936,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,959,962,963,964,965,966,969,970,974,975,976,981,982,983,984,993,994,997,1001,1002,1005,1006,1008,1009,1010,1011,1013,1014,1017,1018,1022,1027,1029,1030,1037,1040,1041,1042,1044,1046,1048,1050,1052,1054,1057,1058,1061,1062,1064,1065,1066,1067,1068,1071,1072,1073,1074,1075,1076,1079,1087,1090,1091,1093,1094,1096,1098,1099,1100,1102,1105,1107,1109,1111,1113,1114,1117,1119,1120,1125,1126,1128,1129,1133,1134,1135,1136,1137,1139,1141,1142,1143,1144,1145,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1237,1238,1239,1240,1241,1242,1243,1244,1245,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1280,1281,1282,1288,1291],There:[43,1245,1288],These:[43,1245],Use:43,Used:[1189,1190,1197,1274,1275],Using:[1245,1246,1291],With:[40,41,1114,1117,1208,1210,1211,1212,1213,1214,1215,1216,1245,1287,1291],__array__:[994,1001],__call__:[1262,1273,1274,1275],__del__:1145,__dict__:[1145,1288],__enter__:1145,__exit__:1145,__getitem__:1145,__getstate__:1145,__init__:[40,41,42,43,59,60,82,213,395,396,437,438,520,651,920,921,928,929,930,931,932,933,934,935,970,971,972,973,1091,1092,1145,1149,1156,1245,1248,1249,1250,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1291],__iter__:1145,__len__:1145,__next__:1145,__pow__:43,__repr__:1145,_assign_vari:1287,_axi:1145,_base:[1189,1190,1197],_compute_node_da_ratio:1145,_compute_node_strs_da:1145,_concat_unify_arrai:1145,_counter:1145,_cur_framework:[43,1145],_da_direct:1145,_da_directions_flip:1145,_da_step_tim:1145,_da_tim:1145,_da_tune_count:1145,_data:1145,_delta_da_dim_s:1145,_delta_sf:1145,_dict:1145,_dim_siz:1145,_first_da_tune_step:1145,_first_ns_tune_step:1145,_fn:1145,_forward:[1245,1287],_get_kalman_param:1291,_get_prior:1291,_get_some_model:1291,_handle_flat_arrays_in_out:43,_index:[1189,1190,1197],_input_queu:1145,_length:1145,_max_depth:1145,_max_node_dim_step_ratio:1145,_max_node_dim_step_s:1145,_max_split_factor_step_s:1145,_mean_unify_arrai:1145,_min_bas:[994,1075,1243,1244,1276,1277],_min_denomin:[994,1074],_min_node_dim_s:1145,_min_sf_tune_step:1145,_min_unit_node_tune_step:1145,_model:1291,_native_wrapp:43,_node_mapp:1145,_node_percent_mem:1145,_node_str:1145,_node_str_da_ratio:1145,_node_strs_da:1145,_node_strs_kei:1145,_node_strs_n:1145,_node_util:1145,_ns_step_tim:1145,_ns_time:1145,_ns_tune_count:1145,_num_nod:1145,_num_work:1145,_observed_config:1145,_output_queu:1145,_paramet:1287,_percent_mem_inc_per_sf:1145,_percent_mem_inc_per_unit_da_dim:1145,_percent_util_inc_per_unit_da_dim:1145,_ret_fn:1145,_safety_factor:1145,_save_dir:1145,_shift_da_split:1145,_shift_n:1145,_slice:1145,_step:[1278,1282],_sum_unify_arrai:1145,_timeout:1145,_tune:1145,_tune_da:1145,_tune_n:1145,_tune_step:1145,_unit_da_tune_count:1145,_unroll_step:1291,_with_node_mappig:1145,_worker:1145,_worker_class:1145,_worker_fn:1145,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,920,929,935,1145,1274,1275,1278,1282],abil:1245,abl:[40,41],about:[847,848,849],abov:[43,842,845,865,866,1201,1203],above_height:[40,41],abs:[294,439,569,701,865,867,994,1145],absolut:[40,41,994,995],abstractmethod:1145,accept:[15,43,851,862,1245],access:[40,41,43,1288],accord:[40,41,847,848,994,1011,1029,1064,1065,1084,1089],accordingli:[865,867,875,876,877],accur:[59,395,437,438,920,932,933,934,935,970,1091,1253,1255,1256,1258,1259,1261],aco:[789,1125],acosh:[789,1125],across:[40,41,920,929,930,939,940,942,943,944,945,946,952,962,963,994,999,1000,1002,1003,1145,1189,1193],act:43,activ:[1219,1220,1221,1222,1223,1224,1225,1245,1249,1250],actual:1288,adam:[1091,1093,1094,1098,1245,1278,1280,1287],adam_step:1091,adam_upd:1091,adapt:[1091,1099,1278,1281],add:[40,41,43,1145,1239,1240,1241,1242,1243,1244,1245,1276,1277,1288],added:[43,994,1074,1075,1284,1285],adding:[43,994,1005],addit:[40,41,43,994,1019,1020,1021,1243,1244,1262,1272],addition:43,address:43,adher:43,adjac:[994,997],adopt:[43,994,1012],affect:[994,997],affin:[1276,1277],after:[851,863,994,1046,1091,1094,1095,1096,1098,1099,1100,1107,1108,1243,1244,1278,1279,1280,1281,1282,1283,1291],after_1:[994,1011,1089],after_n:[994,1011,1089],again:43,against:[40,41,1114,1117,1208,1210,1211,1212,1213,1214,1215,1216],agnost:[43,1245,1287,1288],aim:1291,algebra:1114,algorithm:[1226,1227,1228,1229,1230,1231,1232,1233,1262,1263,1264,1265,1266,1267,1268,1269,1291],align:[40,41,43,994,1005],aliv:[920,954,956,960,994,1031,1055,1059],all:[15,16,17,18,19,40,41,43,110,236,424,548,679,842,845,865,867,868,869,875,918,919,920,929,954,960,994,995,996,1002,1003,1012,1031,1037,1059,1073,1114,1119,1141,1142,1143,1144,1145,1189,1190,1191,1197,1198,1201,1202,1205,1208,1210,1211,1212,1213,1214,1215,1216,1226,1236,1245,1288,1291],all_depth:[40,41],all_equ:994,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1189,all_tru:[40,41],alloc:[43,842,845,920,1145],allow:[994,1047,1048,1049,1274,1275],allow_dupl:[994,1049],alon:[920,959,969,1145,1245],along:[40,41,43,489,865,867,868,869,872,873,875,876,877,920,943,944,945,946,949,950,951,952,964,994,1010,1015,1016,1029,1046,1047,1048,1061,1072,1076,1079,1086,1114,1117,1141,1142,1143,1144,1145,1201,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216],alongsid:[1287,1288],alpha:[1218,1220],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,851,854,920,1145],also:[40,41,43,994,997,1091,1094,1141,1142,1143,1144,1189,1190,1191,1197,1198,1226,1235,1245,1262,1272,1287],altern:1287,alwai:[40,41,43,1091,1097,1102],among:[40,41],amount:[920,966,1145,1245],angl:[851,856,1125,1126,1130],ani:[15,16,17,18,19,40,41,43,110,236,424,548,679,875,918,919,920,922,925,929,930,932,941,942,945,946,951,994,996,997,1001,1018,1019,1020,1021,1022,1023,1036,1044,1049,1074,1075,1091,1095,1145,1189,1190,1193,1197,1198,1199,1200,1201,1205,1245,1251,1252,1274,1275,1287,1288,1291],anoth:[40,41,43,970,976,1245],another_backend:43,anyth:[43,1291],anywai:43,apart:43,api:[1245,1246],appear:[43,994,1024],append:[40,41,865,866,1145],appli:[15,18,19,40,41,994,1019,1020,1021,1091,1098,1099,1114,1120,1122,1123,1124,1141,1142,1143,1189,1193,1196,1198,1218,1219,1220,1221,1222,1223,1224,1225,1226,1235,1237,1238,1243,1244,1245,1248,1249,1250,1276,1277],applic:[1189,1193,1198,1226,1237,1238,1245,1291],approxim:[43,851,852,855,856,860,861,879,904,1218,1219],arang:[130,294,439,489,569,701,994,1047,1048],arbitrari:[40,41,920,949,950,952,1145],arc:[1125,1130],arcco:[1125,1126],arctan:[1125,1129],area:[851,852,1245],arg:[15,16,17,40,41,43,59,63,920,929,942,946,952,964,994,1019,1020,1021,1065,1145,1251,1252,1274,1275],arg_nam:994,arg_stateful_idx:[1274,1275],argmax:[130,439,569,701,994],argmin:[130,439,569,701,994],args_clon:1145,args_dist:1145,args_to_ivi:[15,1245],args_to_n:[15,1245],args_uni:1145,argsort:[107,233,421,545,676,872],argument:[15,16,17,18,19,40,41,42,43,59,63,918,919,920,929,930,942,946,952,994,997,998,1006,1018,1049,1065,1125,1126,1145,1189,1193,1251,1252,1274,1275],aris:[1245,1291],arithmet:[43,1208,1211,1214,1216],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:489,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,130,294,439,489,569,701,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,872,873,875,876,877,898,904,920,938,939,940,943,944,945,946,949,950,951,952,954,956,960,964,965,970,974,980,985,986,994,995,996,997,999,1000,1002,1003,1004,1005,1007,1008,1009,1010,1011,1013,1014,1015,1016,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1034,1036,1037,1038,1039,1040,1041,1042,1044,1045,1046,1047,1048,1050,1051,1052,1053,1055,1056,1057,1058,1059,1061,1062,1063,1064,1065,1070,1072,1073,1076,1077,1078,1079,1081,1082,1083,1084,1086,1087,1088,1089,1090,1091,1093,1094,1097,1098,1102,1104,1105,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1145,1189,1191,1198,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1262,1270,1271,1273,1278,1282,1287,1288],arrang:[994,1019],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,390,391,392,393,394,395,397,398,841,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,872,873,875,876,877],array_api_methods_to_test:43,array_builtin:[43,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917],array_equ:[294,701,994],array_lik:[489,994,1001],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,994],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1245],arraywithgener:[22,1245],arraywithgradi:[24,1245],arraywithimag:[26,1245],arraywithlinalg:[28,1245],arraywithlog:[30,1245],arraywithmath:[32,1245],arraywithmeta:[34,1245],arraywithrandom:[36,1245],arraywithreduct:[38,1245],arriv:[40,41,42],articl:1245,arxiv:1245,as_arrai:[40,41,994,1034,1070],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[437,439,448,920,938,970,977,978,979,980],as_tensor:439,as_vari:[40,41],as_zero:[40,41],asarrai:[439,994],ascend:[872,873],asin:[789,1125],asinh:[86,400,524,655,851],aspect:[1107,1112],assert:[40,41,994,1004,1145],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:994,associ:[43,1114,1121],assum:[851,855,1288,1291],astyp:[439,970],asynchron:[40,41,42],at_dev:[40,42,920,933,934],at_kei:[40,41],at_key_chain:[40,41],at_nod:1145,atan2:[789,1125],atan:[789,1125],atanh:[789,1125],attent:[43,1226,1237,1238,1262,1273],attribut:[0,6,40,41,847,848,849,994,1058,1090],audienc:[1245,1288],author:1245,automat:43,avail:[40,41,43,920,955,957,958,967,994,1020,1145],averag:[1091,1093,1094,1098,1141,1142,1143,1208,1211],average_across_step:[1141,1142,1143],avoid:[43,920,1145,1288],axes:[40,41,43,439,470,482,483,865,867,868,869,875,876,877,920,964,994,999,1000,1011,1024,1078,1084,1089,1114,1117,1145,1208,1210,1211,1212,1213,1214,1215,1216],axes_length:[40,41,994,1019,1020,1021],axi:[40,41,439,441,442,446,447,453,461,462,463,468,469,471,865,866,867,868,869,872,873,875,876,877,920,922,925,932,943,944,945,946,949,950,951,952,964,994,999,1000,1010,1011,1014,1015,1016,1024,1029,1046,1047,1048,1061,1072,1073,1076,1078,1079,1086,1089,1145,1201,1207,1208,1210,1211,1212,1213,1214,1215,1216,1218,1223,1239,1241,1242],axis0:[40,41,994,1078],axis1:[40,41,865,866,994,1078],axis2:[865,866],back:[43,1274,1275,1278,1282],backend:[15,17,19,40,41,390,391,392,393,394,395,397,398,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,487,488,489,490,920,955,958,967,970,976,984,993,994,1039,1043,1091,1094,1096,1098,1099,1100,1105,1145,1245,1246,1251,1252,1278,1279,1280,1281,1282,1283,1287,1288,1291],backend_nam:43,background:[1245,1288],backprop:1291,backward:[875,876,877,1287],band:[994,1027],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,395,437,438,439,463,851,860,861,879,904,920,922,923,924,925,926,927,929,930,932,933,934,935,970,994,1032,1048,1066,1075,1091,1145,1208,1209,1245,1248,1249,1250,1253,1255,1256,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1291],basi:43,batch:[40,41,865,867,920,962,963,994,1027,1037,1107,1111,1114,1120,1141,1142,1143,1144,1145,1226,1235,1243,1244,1276,1277],batch_shap:[439,455,994,1037,1056,1107,1108,1109,1110,1111,1112,1113,1114,1121,1201,1202,1226,1236,1237,1238,1262,1271],batch_siz:[489,490,1145,1201,1202,1226,1227,1228,1229,1230,1231,1232,1233],bayesian:1291,becaus:[43,994,997],becom:[43,994,1007,1125,1130,1291],been:[994,1019,1020,1021,1201,1202],befor:[40,41,43,920,964,1141,1142,1143,1145,1189,1198,1208,1210,1211,1212,1213,1214,1215,1216,1226,1237,1238,1291],before_1:[994,1011,1089],before_n:[994,1011,1089],begin:[1189,1190,1197,1288],behaviour:[43,1291],behind:[1091,1094,1096,1098,1099,1100,1245],being:[40,41,43,994,997,1060,1068,1145],believ:43,belong:[40,41],below:[43,842,845,865,866,1245,1288,1291],below_depth:[40,41],benefit:1245,bernoul:[1226,1234,1262,1270],best:[43,994,1049,1245],beta1:[1091,1093,1094,1098,1278,1279,1280],beta2:[1091,1093,1094,1098,1278,1279,1280],beta:[1243,1244],between:[40,41,42,847,848,994,997,1114,1119,1189,1193,1201,1203,1239,1241,1242,1278,1280],bia:[1226,1235,1236,1262,1263,1264,1265,1266,1267,1268,1269,1272],bias_initi:[1262,1263,1264,1265,1266,1267,1268,1269,1272],bilinear:[1107,1108],bilinear_resampl:[166,348,478,612,774,1107],bilinearli:[1107,1108],binari:[851,853,1239,1240],binary_cross_entropi:1239,bit:[395,847,848,849,970,981,1107,1109,1113,1245],bitwis:[851,853],bitwise_and:[86,217,400,524,655,851],bitwise_oper:[0,7,8],block:[1245,1288],bool:[15,18,19,40,41,42,43,851,857,858,859,862,865,867,872,873,875,876,877,879,898,918,919,920,938,951,955,959,964,967,969,970,980,994,996,1002,1003,1015,1018,1022,1023,1027,1034,1036,1044,1049,1070,1072,1086,1087,1088,1091,1094,1095,1096,1097,1098,1099,1100,1102,1114,1117,1141,1142,1143,1144,1145,1189,1190,1191,1193,1197,1198,1201,1202,1208,1210,1211,1212,1213,1214,1215,1216,1218,1219,1226,1234,1251,1252,1262,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283],both:[43,994,1014],bottom:1245,boundari:[40,41,1201,1205],branch:[43,918,919],brittl:43,broadcast:[40,41,43,851,853,859,865,867,875,876,877,879,898,904,994,1005,1022,1051,1052,1053,1061,1114,1117,1125,1130,1133,1208,1210,1211,1212,1213,1214,1215,1216],broadcast_to:[294,701,994],build:[1145,1245,1262,1273,1274,1275],build_mod:[1262,1273,1274,1275],builder:[43,1245],built:[920,994,997,1145,1262,1273,1274,1275],builtin:43,builtin_ab:[249,879],builtin_add:[249,879],builtin_and:[249,879],builtin_bool:[249,879],builtin_contain:[249,879],builtin_deepcopi:[249,879],builtin_dir:[249,879],builtin_eq:[249,879],builtin_float:[249,879],builtin_floordiv:[249,879],builtin_g:[249,879],builtin_getattr:[249,879],builtin_getattribut:[249,879],builtin_getitem:[249,879],builtin_gt:[249,879],builtin_int:[249,879],builtin_invert:[249,879],builtin_l:[249,879],builtin_lt:[249,557,688,879],builtin_mul:[249,879],builtin_n:[249,879],builtin_neg:[249,879],builtin_or:[249,879],builtin_po:[249,879],builtin_pow:[43,249,879],builtin_radd:[249,879],builtin_rand:[249,879],builtin_rfloordiv:[249,879],builtin_rmul:[249,879],builtin_ror:[249,879],builtin_rpow:[249,879],builtin_rsub:[249,879],builtin_rtruediv:[249,879],builtin_rxor:[249,879],builtin_setitem:[249,879],builtin_some_op:43,builtin_sub:[249,879],builtin_truediv:[249,879],builtin_xor:[249,879],busi:43,bypass:1288,cach:[920,936,994,1006],cache_fn:994,calcul:[40,41,42,43,851,852,855,856,860,861,863,879,904,1125,1133],call:[43,920,964,994,1060,1068,1085,1091,1095,1145,1189,1190,1193,1197,1262,1273,1274,1275,1278,1282,1288,1291],callabl:[40,41,918,919,920,929,930,964,994,1006,1018,1020,1049,1085,1141,1142,1143,1144,1145,1189,1193,1194,1195,1197,1198,1226,1237],can:[43,920,962,963,964,994,1062,1107,1109,1145,1245,1287,1288,1291],cancel_join_thread:1145,cannot:43,captur:1245,cast:[40,41,130,294,439,569,701,970,994,1010,1107,1109,1113],catch_except:[994,1018],categori:43,caus:43,ceil:[86,217,400,524,655,851,994,997],cell:[1226,1236,1262,1271],certain:[40,41,994,997,1047,1048],chain:[40,41,1141,1142,1143,1284,1285],chang:[43,920,994,1062,1145,1189,1191,1198,1245,1287],channel:[994,1027,1107,1109,1110,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272],check:[15,16,17,18,19,40,41,43,920,959,969,970,975,984,993,994,1004,1023,1036,1044,1077,1087,1091,1097,1145,1189,1190,1197,1245,1288],check_nest:[1189,1197],check_shap:[40,41],check_submod_ret:[1274,1275],check_typ:[40,41],choic:[1245,1288],choleski:[778,1114],choos:[851,862,994,1088,1114,1119,1125,1130,1245],choose_random_framework:59,chosen:[40,41,994,997,1088],chunk:[920,962,963,964,1145],chunk_siz:[920,964,1145],circl:[1125,1126,1128],clark:1245,clear:[43,920,936,1145],clear_framework_stack:59,clear_mem_on_dev:[437,693,920],click:1245,clip:[40,41,294,439,701,994,1008,1009,1051,1053,1245],clip_matrix_norm:994,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,994],clipped_delta:1145,clone:[40,41,920,939,940,941,942,1145],clone_arrai:1145,clone_it:1145,clone_nest:1145,clonedit:1145,cloneditem:1145,clonednest:1145,close:[43,1107,1112,1125,1128,1145,1291],closest:[851,854,970,975],closest_valid_dtyp:970,code:[40,41,42,43,489,1245,1246,1287,1288],codebas:[920,962,963,1145,1245,1288,1291],codomain:[851,852,855,856,861,863],colab:1245,collect:[15,40,41,437,439,473,478,482,486,487,489,879,918,920,970,994,1091,1107,1114,1122,1125,1145,1189,1201,1208,1218,1226,1239,1243,1248,1262,1276,1278],color:[40,41,42,1289,1290],column:[994,1037],combin:[40,41,42,1107,1112,1245,1291],combined_batch_s:1145,come:1288,command:1245,comment:43,commit:1291,common:[40,41,43,1125,1130],common_key_chain:[40,41],commun:[43,1245,1288],communuti:43,compar:[40,41,872,873,994,996,1002,1003],comparison_oper:[0,9,10],compat:[43,851,853,859,865,867,875,876,877,879,898,904,994,1022,1062,1125,1133,1245,1291],compil:[294,439,701,1274,1275,1278,1279,1280,1281,1282,1283],compile_on_next_step:[1274,1275,1278,1279,1280,1281,1282,1283],complet:[40,41,43,1114,1119,1145],complex:[1288,1291],compliant:[851,862],compon:[994,1014],composit:43,comput:[40,41,851,853,859,862,865,867,879,898,920,964,994,1008,1009,1015,1016,1022,1050,1091,1093,1094,1095,1096,1098,1099,1100,1102,1104,1107,1110,1114,1115,1116,1117,1118,1119,1122,1123,1124,1125,1126,1128,1129,1130,1134,1135,1136,1137,1139,1189,1193,1208,1209,1210,1211,1212,1213,1214,1215,1216,1226,1227,1228,1229,1230,1231,1232,1233,1235,1237,1239,1240,1241,1242],concat:[40,41,920,949,950,951,952,964,994,1027,1145],concaten:[40,41,130,294,439,569,701,994,1027,1145,1245],concatten:[40,41,920,949,950,951,952,964,1145],condit:[439,918,919,994,1088,1189,1197],conditon:[1189,1197],config:[40,41,1145],config_list:1145,configur:[40,41],conflict:43,conform:43,conjunct:1288,connect:[1262,1272,1273],consid:[40,41,851,862,1114,1119,1287,1291],consist:[40,41,920,952,1145,1208,1209,1274,1275,1288],constant:[920,929,930,994,1011,1145,1189,1193,1239,1240,1241,1242,1243,1244,1253,1254,1258,1261,1274,1275,1276,1277,1288],constant_kwarg:1145,constant_pad:[294,439,569,701,994],constitu:[40,41],construct:[994,1079,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287],constructor:[40,41,42,994,998,1284,1285],consum:[920,1145],cont_feat_dim:[1226,1237],contaienr:[40,41],contain:[15,18,19,42,43,842,844,845,846,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,875,876,877,879,898,904,920,939,943,964,970,974,994,995,999,1000,1007,1008,1009,1012,1022,1036,1051,1053,1063,1074,1075,1091,1093,1094,1096,1098,1099,1100,1125,1133,1141,1142,1143,1144,1145,1201,1202,1208,1210,1211,1212,1214,1216,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[439,701,994],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[439,994,1054,1226,1237,1262,1273],context_dim:[1262,1273],contextmanag:[59,60],continu:[43,1145,1288],contract:[40,41,1208,1209],contribut:[1245,1246],contributor:[43,1245],control:1245,conv1d:[197,379,503,831,1226,1245,1262],conv1d_transpos:[197,379,503,831,1226],conv1dtranspos:[1245,1262],conv2d:[197,379,503,638,831,1226,1245,1262],conv2d_transpos:[197,379,503,831,1226],conv2dtranspos:[1245,1262],conv3d:[197,379,503,638,831,1226,1245,1262],conv3d_transpos:[197,379,503,831,1226],conv3dtranspos:[1245,1262],convent:[40,41,1208,1209],conver:[920,936,947,959,966,969,1145],convers:[16,17,18,19,40,41,1145,1245],convert:[15,16,17,18,19,40,41,43,920,947,948,970,976,982,983,994,1071,1082,1083,1107,1109,1113,1114,1121,1145,1189,1191,1198,1245,1252],convert_dtyp:970,convolut:[1226,1227,1228,1229,1230,1231,1232,1233,1262,1263,1264,1265,1266,1267,1268,1269],cool:43,cooler:43,coordin:[994,1052,1125,1126,1128,1130],copi:[40,41,43,489,994,1013,1145,1189,1191],copy_arrai:[439,701,994],copy_nest:1189,core:[437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,487,488,489,490,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,922,923,924,925,926,927,929,930,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1245],corner:43,correct:[43,1245,1288],correctli:[40,41,43,1114,1117,1125,1130,1208,1210,1211,1212,1213,1214,1215,1216],correspond:[40,41,43,879,904,994,1010,1201,1202],cos:[86,400,524,655,851,994,1027,1125,1126,1139,1288],cosh:[86,400,524,655,789,851,1125],cosin:[851,855,856,1125,1126,1127,1132],cost:[1091,1093,1094,1096,1098,1099,1100,1141,1142,1143,1144],cost_fn:[1141,1144],could:1291,count:[40,41,868,869,875,876,877,1145,1208,1213,1215],cours:43,cprint:1289,cpu:[40,41,43,920,957,959,965,966,969,994,997,1001,1029,1030,1037,1047,1048,1056,1057,1058,1064,1065,1090,1145,1201,1202,1203,1204,1205,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1284,1285,1287,1288],creat:[40,41,842,843,844,846,920,929,930,994,997,1001,1028,1029,1030,1037,1047,1048,1056,1057,1058,1064,1065,1081,1090,1091,1104,1145,1201,1202,1203,1204,1205,1245,1246,1251,1252,1253,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1291],create_if_abs:[40,41],create_vari:1253,creation:[40,41,42,43],creation_funct:[390,391,392,393,394,842,843,844,845,846],crop:[1107,1111],crop_siz:[1107,1111],cross:[294,701,994,1239,1240,1241,1242],cross_entropi:1239,cuda:[40,41,920,929,948,965,994,997,1001,1029,1030,1037,1047,1048,1056,1057,1058,1064,1065,1090,1145,1201,1202,1203,1204,1205,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1284,1285],cumprod:[130,294,439,701,994],cumsum:[701,994],cumul:[994,1015,1016],current:[40,41,42,43,920,929,953,954,956,960,970,976,984,993,994,1017,1031,1039,1043,1055,1059,1145,1189,1190,1197,1245,1291],current_framework:59,current_framework_str:[439,701,994,1145],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1226,1227,1228,1229,1230,1231,1232],d_out:[1226,1227,1228,1229,1230,1231,1232],da_can_termin:1145,da_dim_s:[920,1145],da_direct:1145,da_tune_step:[920,1145],dai:1291,daniel:1245,data:[40,41,42,43,842,843,844,845,846,848,849,851,852,853,854,855,856,857,858,859,861,862,863,865,866,867,868,869,872,873,875,876,877,879,898,904,920,922,923,924,925,926,927,932,933,934,948,970,974,975,976,980,981,982,983,984,985,986,993,994,997,1001,1022,1028,1037,1044,1057,1058,1062,1073,1077,1090,1091,1097,1105,1125,1133,1145,1226,1235,1245],data_format:[1226,1227,1228,1229,1230,1231,1232,1233,1262,1263,1264,1265,1266,1267,1268,1269],data_type_funct:[395,397,398,847,848,849],dataset:[40,41],datatyp:[40,41,970,975,985,986],dcdw:[1091,1093,1094,1096,1098,1099],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1091,1098,1099,1278,1280,1281],decay_lambda:[1091,1098,1099,1278,1280,1281],decid:[40,41,1291],decompos:[1114,1115,1119],decomposit:[1114,1115,1119,1120],decor:43,decrement:[994,1040],dedic:[1091,1105,1251,1252],deep:[40,41,1245],deep_copi:[40,41],deeper:[920,942,946,952,1145,1189,1198,1245],deepli:[1189,1191],def:[43,60,82,213,396,520,651,921,928,931,971,972,973,1092,1145,1149,1156,1245,1254,1257,1260,1287,1288,1291],default_dev:43,default_devic:920,default_dtyp:[43,970],default_float_dtyp:970,default_int_dtyp:970,default_key_color:[40,41,42],default_nod:1145,default_rng:489,default_v:[994,1018],defaultdevic:[920,921],defaultdtyp:[970,971],defaultfloatdtyp:[970,972],defaultintdtyp:[970,973],defer:43,defin:[43,994,1014,1056,1058,1090,1201,1203],definit:43,degre:[1125,1137,1139],del:1145,delai:43,delet:43,delta:[1091,1093,1145],delta_dim_s:1145,delta_percent_mem:1145,delta_sf:1145,delta_util:1145,demo:1245,denomin:[994,1026,1033,1067,1074,1075,1243,1244,1276,1277],denot:43,dens:[1262,1272],depend:[43,851,852,855,856,860,861,872,873,879,904,994,1088,1114,1120,1245],depth:[40,41,439,464,920,942,946,952,994,1035,1056,1145,1189,1198,1274,1275],depth_cutoff:[40,41],depthwis:[1226,1233,1262,1269],depthwise_conv2d:[197,379,503,638,831,1226],depthwiseconv2d:[1245,1262],deriv:[1091,1093,1094,1096,1098,1099,1100,1189,1191,1198,1245,1274,1278,1282,1284],descend:[872,873,1114,1120],descent:[1091,1096,1278,1283],describ:[40,41,1208,1209],descript:[865,867],design:[1245,1246],desir:[40,41,920,965,970,974,994,997,1001,1037,1038,1057,1058,1090,1107,1112,1145,1208,1210,1211,1212,1214,1216],desired_aspect_ratio:[478,481,1107,1112],desired_percent_increas:1145,detail:1291,detect:[40,41,1189,1190,1197],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,851,852,853,855,856,857,858,861,863,865,866,867,875,876,877,879,904,920,955,957,958,967,970,974,975,981,984,985,986,993,994,996,997,1001,1002,1003,1036,1039,1043,1044,1077,1087,1091,1097,1125,1133,1141,1142,1143,1144,1145,1226,1237],dev:[40,41,42,43,123,288,437,439,440,443,453,454,455,462,463,464,465,466,467,472,489,490,562,693,920,923,924,926,927,929,930,933,934,936,937,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,956,959,960,961,962,963,964,965,966,969,994,997,1001,1029,1030,1037,1047,1048,1056,1057,1058,1064,1065,1090,1091,1106,1201,1202,1203,1204,1205,1251,1252,1253,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1284,1285],dev_clon:[40,41,920],dev_clone_arrai:920,dev_clone_it:920,dev_clone_nest:920,dev_dist:[40,41,920],dev_dist_arrai:920,dev_dist_it:920,dev_dist_nest:920,dev_from_str:[43,123,288,437,562,693,920],dev_mapp:920,dev_str:[40,41],dev_to_str:[123,288,437,562,693,920],dev_unifi:920,dev_unify_arrai:920,dev_unify_it:920,dev_unify_nest:920,dev_util:920,devclonedit:920,devcloneditem:920,devclonednest:920,devdistit:920,devdistitem:920,devdistnest:920,develop:[43,1245,1288,1291],deviat:[40,41,1201,1204,1208,1214,1243,1244,1276,1277],devic:[21,40,41,43,390,391,392,394,438,439,452,842,843,844,845,846,922,923,924,925,926,927,929,930,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,994,997,1001,1028,1029,1030,1037,1047,1048,1056,1057,1058,1064,1065,1090,1091,1106,1201,1202,1203,1204,1205,1245,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1284,1285],devmanag:[920,928],devmapp:[920,930],devmappermultiproc:920,diag:[1114,1120],diagon:[100,226,414,538,669,842,845,865,994,1037],dict:[15,16,17,18,19,40,41,42,920,922,925,929,930,932,942,943,944,945,946,994,1019,1020,1021,1049,1141,1142,1143,1145,1189,1191,1192,1193,1196,1198,1251,1252],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,847,848,920,939,940,943,944,1114,1119,1145,1226,1235,1245,1288,1291],differenti:[1245,1288],dilat:[1226,1227,1228,1229,1230,1231,1232,1233,1262,1263,1264,1265,1266,1267,1268,1269],dim:[40,41,43,994,1056,1107,1108,1112,1114,1120,1145,1262,1273],dim_siz:[40,41,920,1145],dimens:[40,41,42,842,845,865,866,867,868,869,875,876,877,920,951,994,1005,1010,1014,1019,1020,1021,1024,1027,1034,1046,1056,1061,1062,1072,1073,1076,1084,1086,1107,1111,1114,1117,1120,1141,1142,1143,1144,1145,1201,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1223,1226,1227,1228,1229,1230,1231,1232,1233,1236,1239,1241,1242,1262,1263,1264,1265,1266,1267,1268,1269,1272,1273],dimension:[40,41,489,865,867,875,876,877,994,1072,1073,1114,1120],direct:1145,directli:[43,1189,1198,1288,1291],directori:[994,1069,1080],discord:43,discret:[1239,1241],discuss:43,disk:[40,41,1107,1109],distanc:[994,997],distribut:[40,41,920,939,943,944,945,946,1145,1201,1202,1203,1204,1205,1226,1234,1262,1270,1274,1275],distribute_nest:1145,distributedarrai:[40,41],distrubt:[1239,1241],dive:[1245,1288],divid:[40,41,994,1072,1074,1125],dividend:[1125,1133],divis:[994,1026,1033,1067,1074,1075,1091,1093,1094,1098,1125,1133,1278,1279,1280],divisor:[1091,1093,1094,1098,1125,1133,1278,1279,1280],doc:1245,docstr:43,document:43,doe:[40,41,43,994,997,1072,1287],doesn:[1114,1119,1245],doing:43,domain:[851,852,855,856,861,863,1125,1126],don:[43,1245],done:43,door:1291,dot:[1114,1116,1226,1237,1238,1262,1273],down:1287,downscal:[994,1008,1009],drag:[1245,1291],draw:[1201,1202,1204,1205],drawn:[1201,1202,1203,1204,1205],drop:[1245,1291],dropout:[1226,1245,1262,1273],dropout_r:[1262,1273],ds_tune_step:920,dtype:[40,41,43,130,294,390,391,392,394,395,397,398,439,440,443,444,452,455,465,472,569,701,842,843,844,846,847,848,849,974,975,976,977,978,979,981,982,983,984,985,986,987,988,989,990,991,992,993,994,997,1001,1028,1037,1056,1057,1058,1090],dtype_bit:[130,294,439,569,701,970],dtype_from_str:[43,130,294,439,569,701,970],dtype_in:[439,449,450,451,970,976,981,982,983,984,985,986,993],dtype_to_str:[130,294,439,569,701,970],duplic:[40,41,43],dure:[40,41,43,918,919,994,1085,1091,1093,1094,1098,1141,1142,1143,1144,1274,1275,1278,1279,1280,1282],dynam:[43,439,445,918,919],each:[40,41,42,43,851,852,853,854,855,856,857,858,859,860,861,862,863,879,898,904,920,929,930,939,940,941,942,943,944,945,951,963,964,994,995,996,1011,1022,1061,1072,1076,1079,1089,1091,1094,1096,1098,1099,1100,1107,1110,1114,1120,1125,1128,1133,1135,1136,1145,1189,1193,1201,1202,1208,1209,1226,1227,1228,1229,1230,1231,1232,1233,1234,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1288],eager:1288,easi:1291,easili:1245,econom:1291,ecosystem:1245,edg:[994,1007,1011,1089],effect:[1091,1100],effective_grad:[1091,1100],effici:1291,einop:[40,41,994,1019,1020,1021],einops_rearrang:[40,41,994],einops_reduc:[40,41,994],einops_repeat:[40,41,994],einstein:[40,41,1208,1209],einsum:[40,41,183,367,491,628,811,1208],either:[40,41,43,851,861,994,1018,1049,1052,1054,1141,1142,1143,1144,1145,1262,1273,1274,1275,1288],eleg:1145,element:[40,41,43,489,842,845,851,852,853,854,855,856,857,858,859,860,861,862,863,868,869,875,876,877,879,898,904,920,941,945,951,970,974,994,995,997,999,1000,1002,1003,1007,1008,1009,1015,1016,1022,1025,1026,1037,1038,1051,1053,1061,1063,1072,1083,1088,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1145,1208,1209,1211,1213,1215,1218,1219,1220,1221,1222,1223,1224,1225,1226,1234,1262,1270],elementwis:[40,41],elementwise_affin:[1276,1277],elementwise_funct:[851,852,853,854,855,856,857,858,859,860,861,862,863],elemtn:[1201,1202],elif:1145,els:[43,994,1004,1018,1023,1145],elsewher:[994,1088],emphas:1245,empti:[40,41,77,208,390,514,645,842,875,876,877,1114,1119,1145],enabl:[40,41,42,43,1245],encapsul:[847,849],encod:[994,1027,1107,1109],end:[994,997,1245,1288],engag:43,ensur:43,entir:[40,41,875,876,877,920,964,1145,1245,1262,1271],entri:[40,41,994,1047,1048,1072,1073],entropi:[1239,1240,1241,1242],enumer:1145,environ:1245,eps:[395,847,848],epsilon:[1091,1093,1094,1098,1239,1240,1241,1242,1243,1244,1276,1277,1278,1279,1280],equal:[40,41,439,569,701,851,857,865,866,872,873,994,996,1002,1003,1011,1072,1089,1125,1137,1139,1201,1205],equality_matrix:[994,996],equat:[40,41,1208,1209],equival:[851,862,865,867,994,997,1125,1139],erf:[487,789,1125],error:[40,41,43,920,994,1073,1125,1134,1145,1218,1219,1274,1275,1278,1282],essenti:43,etc:[40,41,43,920,965,994,997,1001,1029,1030,1037,1047,1048,1056,1057,1058,1064,1065,1090,1145,1201,1202,1203,1204,1205,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1284,1285,1291],euclidean:[865,867],euler:841,evalu:[40,41,851,860,861,875,876,877,994,1052,1189,1190,1197],even:[43,1291],evenli:[40,41,994,997,1047,1048,1072],everi:[43,994,996,1291],exact:[40,41],exampl:[43,918,919,994,1007,1076,1114,1119,1245,1287,1288,1291],example_input:[439,445,918,919],exc_tb:1145,exc_typ:1145,exc_val:1145,exce:[994,1053],except:[40,41,44,47,875,876,877,994,997,1004,1010,1018,1085,1145],excess_s:1145,excit:[1245,1288],exclud:[59,61,994,997,1201,1205],exclus:[40,41,439,447,460,473,475,994,1015,1044,1091,1097,1201,1203],execut:[43,994,1085,1288],execute_with_gradi:[163,343,473,607,768,1091,1245,1287],exist:[40,41,994,1018,1145,1245,1278,1282,1291],exp:[789,1125],expand:[40,41,994,1024,1027],expand_dim:[40,41,294,701,994,1145],expect:[994,998],explain:[43,1288],explicitli:[43,1262,1271,1273,1274,1275,1288],expon:[43,879,904,994,1075],exponenti:[43,879,904,1125,1134,1135],expos:[994,1001,1012],express:[851,855,994,1052],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1091,1095],eye:[1114,1116],fabian:1245,fabio:1245,factor:[920,929,962,963,964,1091,1093,1094,1098,1099,1114,1120,1145,1226,1227,1228,1229,1230,1231,1232,1233,1262,1263,1264,1265,1266,1267,1268,1269,1278,1279,1280,1281],fail:43,falck:1245,fall:[1274,1275,1278,1282],fallback_to_non_compil:[1274,1275,1278,1282],fals:[15,18,19,40,41,42,59,66,67,68,69,70,437,439,447,448,460,468,471,473,474,475,482,483,851,857,858,862,865,867,872,873,875,876,877,920,938,951,959,964,969,970,977,978,979,980,994,996,1015,1018,1023,1027,1034,1044,1049,1070,1072,1086,1088,1091,1094,1095,1096,1097,1098,1099,1100,1114,1117,1141,1142,1143,1144,1145,1189,1190,1191,1193,1197,1198,1208,1210,1211,1212,1213,1214,1215,1216,1251,1252,1274,1275,1278,1279,1280,1281,1282,1283],fan_in:1253,fan_mod:1253,fan_out:1253,far:[1189,1190,1197,1287],faster:[918,919],favourit:[1245,1287],feasibl:1291,feat_dim:[1226,1237,1238],fed:[920,964,1145],feed:[920,964,1145],few:43,field:1291,file:[40,41,43,994,1069,1080,1274,1275],filepath:[40,41],fill:[40,41,842,843,844,846,994,1028,1057,1201,1203],fill_valu:[439,452,994,1028],filter:[1226,1227,1228,1229,1230,1231,1232,1233,1262,1263,1264,1265,1266,1267,1268,1269,1291],filter_s:[1262,1263,1264],filter_shap:[1262,1265,1266,1267,1268,1269],find:[40,41,43,1291],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[81,82,212,213,395,396,519,520,650,651,847],finish:[1245,1291],finit:[851,857],first:[40,41,43,489,851,853,859,865,866,918,919,920,951,994,1002,1010,1014,1022,1047,1048,1076,1078,1091,1095,1114,1120,1141,1142,1143,1144,1145,1189,1190,1197,1201,1207,1208,1213,1215,1262,1273,1274,1275,1278,1282,1288,1291],firstlayersiren:[1245,1253],firstli:[1288,1291],fist:[920,964,1145],fit:[40,41,437,439,473,478,482,486,487,489,994,1061,1107,1112],fix:43,fkt:1291,flag:[40,41,43,1091,1097],flat:[40,41,43,994,1061,1064],flat_list:[40,41],flatten:[40,41,865,867,994,1027,1061,1208,1210,1211,1212,1214,1216],flatten_key_chain:[40,41,1274,1275],flexibl:[1245,1288],flip:[40,41,103,229,417,541,672,868],float32:[43,439,455,970,974,982,983,994,997,1001,1037,1057,1058,1090],float_dtyp:[970,978,988],float_img_to_uint8_img:1107,floor:[294,439,701,994,1026,1145],floormod:[294,439,701,994],fluid:1291,folder:[43,1245],follow:[40,41,43,847,849,865,867,920,964,994,1040,1041,1042,1074,1075,1091,1094,1096,1098,1099,1100,1145,1189,1193,1198,1226,1237,1238,1245,1262,1272,1278,1282],followng:[847,848],fomaml_step:1141,forget:[1091,1093,1094,1098,1278,1279,1280],fork:[994,1054,1245,1246],forkserv:[994,1054,1145],form:[15,16,17,18,19,40,41,842,845,865,866,994,1001,1091,1094,1096,1098,1099,1100,1189,1191,1198,1226],format:[40,41,43,920,938,970,974,976,980,994,997,1001,1037,1057,1058,1090,1145,1208,1209,1245,1287,1288],format_fn:[40,41],format_key_chain:[40,41],forward:[1274,1275,1278,1282,1287],found:[40,41,42],fourier:[994,1027],fourier_encod:994,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,108,111,112,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,230,234,237,238,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,349,350,351,353,354,355,356,357,359,360,363,364,365,366,368,369,370,371,372,373,374,375,378,380,381,382,383,384,385,386,391,392,393,394,396,397,398,401,402,403,404,405,406,407,408,409,410,411,412,415,416,418,422,425,426,438,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,474,475,476,477,479,480,481,483,484,485,488,490,492,493,494,495,496,497,498,501,502,504,505,506,507,508,509,510,515,516,517,518,520,521,522,525,526,527,528,529,530,531,532,533,534,535,536,539,540,542,546,549,550,558,563,564,565,566,567,568,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,608,609,610,611,613,614,615,617,618,619,620,624,625,626,627,629,630,631,632,633,634,635,639,640,641,646,647,648,649,651,652,653,656,657,658,659,660,661,662,663,664,665,666,667,670,671,673,677,680,681,689,694,695,696,697,698,699,700,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,769,770,771,772,773,775,776,777,779,780,781,782,783,784,785,787,788,790,791,792,793,794,795,796,797,798,799,800,801,802,803,805,806,807,808,809,810,812,813,814,815,816,817,818,821,822,823,824,825,826,827,829,830,832,833,834,835,836,837,838,843,844,845,846,848,849,852,853,854,855,856,857,858,859,860,861,862,863,866,867,869,873,876,877,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1123,1124,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1219,1220,1221,1222,1223,1224,1225,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1244,1245,1249,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1275,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1290,1291],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1145,framewrk:[994,1054],free:43,freed:43,freeli:43,frequenc:[994,1027],from:[40,41,42,43,851,863,865,866,868,869,875,876,877,920,929,930,964,970,976,994,1018,1029,1030,1037,1062,1073,1081,1088,1091,1094,1098,1107,1111,1114,1119,1141,1142,1143,1144,1145,1189,1191,1198,1201,1202,1203,1204,1205,1208,1213,1215,1226,1234,1237,1245,1251,1252,1262,1270,1273,1278,1282,1287,1288],from_cal:[1274,1275],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,130,294,439,569,701,847,848,994,1114,1119,1245],full_matric:[1114,1120],fulli:[43,1245,1262,1272,1273,1287],func:[40,41,439,445,473,474,918,919,920,964,994,1006,1091,1095,1145],further:[43,1291],furthermor:1291,futur:1291,gain:1253,gamma:[1243,1244],gather:[40,41,130,294,439,569,701,994,1030],gather_nd:[40,41,130,294,439,569,701,994],gauss:[1125,1134],gaussian:[1218,1219],geglu:[1245,1248],gelu:[377,500,820,1218,1245,1248],gener:[23,40,41,43,437,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,489,918,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1097,1201,1203,1205,1206,1245,1278,1282],geometr:[994,1027],get:[40,41,43,847,848,849,920,929,930,938,953,954,959,963,966,969,970,980,981,994,998,1031,1032,1033,1060,1145,1245,1262,1271,1291],get_all_arrays_in_memori:994,get_all_arrays_on_dev:920,get_framework:59,get_initial_st:[1262,1271],get_min_bas:994,get_min_denomin:994,get_mod_kei:[1274,1275],get_num_dim:[439,701,994],get_referrers_recurs:994,getfullargspec:1145,gist:1245,give:[43,994,1062,1288],given:[40,41,43,842,843,844,846,868,869,920,953,959,962,963,964,966,969,970,974,994,997,1001,1007,1015,1016,1030,1047,1048,1057,1058,1061,1064,1065,1072,1079,1084,1086,1090,1091,1093,1094,1096,1098,1099,1100,1114,1116,1121,1125,1126,1145,1189,1194,1195,1201,1204,1205,1207,1208,1211,1213,1214,1215,1216,1226,1227,1228,1229,1230,1231,1232,1233,1251,1252,1291],global:[40,41,42,920,929,930,937,962,963,964,970,977,978,979,994,1017,1032,1033,1060,1066,1067,1068,1074,1075,1091,1106,1145,1243,1244,1276,1277],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1245,1253,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272],good:43,googl:1245,got:[43,1245],gpu0:43,gpu2:43,gpu:[920,955,958,1145],gpu_is_avail:[437,920,1145],grad:[1245,1278,1282,1287],gradient:[25,40,41,474,475,476,477,920,964,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1110,1141,1142,1143,1144,1245,1278,1279,1280,1281,1282,1283,1287,1291],gradient_descent_upd:[1091,1141,1142,1143,1144],gradient_imag:[166,348,478,612,774,1107],gradienttrack:[1091,1092],graph:[1091,1094,1096,1098,1099,1100,1274,1275],greater:[40,41,994,997,1025,1073,1201,1205],green:[40,41,42,1289,1290],grid:[994,1052],group:[1107,1112],guid:[43,1245,1246,1291],gym:1245,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1291,half:[994,997,1145,1201,1205],hand:1245,handl:[40,41,42,43,918,919,920,936,938,947,948,959,966,969,1091,1094,1096,1098,1099,1100,1145,1278,1279,1280,1281,1282,1283],happen:43,has:[40,41,43,994,1076,1114,1119,1125,1129],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,994],hasattr:1145,have:[40,41,43,842,843,845,847,848,851,852,853,854,855,856,857,858,859,861,862,863,865,866,867,868,869,872,873,875,876,877,879,898,904,994,1010,1014,1019,1020,1021,1022,1028,1076,1091,1097,1105,1114,1120,1125,1133,1145,1245,1287,1288],haven:43,hdf5:[40,41,1274,1275],head:[1226,1237,1262,1273],head_dim:[1262,1273],height:[1107,1112],height_cutoff:[40,41],help:[43,59,395,437,438,920,932,933,934,935,970,1091,1245,1253,1255,1256,1258,1259,1261],here:[43,1245],hidden:[1226,1236,1262,1271],hierarch:[994,1012],hierarchi:[40,41],high:[40,41,489,1201,1203,1205],higher:[1091,1094,1096,1098,1099,1100,1114,1120],highest:[1201,1203],highest_util:1145,highest_util_nod:1145,highli:1245,highlight:1291,hint:43,hkt:1291,hold:[970,974,994,997,1001,1064,1065],host:1245,hot:[994,1056],hour:43,how:[1245,1262,1273,1274,1275,1288,1291],howev:[43,1288],http:1291,hyperbol:[851,852,856,1125,1127,1131,1132,1138,1140,1218,1225],hypothet:[43,1291],icon:1245,idea:1245,ident:[40,41,43,130,294,439,569,701,994],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[841,847,848,851,863],if_exist:[40,41],ignor:[40,41,1278,1282],ignore_key_error:[40,41],ignore_miss:[1278,1282],ignore_non:[40,41],iii:43,iinfo:[81,212,395,519,650,847],imag:[27,479,480,481,994,1046,1108,1109,1110,1111,1112,1113,1226,1227,1228,1229,1230,1232,1233,1245,1291],image_dim:[1107,1111],imkkhk:1291,immedi:[1245,1288,1291],implement:[43,851,852,855,856,860,861,872,873,879,904,1245,1288,1291],in_featur:[1226,1235],inadvert:43,includ:[40,41,43,865,867,875,876,877,994,997,1036,1074,1075,1087,1189,1190,1201,1205,1262,1272,1273,1276,1277,1287],include_deriv:[1189,1191,1198],include_empti:[40,41],include_inf:[40,41,994,1036,1087],include_nest:[1189,1190],include_self:[40,41],inclus:[43,1201,1203],incom:[1226,1235],increas:[920,942,946,952,994,1011,1024,1089,1145,1189,1198],increasingli:1291,increment:[994,1041,1145],inde:1245,indent:[40,41,42],independ:[1201,1202],index:[40,41,439,489,872,873,994,999,1000,1029,1030,1052,1073,1076,1189,1192,1194,1195,1196,1199],index_nest:1189,indic:[40,41,439,453,454,464,466,467,865,867,872,873,994,999,1000,1029,1030,1038,1056,1064,1065,1189,1190,1192,1194,1195,1196,1197,1199,1200,1201,1202,1218,1223,1226,1227,1228,1229,1230,1231,1232,1233,1243,1244,1262,1263,1264,1265,1266,1267,1268,1269,1274,1275],indices_wher:[130,294,439,701,994],indistinguish:[851,863],inevit:1291,inf:[40,41,865,867,994,1036,1045,1087,1125,1129],infer:[918,919,994,1034,1037,1062,1070,1107,1111,1114,1119,1288,1291],infin:[851,852,854,855,856,857,861,863,865,867,875,876,877,994,1045],infinit:[851,863],inform:[847,848,849,1091,1102],init_c:[1226,1236],init_h:[1226,1236],init_on_first_step:[1278,1282],initi:[40,41,42,43,59,395,437,438,920,932,933,934,935,970,1091,1145,1226,1236,1245,1255,1256,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1278,1282],initialz:[1274,1275],inner:[1141,1142,1143,1144],inner_batch_fn:[1141,1142,1143],inner_batch_shap:[1226,1235],inner_cost_fn:[1141,1142,1143],inner_grad_step:[1141,1142,1143,1144],inner_learning_r:[1141,1142,1143,1144],inner_optimization_step:[1141,1142,1143,1144],inner_v:[1141,1142,1143],innermost:[842,845,865,866],inp:1145,inplac:[40,41,994,1004,1039,1043,1077,1091,1094,1096,1098,1099,1100,1251,1252,1278,1279,1280,1281,1282,1283],inplace_arrays_support:[439,994],inplace_decr:[130,294,439,569,701,994],inplace_incr:[130,294,439,569,701,994],inplace_oper:[0,11,12],inplace_upd:[40,41,130,294,439,569,701,994,1251,1252],inplace_variables_support:[439,994],input:[15,18,19,40,41,42,43,842,845,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,872,873,875,876,877,918,919,920,929,930,937,938,939,942,943,946,952,964,965,970,974,975,977,978,979,980,981,985,986,994,995,996,999,1000,1002,1003,1004,1005,1007,1008,1009,1010,1011,1013,1015,1016,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1034,1036,1037,1038,1040,1041,1042,1044,1045,1046,1050,1051,1052,1053,1061,1063,1070,1071,1073,1076,1077,1078,1079,1081,1082,1083,1084,1086,1087,1089,1091,1095,1097,1102,1106,1107,1108,1109,1110,1111,1113,1114,1117,1119,1120,1122,1123,1124,1125,1127,1129,1131,1132,1133,1137,1138,1139,1140,1141,1142,1143,1144,1145,1201,1202,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1243,1244,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1276,1277,1288],input_ax:[920,964,1145],input_channel:[1262,1263,1264,1265,1266,1267,1268,1271,1272],input_queu:1145,inputs_split:1145,insert:[994,1024],insid:43,inspect:1145,inspir:1291,instal:1245,instanc:[15,16,17,18,19,40,41,43,489,879,898,904,920,929,1145,1251,1252,1284,1285],instead:[40,41,43,489,1208,1210,1211,1212,1213,1214,1215,1216,1291],int32:43,int64:[970,974,994,997,1001,1037,1057,1058,1090],int_dtyp:[970,979,989],integ:[40,41,489,847,849,851,853,854,865,867,875,876,877,970,986,994,997,1025,1063,1072,1201,1203,1206],integr:1245,intend:43,inter:1245,interact:1245,interchang:[40,41,994,1078],interest:1245,interfac:[994,1001,1288],intermedi:[40,41],intern:[40,41,920,1091,1105,1145,1189,1190,1197,1198,1253,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1284,1285],interpol:[994,1046],intersect:[1125,1126],interv:[40,41,875,876,877,994,997,1007,1047,1048,1125,1128,1201,1205],introduc:1291,inv:[778,1114,1291],invalid:[875,876,877],invalid_dtyp:970,invers:[851,852,1114,1116,1118,1125,1126,1127,1128,1129,1131,1291],invert:[1114,1116,1118],invest:1291,investig:43,invoc:[918,919],irrespect:1245,is_al:1145,is_arrai:[130,294,439,569,701,994,1145],is_float_dtyp:970,is_int_dtyp:970,is_mean:1145,is_sum:1145,is_vari:[163,343,473,607,768,1091],isfinit:[86,217,400,524,655,851],isinf:[294,569,701,994],isinst:1145,isnan:[86,217,400,524,655,851],isnumer:1145,issu:[1245,1246],issue_numb:43,item:[15,19,40,41,879,891,892,920,929,930,932,939,941,943,945,951,970,977,994,1012,1035,1074,1075,1145,1189,1193,1194,1195,1198,1199,1200,1245,1274,1275,1287],iter:[15,16,17,18,19,40,41,42,918,919,920,923,924,926,927,929,930,933,934,941,943,944,945,946,951,964,994,996,1005,1010,1011,1037,1052,1057,1061,1062,1065,1070,1072,1076,1079,1084,1089,1145,1189,1190,1191,1193,1197,1198],iterbal:[920,941,945,951,1145],its:[489,920,964,994,1037,1062,1078,1084,1145,1245],itself:[43,1189,1198],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,390,391,392,393,394,395,397,398,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,841,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,872,873,875,876,877,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,922,923,924,925,926,927,929,930,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1248,1249,1250,1251,1252,1253,1255,1256,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1289,1290],ivy_backend:[40,41],ivy_bay:1291,ivy_test:43,ivyfcmodel:1287,ivyh:[40,41,42],ivymodul:[194,828],jame:1245,jax:[43,1091,1097,1245,1291],jax_concat:1245,jnp:1245,join:[40,41,994,1010,1076,1145],journal:1245,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1245,1262,1271,1291],kaimingnorm:[1253,1257],kalman:1291,kalman_filt:1291,kalman_filter_step:1291,kalman_filter_upd:1291,keep:[40,41,920,965,994,1086,1145,1245,1246,1291],keep_inner_v:[1141,1142,1143],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1141,1142,1143],keepdim:[40,41,439,471,482,483,865,867,875,876,877,994,1086,1114,1117,1208,1210,1211,1212,1213,1214,1215,1216],kei:[15,16,17,40,41,42,43,879,884,920,932,994,1012,1141,1142,1143,1145,1189,1192,1196,1226,1237,1238,1245,1251,1252,1262,1273,1278,1282],kept:[40,41,42,1141,1142,1143],kera:1291,kernel:[1226,1236],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,920,929,930,942,946,952,994,998,1019,1020,1021,1049,1145,1189,1193,1274,1275],keyword_color_dict:[40,41,42],kind:[847,848,849,1291],kwarg:[15,16,17,40,41,42,59,63,920,929,942,946,952,994,1049,1145,1251,1252,1274,1275],kwarg_stateful_idx:[1274,1275],kwargs_clon:1145,kwargs_dist:1145,kwargs_uni:1145,label:[43,1239,1240,1241,1242],lamb:[1091,1098,1245,1278],lamb_upd:1091,lambda:[1145,1278,1281,1283,1287],lar:[1091,1098,1099,1245,1278],larger:[847,848,994,1007],largest:[40,41,847,848,849,994,999,1025],lars_upd:1091,last:[40,41,865,866,868,869,872,873,875,876,877,994,997,1014,1046,1072,1076,1114,1117,1120,1208,1213,1215,1218,1223,1226,1236,1262,1272],later:[40,41,994,1006],latest:[1262,1271],layer:[1091,1094,1096,1098,1100,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1243,1244,1245,1253,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1284,1285,1291],layer_norm:1243,layernorm:[1245,1276],layerwis:[1091,1099,1278,1281],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1189,1190,1197],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1218,1219,1220],leaky_relu:[820,1218],learn:[1091,1094,1096,1098,1099,1100,1114,1119,1141,1142,1143,1144,1201,1207,1245,1278,1279,1280,1281,1282,1283,1288,1291],learnabl:[1243,1244,1276,1277],least:43,leav:[15,18,19,40,41,1189,1190,1191,1197,1198],left:[40,41,43,1114,1117,1208,1210,1211,1212,1213,1214,1215,1216,1245],leftmost:[40,41],len:1145,length:[40,41,42,994,997,1062,1073,1084],lenton2021ivi:1245,lenton:1245,less:[40,41,43,86,217,400,524,655,851,854,861,863,865,867,1145,1201,1205],less_util_node_str:1145,let:[1288,1291],level:1245,librari:[851,862,1245,1287,1291],lightweight:1245,like:[43,1091,1097,1201,1205,1245,1287,1288,1291],likewis:43,limit:[40,41,42,43,847,848,849,994,1007,1008,1009],linalg:[29,1115,1116,1117,1118,1119,1120,1121,1245],line:43,linear0:[1245,1287],linear1:1245,linear2:1287,linear:[994,1027,1046,1114,1218,1219,1220,1221,1226,1234,1245,1262,1263,1264,1265,1266,1267,1268,1269,1287],linear_algebra:[482,483,484,485,865,866,867],linear_resampl:[130,294,439,569,701,994],linearli:[994,1027],link:[43,1245],linspac:[130,294,439,569,701,994,997],list:[15,18,19,40,41,390,391,392,394,842,843,844,846,868,869,875,876,877,920,929,930,939,940,942,943,944,946,949,950,964,994,997,1001,1003,1052,1071,1072,1081,1086,1141,1142,1143,1145,1189,1190,1191,1193,1197,1198,1226,1227,1228,1229,1230,1231,1232,1233,1245,1246,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269],list_join:[40,41,42],list_stack:[40,41],liter:[865,867],littl:1288,load:[40,41],loaded_kwarg:1145,loader:1245,local:43,local_set:[994,1035],locat:[43,994,1045,1201,1202],log1p:[86,400,524,655,851],log2:[86,400,524,655,851],log:[789,851,860,994,1048,1125,1145,1239,1240,1241,1242],logarithm:[851,860,861,1125,1136],logic:[31,851,862,875,876,877,1123,1124,1245],logical_and:[358,786,1122],logical_not:[86,217,400,524,655,851],logical_or:[358,786,1122],logit:[1239,1242],logspac:[130,294,439,569,701,994],look:[43,1288,1291],loop:[1141,1142,1143,1144],loss:[1240,1241,1242,1245,1287],loss_fn:[1245,1287],lot:1288,low:[40,41,489,1201,1203,1205],lower:[40,41,43,842,845,994,1051,1201,1205],lower_depth:[1274,1275],lowest:[15,18,19,40,41,1189,1198,1201,1203],lstm:[1226,1236,1245,1262],lstm_updat:[43,1226],machin:[847,848,849,1114,1119,1201,1207,1245,1288,1291],made:43,mai:[851,862,872,873,994,997,1018,1022,1245,1288,1291],main:[842,845,865,866,994,1037,1245],mainli:1245,maintain:[43,872,873],make:[43,489,920,1145,1245,1288],maml:[1141,1142,1143],maml_step:1141,manag:[920,1145],manhattan:[865,867],mani:[40,41,43,994,1072,1245],manipulation_funct:[868,869],manner:[15,18,19,40,41,43,1189,1198],manual:[1189,1190,1197,1291],map:[40,41,42,920,929,994,1045,1145,1189,1194,1195,1198,1262,1273,1287],map_cont:[40,41],map_nest_at_index:1189,map_nest_at_indic:1189,map_sequ:[40,41],mapper:[920,929,930,1145],mark:43,mask:[1226,1237,1238],master:43,match:[40,41,994,1049],match_kwarg:994,math:[33,488,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1145,1245],mathbb:[1114,1121],mathbf:[1114,1121],mathemat:[841,865,867],matmul:[43,294,439,569,701,994,1291],matplotlib:1288,matric:[842,845,865,866,1226,1235],matrix:[40,41,842,845,865,866,994,996,1008,1050,1114,1115,1116,1117,1118,1119,1121,1226,1235,1262,1272],matrix_norm:[40,41,170,352,482,616,778,1114],matter:1245,max:[40,41,395,847,848,849,994,1008,1009,1020,1051,1064,1065,1145,1208,1210,1278,1280],max_batch_s:[40,41],max_chunk_s:[920,964,1145],max_depth:[40,41,920,924,927,934,942,946,952,994,1035,1145,1189,1198],max_dev_dim_step_ratio:920,max_freq:[994,1027],max_length:[40,41],max_node_dim_step_ratio:1145,max_norm:[40,41,994,1008,1009],max_split_factor_step_s:[920,1145],max_trust_ratio:[1091,1098,1278,1280],maxim:[1245,1288,1291],maximis:1245,maximum:[40,41,42,701,920,942,946,952,964,994,999,1007,1008,1009,1027,1091,1098,1145,1189,1198,1208,1210],mayb:[15,18,19],mdi:1145,mean:[40,41,489,920,949,950,951,952,964,994,1020,1141,1142,1143,1144,1145,1189,1193,1201,1204,1208,1211,1214,1216,1253,1287,1291],measur:[1226,1237,1262,1273],mech:1245,mechan:[1245,1291],medic:1291,member:43,memori:[920,936,959,964,966,969,1145,1226,1236,1245],mention:43,merg:43,merge_with_upstream:43,meshgrid:[294,439,701,994],messag:[1289,1290],meta:[35,1142,1143,1144,1245],method:[40,41,42,43,489,994,1001,1012,1052,1064,1065,1091,1098,1099,1145,1189,1190,1197,1198,1245,1262,1273,1274,1275,1288],might:[994,1018,1291],min:[40,41,395,847,848,849,865,867,994,1020,1053,1064,1065,1074,1114,1119,1145,1208,1212],min_bas:[994,1075],min_denomin:[994,1074],min_dev_dim_s:920,min_node_dim_s:1145,min_sf_tune_step:[920,1145],min_unit_dev_tune_step:920,min_unit_node_tune_step:1145,mind:1245,mini:[1243,1244,1276,1277],minimum:[40,41,701,920,970,974,994,997,1000,1001,1007,1032,1033,1066,1067,1074,1075,1145,1208,1212],miss:[1278,1282],ml_framework:[994,997,1114,1119],mod:[994,1026],mod_depth:[1274,1275],mod_height:[1274,1275],mod_with_top_mod_key_chain:[1274,1275],mode:[40,41,482,484,918,919,920,949,950,951,952,964,1114,1119,1120,1145,1288],model:[1245,1287],modul:[40,41,42,59,994,1054,1145,1245,1246,1248,1249,1250,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1276,1277,1284,1285,1291],moment:[1091,1093,1094,1098,1278,1279,1280],more:[43,868,869,994,1076,1145,1245,1288,1291],more_util_node_str:1145,most:[40,41,43,1114,1119,1245,1291],move:[40,41,43,920,965,1145],much:[43,1245,1291],multi:[489,994,1054,1226,1237,1262,1273],multi_head_attent:1226,multi_index_nest:1189,multi_map:[40,41],multi_nod:1145,multidev:[920,931,932,933,952],multidevcontain:[40,41],multidevic:[920,929],multidevit:[920,923,926,929,930,934],multidevitem:[920,922,925],multidevnest:[920,924,927],multiheadattent:[1245,1262],multinod:[1145,1149],multinodecontain:1145,multinodeit:1145,multinodeitem:1145,multinodenest:1145,multinomi:[176,362,489,623,804,1201],multipl:[40,41,875,876,877,994,1049,1072,1114,1116,1208,1210,1211,1212,1213,1214,1216,1243,1244,1262,1272,1288],multipli:[40,41,994,1015,1208,1213],multiprocess:[40,41,42,439,701,920,929,994,1145],must:[40,41,42,43,842,843,844,845,846,851,852,853,854,855,856,857,859,861,862,863,865,866,867,868,869,872,873,875,876,877,879,898,904,920,949,950,951,952,964,994,997,1010,1012,1014,1022,1051,1053,1065,1076,1125,1130,1133,1145,1201,1206,1278,1282],mutabl:[1189,1191,1198],mutlidevic:[920,929],mutlinod:1145,mw_tm1:[1091,1094,1098],mx_concat:1245,mxn:[842,845,865,866],mxnet:[43,1245,1291],my_func:43,mymodel:1245,name:[43,918,919,1287],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1288],nan:[40,41,43,841,851,852,854,855,856,857,858,861,863,875,876,877,994,1036,1087],nativ:[15,17,18,19,40,41,43,920,936,938,947,948,959,966,969,970,975,982,983,1145,1245,1246,1251,1252],native_modul:[1251,1252],native_module_class:[1251,1252],nativearrai:[15,18,19,43,842,845,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,865,867,868,869,872,873,875,876,877,879,898,904,920,938,964,965,970,974,980,985,986,994,995,996,997,999,1000,1001,1002,1003,1005,1007,1008,1009,1010,1011,1013,1014,1015,1016,1019,1020,1021,1022,1024,1025,1026,1027,1029,1030,1034,1036,1037,1038,1045,1046,1047,1048,1050,1051,1052,1053,1056,1057,1058,1061,1062,1063,1064,1065,1070,1072,1073,1076,1078,1079,1081,1082,1083,1084,1086,1087,1088,1089,1090,1145,1189,1191,1198],natur:[851,860,1125,1136,1291],ncdhw:[1226,1231,1232,1262,1267,1268],nchw:[1226,1229,1230,1233,1262,1265,1266,1269],ncw:[1226,1227,1228,1262,1263,1264],ndarrai:[43,390,391,392,393,394,395,397,398,489,994,1082],ndhwc:[1226,1231,1232,1262,1267,1268],nearest:[994,1063],need:[43,994,1008,1009,1226,1228,1230,1232,1245,1262,1264,1266,1268,1291],neg:[40,41,851,857,865,867,868,869,875,876,877,1208,1213,1215,1218,1220],negative_slop:1253,neither:1145,nest:[15,16,17,18,19,40,41,42,920,942,946,952,994,1001,1081,1141,1142,1143,1145,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1274,1275,1278,1279,1280,1281,1282,1283],nested_indices_wher:1189,nested_map:[1145,1189],network:[1226,1235,1245,1246,1248,1262,1274,1275,1291],neural:[1226,1245,1248,1262,1287],never:43,new_node_percent_mem:1145,new_node_util:1145,new_node_utils_kei:1145,new_std:[1243,1244,1276,1277],newli:[43,918,919,994,1005,1006],newlin:[40,41,42],newshap:[994,1005,1062],next:[847,848,1145,1274,1275,1278,1279,1280,1281,1282,1283],nhwc:[1226,1229,1230,1233,1262,1265,1266,1269],node:[40,41,1189,1190,1197],node_clon:1145,node_dist:1145,node_dist_arrai:1145,node_dist_it:1145,node_in:1145,node_mapp:1145,node_str:1145,node_to_str:1145,node_util:1145,nodedistit:1145,nodedistitem:1145,nodedistnest:1145,nodemanag:[1145,1156],nodemapp:1145,nodemappermultiproc:1145,noinspect:[43,921,971,972,973,1092,1145],non:[40,41,851,862,865,867,875,876,877,918,919,970,984,1274,1275,1278,1282,1288],none:[40,41,42,43,59,61,64,390,391,392,394,437,439,440,443,445,452,453,454,455,462,463,464,465,466,467,468,469,470,472,482,483,489,490,842,843,844,846,847,848,849,865,867,868,869,875,876,877,918,919,920,929,930,936,937,962,963,964,965,970,977,978,979,994,997,1001,1017,1018,1023,1028,1029,1030,1035,1037,1039,1040,1041,1042,1043,1047,1048,1054,1056,1057,1058,1061,1064,1065,1066,1067,1072,1073,1074,1075,1084,1085,1090,1091,1094,1096,1098,1099,1100,1106,1107,1111,1114,1117,1119,1141,1142,1143,1144,1145,1189,1190,1193,1197,1198,1201,1202,1203,1204,1205,1208,1210,1211,1212,1213,1214,1215,1216,1226,1228,1230,1232,1235,1236,1237,1238,1243,1244,1251,1252,1253,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285],norm:[40,41,865,867,994,1008,1009,1114,1117,1244,1245,1277,1278,1280],normal:[1201,1204,1243,1244,1276,1277],normalized_idx:[1243,1244],normalized_shap:[1276,1277],notat:[40,41,1208,1209],note:[43,1114,1119],noth:[40,41,1288],notimplementederror:1145,now:[40,41,43,920,965,994,995,1145,1245,1262,1273,1274,1275,1287,1288,1291],np_concat:1245,np_finfo:395,ns_tune_step:1145,num:[439,462,463,994,1047,1048],num_arrai:[40,41],num_arrays_in_memori:994,num_arrays_on_dev:920,num_band:[994,1027],num_channel:[1262,1269],num_chunk:1145,num_chunks_floor:1145,num_class:[1201,1202],num_cpu_cor:920,num_gpu:[123,437,920,1145],num_head:[1226,1237,1262,1273],num_kei:[1226,1237,1238],num_lay:[1262,1271],num_or_size_split:[40,41,439,468,994,1072],num_output:1145,num_queri:[1226,1237,1238],num_sampl:[439,461,489,490,994,1046,1107,1108,1201,1202],num_task:[1141,1142,1143,1144],number:[40,41,42,841,847,848,849,851,854,875,876,877,918,919,920,956,957,958,970,981,985,986,994,997,1007,1011,1024,1027,1034,1037,1046,1047,1048,1051,1055,1061,1072,1079,1083,1087,1089,1114,1120,1141,1142,1143,1144,1145,1201,1202,1206,1208,1210,1211,1212,1214,1216,1226,1237,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1288,1291],numer:[43,851,854,857,858,859,862,879,898,904,994,1032,1033,1066,1067,1074,1075,1125,1133,1253],numhead:[1226,1237],numpi:[40,41,43,390,391,392,393,394,395,397,398,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,994,1082,1114,1119,1120,1208,1209,1245,1287,1288,1291],nwc:[1226,1227,1228,1262,1263,1264],obj:[40,41],object:[40,41,42,59,395,847,848,920,970,974,994,997,1001,1091,1189,1192,1194,1195,1196,1199,1200,1201,1207,1253,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1274,1275],object_in:[439,443,994,1001],observ:1145,obvious:43,occupi:[847,848,849,994,1064,1065],off:[865,866,994,997],offer:1245,offset:[865,866,1243,1244],often:1288,old:[40,41],on_init:[1262,1273,1274,1275],onc:[43,920,964,1145,1201,1202,1245],one:[40,41,43,865,867,868,869,920,949,950,951,952,964,970,976,994,1037,1049,1056,1064,1065,1073,1076,1114,1117,1145,1208,1209,1210,1211,1212,1213,1214,1215,1216,1245,1288,1291],one_hot:[130,439,569,701,994],onearrai:[994,1024],ones:[40,41,77,208,390,514,645,842,994,1037,1056,1058,1245],ones_lik:[130,294,439,569,701,994],ongo:43,onli:[40,41,43,489,851,862,868,869,920,1114,1119,1145,1189,1190,1191,1197,1278,1279,1280,1281,1282,1283,1287,1288],onlin:[43,1245],onto:[920,949,950,965,1145,1189,1193,1198],oom:[920,1145],open:[994,997,1201,1205,1245,1291],opencv:1288,oper:[40,41,994,1004,1019,1020,1021,1047,1048,1077,1091,1094,1096,1098,1099,1100,1122,1123,1124,1226,1227,1228,1229,1230,1231,1232,1233,1235,1245,1246],operand:[40,41,851,852,854,855,856,861,863,1208,1209],oppos:[994,1027],optim:[920,1091,1094,1096,1098,1099,1100,1141,1142,1143,1144,1145,1245,1279,1280,1281,1283,1287,1291],optimizer_upd:1091,option:[15,18,19,40,41,42,43,390,391,392,394,842,843,844,846,865,867,868,869,875,876,877,918,919,920,929,930,938,942,943,944,945,946,949,950,951,952,959,962,963,964,965,969,970,975,980,984,993,994,996,997,999,1000,1001,1008,1009,1010,1015,1017,1018,1027,1028,1029,1030,1034,1036,1037,1044,1046,1047,1048,1049,1052,1054,1056,1057,1058,1061,1064,1065,1068,1070,1072,1073,1074,1075,1076,1084,1086,1087,1090,1091,1094,1096,1097,1098,1099,1100,1102,1107,1111,1114,1117,1119,1141,1142,1143,1144,1145,1189,1190,1191,1193,1197,1198,1201,1202,1208,1210,1211,1212,1213,1214,1215,1216,1218,1219,1223,1226,1234,1235,1237,1238,1239,1240,1241,1242,1243,1244,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1288],ord:[865,867,1114,1120],order:[40,41,42,43,865,867,868,869,872,873,1091,1094,1096,1098,1099,1100,1114,1117,1141,1142,1143,1284,1285],ordered_node_util_kei:1145,org:1291,organ:43,origin:[40,41,42,994,1058,1062,1090,1114,1117],other:[40,41,43,879,881,882,887,889,890,894,896,897,898,899,900,902,904,905,906,907,908,909,911,912,913,915,916,917,918,919,994,996,997,1037,1091,1095,1201,1205,1245,1287,1288,1291],other_i:[43,879,898,904],otherwis:[15,16,17,18,19,40,41,851,857,858,865,867,875,876,877,920,937,970,977,978,979,994,1004,1084,1085,1088,1091,1097,1102,1106,1141,1142,1143,1145,1208,1210,1211,1212,1214,1216],our:[43,1245,1291],out:[43,489,842,845,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,872,873,875,876,877,879,898,994,997,1125,1129,1226,1234,1236,1245,1262,1270],out_feat_dim:[1226,1237],out_featur:[1226,1234,1235],out_i:[851,857,858],outdat:1291,outer:[1141,1142,1143,1144],outer_batch_fn:[1141,1142,1143],outer_batch_shap:[1226,1235],outer_cost_fn:[1141,1142,1143],outer_v:[1141,1142,1143],outlin:1288,output:[40,41,43,842,843,844,846,868,869,920,929,930,964,994,997,1006,1028,1037,1061,1079,1091,1095,1125,1130,1145,1201,1203,1204,1205,1226,1228,1230,1232,1234,1236,1237,1238,1245,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273],output_ax:[920,964,1145],output_axi:1145,output_channel:[1262,1263,1264,1265,1266,1267,1268,1271,1272],output_queu:1145,output_shap:[1226,1228,1230,1232,1262,1264,1266,1268],outsid:[994,1007],over:[40,41,865,867,875,876,877,1114,1117,1201,1205,1208,1210,1211,1212,1214,1216,1243,1244,1276,1277],overal:1288,overflow:[994,997],overhead:1288,overrid:[994,1056,1058,1090],overriden:[1278,1282],overwrit:[40,41,920,964,1145],overwrite_at_key_chain:[40,41],own:[1245,1288,1291],packag:[43,1288],pad:[994,1011,1027,1089,1226,1227,1228,1229,1230,1231,1232,1233,1262,1263,1264,1265,1266,1267,1268,1269],pad_width:[439,994,1011,1089],page:1245,pair:[1226,1238],parallel:[920,929,930,1145],parallelis:[920,929,930,1145],param:[40,41,42,439,453,454,842,843,844,846,920,964,994,995,1029,1030,1056,1057,1145,1274,1275,1287],paramet:[15,16,17,18,19,40,41,42,43,842,843,844,846,865,866,879,898,904,918,919,920,929,930,936,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,959,962,963,964,965,966,969,970,974,975,976,980,981,982,983,984,985,986,993,994,996,997,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1034,1036,1037,1038,1040,1041,1042,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1057,1058,1061,1062,1063,1064,1065,1066,1067,1068,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1102,1104,1105,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287],parameter:[1201,1204,1205],pardo:1245,pars:[994,1012],part:[842,845,1091,1094,1096,1098,1099,1100,1125,1129,1245,1274,1275,1288],partial:[40,41,43,1274,1275],particl:1291,particular:[43,1291],pass:[40,41,42,43,920,929,964,970,975,994,1006,1091,1105,1141,1142,1143,1145,1251,1252,1274,1275,1278,1282,1284,1285],pattern:[40,41,994,1019,1020,1021],peopl:43,per:[920,1145,1226,1227,1228,1229,1230,1231,1232,1233,1262,1263,1264,1265,1266,1267,1268,1269],percent_used_mem_on_dev:920,percent_used_mem_on_nod:1145,percentag:[920,959,1145],perf_count:1145,perform:[40,41,43,875,876,877,920,994,999,1000,1015,1019,1020,1021,1040,1041,1042,1046,1047,1048,1091,1094,1096,1098,1099,1100,1107,1108,1141,1142,1143,1144,1145,1189,1194,1195,1208,1210,1211,1212,1213,1214,1215,1216,1218,1223,1226,1234,1236],period:43,permissable_step:1145,permit:43,permut:[489,994,1078,1084],perpendicular:[994,1014],person:[43,1245],physci:1291,pickl:[40,41,1145],pickle_filepath:[40,41],pinv:[352,778,1114],pip:1245,pipelin:1287,pkk:1291,pkkm1:1291,pkm1km1:1291,place:[40,41,43,842,843,844,846,920,965,994,1024,1028,1040,1041,1042,1145,1278,1279,1280,1281,1282,1283],placehold:[43,1189,1198],pleas:[43,489,1114,1119],point:[43,841,842,843,844,846,847,848,851,852,854,855,856,861,863,865,867,970,985,994,997,1125,1133],popul:[40,41,1201,1202],popular:1291,population_s:[489,490,1201,1202],portabl:[1245,1246],posit:[15,16,17,847,848,851,857,875,876,877,920,942,946,952,994,995,997,1024,1027,1145,1201,1206,1251,1252],possibi:[40,41],possibl:[43,994,1049,1081,1107,1112,1291],post:[1243,1244],post_shap:[40,41],power:[43,879,904,910,994,1032,1066,1075,1253],practic:1245,pre:[920,1145,1245],pre_shap:[40,41],precis:[847,848,851,863],pred:[1239,1240,1241,1242],predict:[1239,1240,1241,1242,1291],preprint:1245,present:[40,41],preserv:[40,41,42,868,869,1091,1102],preserve_typ:[40,41,473,476,1091,1102],press:1245,prevent:[43,1091,1093,1094,1098,1145,1278,1279,1280],prevet:43,previou:[1091,1094,1098],previous:[994,1006],prime:1245,print:[40,41,42,920,960,994,1059,1245,1287],print_all_arrays_in_memori:994,print_all_arrays_on_dev:920,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1278,1282],prob:[489,490,1201,1202,1226,1234,1262,1270],probabl:[1201,1202,1226,1234,1262,1270],problem:[43,1291],process:[43,920,929,930,959,969,994,1054,1145],process_specif:[920,959,969,1145],prod:[40,41,994,1020],produc:[920,929,930,1145],product:[40,41,994,1014,1015,1050,1208,1209,1226,1237,1238,1262,1273],profil:[123,288,437,562,693,920,1145],progress:43,project:[1245,1287,1288,1291],promot:[43,851,852,853,855,856,861,863,865,867,879,904,1125,1133],prompt:1245,properli:43,properti:[40,41,395,920,932,1145,1274,1275,1278,1279,1280,1281,1283],provid:[40,41,43,868,869,875,876,877,918,919,920,937,970,977,978,979,984,993,994,1018,1056,1058,1065,1090,1091,1094,1096,1098,1099,1100,1106,1145,1245,1262,1271,1278,1279,1280,1281,1282,1283,1288],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1114,1118],pull:[1245,1246],pure:[40,41,1245,1291],purpos:[43,1291],put:1145,pybroadexcept:1145,pyprotectedmemb:1145,pyshadowingbuiltin:43,pyshadowingnam:[921,971,972,973,1092,1145],python:[40,41,920,959,969,994,997,1145,1245],pytorch:[1091,1094,1096,1098,1099,1100,1114,1119,1245,1278,1279,1280,1281,1282,1283,1287,1288,1291],pyunresolvedrefer:1145,quadrant:[1125,1130],qualiti:43,queri:[40,41,879,893,914,920,953,963,1145,1226,1237,1238,1262,1273],query_dim:[1262,1273],query_kei:[40,41],queue:[40,41,42,920,929,930,994,1060,1068,1145],queue_class:[920,929,930,1145],queue_load_s:[40,41,42],queue_timeout:[40,41,42,994,1145],quick:[489,1245],quickli:[43,1287],radian:[851,855,1125,1126,1128,1130,1137,1139],rai:[1125,1126],rais:[40,41,43,875,876,877,879,904,994,1004,1032,1066,1073,1075,1085,1145,1274,1275,1278,1282],ram:[920,959,966,969,1145],randint:[176,362,489,623,804,1201],random:[37,40,41,490,1202,1203,1204,1205,1206,1207,1245],random_crop:1107,random_norm:[176,362,489,623,804,1201],random_uniform:[176,362,489,623,804,1201],randomli:[489,1107,1111,1226,1234,1262,1270],rang:[489,994,997,1047,1048,1125,1130,1145,1245,1287,1291],rank:[865,867,875,876,877,994,1011,1086,1089],rate:[1091,1094,1096,1098,1099,1100,1141,1142,1143,1144,1262,1273,1278,1279,1280,1281,1282,1283],rather:[40,41,43,920,964,994,997,1044,1091,1097,1145],ratio:[920,1091,1098,1107,1112,1145,1278,1280],raw:[40,41,1114,1119],raw_delta:1145,reach:[43,920,942,946,952,1145,1189,1198],read:[40,41],readi:[1145,1287],real:[1125,1126,1129],realiti:1288,rearrang:[40,41,994,1019,1021],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1141,1143],receiv:[43,920,929,930,994,998,1049,1145,1262,1272],receivess:[920,1145],receivng:[1141,1144],recev:[1141,1142,1143],recognit:1291,recommend:[851,862,1245],rectifi:[1218,1220,1221],recurr:[1226,1236],recurrent_bia:[1226,1236],recurrent_kernel:[1226,1236],recurs:[40,41,1189,1190,1191,1197,1198],redefin:43,reduc:[40,41,875,876,877,920,964,994,1020,1114,1119,1145,1208,1210,1211,1212,1213,1214,1215,1216],reduce_max:[40,41,183,367,491,628,811,1208],reduce_mean:[40,41,183,367,491,628,811,1208,1245,1287],reduce_min:[40,41,183,367,491,628,811,1208],reduce_prod:[40,41,183,367,491,628,811,1208],reduce_std:[40,41,367,1208],reduce_sum:[40,41,183,367,491,628,811,1145,1208],reduce_var:[40,41,183,367,491,628,811,1208],reduct:[39,40,41,439,466,467,875,876,877,994,1020,1064,1065,1209,1210,1211,1212,1213,1214,1215,1216,1245],refactor:43,refer:[43,851,860,875,876,877,1091,1093,1094,1114,1121,1262,1272,1291],reflect:43,reflected_oper:[0,13,14],regard:[920,1145],regardless:[40,41,918,919],register_paramet:1287,reimplement:1291,rel:[865,866,868,869,872,873,1091,1094,1096,1098,1099,1100],rel_slice_obj:1145,relat:43,relev:[1278,1279,1280,1281,1282,1283],relu:[820,1218,1219,1220,1245,1287],remain:[43,994,1062,1189,1193],remaind:[40,41,994,1026,1072],remov:[40,41,43,865,866,994,1073,1141,1142,1143],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,868,869],rep:[994,1079],repeat:[40,41,43,294,701,994,1021,1079,1145,1288],repeated_config_check:[920,1145],repeatedli:[1189,1196],repetit:[40,41,994,1061,1079],replac:[40,41,43,489,490,994,1007,1064,1065,1201,1202],repo:[43,1245],repositori:43,repres:[43,851,852,856,970,976,981,1226,1235],represent:[40,41,42,43,841,847,848,849,851,853,920,947,948,970,976,982,983,994,1071,1081,1145],reptil:[1141,1144],reptile_step:1141,request:[1245,1246],requir:[43,851,863,918,919,970,974,994,997,1001,1251,1252],resampl:[994,1046],reserv:43,reshap:[40,41,43,489,701,994],reshape_lik:[40,41],respect:[851,853,859,879,898,994,1022,1091,1093,1094,1095,1096,1098,1099,1100,1114,1119,1125,1133,1141,1142,1143,1144],respond:43,respons:[43,1145],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,875,876,877,879,898,904,920,929,994,997,1022,1064,1065,1076,1114,1117,1122,1123,1124,1125,1133,1145,1208,1210,1211,1212,1213,1214,1215,1216,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1245],ret:1145,ret_dict:1145,ret_fn:[920,929,930,1145],retain:[1091,1095],retain_grad:[473,474,1091,1095],retreiv:1145,retrn:[994,1071],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1141,1142,1143,1144],return_sequ:[1262,1271],return_st:[1262,1271],rev:[994,1018],revers:[40,41,868,869,994,1018,1084],review:43,right:[40,41,43],rk_e:1291,robot:1245,ronald:1245,root:[43,851,863],round:[294,439,701,851,854,863,994,997,1145],row:[994,1037,1201,1202],rule:[43,879,904,994,997,1125,1133],run:[43,920,929,1091,1093,1094,1098,1141,1142,1143,1144,1145,1245,1246,1262,1273,1274,1275],safe:[920,929,1145],safety_factor:[920,1145],same:[15,16,17,40,41,43,842,845,851,854,865,866,868,869,872,873,920,929,930,964,965,970,974,994,995,1010,1025,1026,1029,1030,1056,1058,1063,1064,1065,1076,1090,1091,1097,1102,1114,1120,1125,1129,1141,1142,1143,1145,1208,1209,1226,1227,1228,1229,1230,1231,1232,1233,1245,1262,1263,1264,1265,1266,1267,1268,1269,1287,1291],same_arrai:[40,41],sampl:[994,1046,1107,1108,1201,1202,1204,1205,1226,1234,1245,1262,1270],satisfi:[994,1001,1114,1116,1121],save:[40,41,994,1069,1080,1107,1109,1274,1275],save_dir:[437,438,920,935,1145],save_weight:[1274,1275],scalar:[865,867,994,1007,1056,1083,1087],scale:[920,962,963,1091,1099,1145,1226,1234,1237,1238,1243,1244,1262,1270,1273,1278,1281],scaled_dot_product_attent:1226,scatter:[994,1056,1064,1065],scatter_flat:[130,294,439,569,701,994],scatter_nd:[130,294,439,569,701,994],scene:[1091,1094,1096,1098,1099,1100],schemat:1245,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,851,853,859,865,866,920,951,994,1002,1014,1022,1060,1068,1078,1091,1093,1094,1098,1141,1143,1145,1278,1279,1280],secondli:1291,sector:[851,852],see:[43,59,395,437,438,489,851,853,859,865,867,875,876,877,879,898,904,920,932,933,934,935,970,994,997,1047,1048,1091,1125,1133,1245,1253,1255,1256,1258,1259,1261],seed:[40,41,176,489,804,1201],seed_valu:[40,41,489,1201,1206],seem:1245,seen_set:[994,1035],select:[994,1001,1073,1288,1291],self:[40,41,43,59,395,437,438,879,898,904,920,932,933,934,935,970,1091,1145,1245,1253,1255,1256,1258,1259,1261,1278,1282,1287,1291],self_i:[879,898],sent:1145,seper:[43,994,1027],seq:[40,41,42,1208,1209,1274,1275],sequenc:[15,16,17,40,41,42,43,489,918,919,920,929,930,939,940,941,942,943,944,945,946,949,950,964,970,974,994,997,1001,1003,1005,1010,1011,1037,1049,1052,1057,1061,1062,1065,1072,1076,1079,1084,1089,1091,1095,1107,1111,1112,1114,1117,1145,1189,1200,1201,1203,1205,1208,1210,1211,1212,1213,1214,1215,1216,1226,1227,1228,1229,1230,1231,1232,1233,1243,1244,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1271,1274,1275,1276,1277,1278,1282,1284,1285],sequenti:1245,seri:43,set:[15,18,19,40,41,872,873,920,949,950,962,963,964,994,996,1017,1037,1066,1067,1068,1069,1091,1094,1096,1097,1098,1099,1100,1114,1117,1145,1189,1190,1197,1199,1200,1201,1202,1206,1208,1210,1211,1212,1213,1214,1215,1216,1245,1262,1271,1278,1279,1280,1281,1282,1283,1288,1291],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:920,set_default_dtyp:970,set_default_float_dtyp:970,set_default_int_dtyp:970,set_default_nod:1145,set_exception_debug_mod:44,set_framework:[40,41,43,59,1145,1245,1287,1288,1291],set_ivy_backend:[40,41],set_min_bas:994,set_min_denomin:994,set_nest_at_index:1189,set_nest_at_indic:1189,set_queue_timeout:994,set_split_factor:[920,1145],set_stat:[1278,1279,1280,1281,1282,1283],set_tmp_dir:994,set_with_grad:1091,setter:1145,sever:1291,sgd:[1245,1278],shape0:1145,shape:[40,41,43,390,391,392,394,439,452,467,489,701,842,843,844,845,846,865,866,868,869,872,873,920,932,970,974,994,995,1005,1010,1011,1024,1025,1026,1028,1030,1034,1037,1056,1057,1058,1061,1062,1063,1064,1065,1071,1073,1076,1089,1090,1107,1111,1114,1116,1119,1125,1129,1130,1145,1201,1203,1204,1205,1208,1209,1226,1228,1230,1232,1262,1264,1265,1266,1267,1268,1269,1276,1277],shape_slic:[40,41],shape_to_tupl:994,share:[40,41,1245,1288],shift:1145,should:[40,41,42,43,489,842,845,851,852,853,854,855,856,857,858,859,861,862,863,865,866,867,879,898,904,918,919,920,994,1005,1006,1012,1056,1062,1091,1094,1096,1098,1099,1100,1125,1133,1145,1208,1209,1245],show:[40,41,1245,1291],show_mod_in_top_mod:[1274,1275],show_structur:[1274,1275],show_sub_contain:[40,41],show_v:[1274,1275],show_v_in_top_v:[1274,1275],shown:[40,41],shp:1145,shuffl:[40,41,176,489,804,1201],shuffle_h5_fil:[40,41],side:43,sigmoid:[820,1218,1245,1287],signatur:[43,59,395,437,438,439,473,478,482,486,487,489,920,932,933,934,935,970,1091,1253,1255,1256,1258,1259,1261],signific:1291,similar:[43,1226,1237,1262,1273],similarli:[1114,1119],simpl:[43,994,1023,1245,1288,1291],simpler:43,simplest:1288,simpli:[40,41,43,1245,1288,1291],simultan:1245,sin:[789,994,1027,1125,1139,1288],sinco:1288,sine:[851,852,1125,1128,1137,1138],singl:[40,41,918,919,920,929,930,949,950,951,952,994,1073,1083,1087,1107,1112,1145,1201,1204,1205,1208,1210,1211,1212,1213,1214,1215,1216,1245,1288,1291],singleton:[865,867,875,876,877],singular:[1114,1120],sinh:[789,1125],siren:[1245,1253],situat:43,size:[40,41,42,439,466,865,866,875,876,877,920,943,944,945,946,962,963,964,994,997,1005,1047,1048,1064,1072,1107,1111,1114,1117,1120,1145,1201,1202,1204,1205,1208,1210,1211,1212,1213,1214,1215,1216,1262,1263,1264],size_ordered_arrai:[40,41],skew:[1114,1121],skinv:1291,skip:[40,41],slice:[40,41,994,1029,1030,1145,1189,1196],slice_kei:[40,41],slice_obj:[40,41,1145],slice_via_kei:[40,41],slide:[1226,1227,1228,1229,1230,1231,1232,1233,1262,1263,1264,1265,1266,1267,1268,1269],slope:[1218,1220],small:[1239,1240,1241,1242,1243,1244,1245,1276,1277,1288],smaller:[994,1007],smallest:[40,41,847,848,849,851,854,994,1000],smallest_norm:[395,847,848],softmax:[192,500,820,1218,1226,1237,1238],softplu:[820,1218],solut:43,solv:1291,some:[40,41,43,994,997,1091,1093,1094,1096,1098,1099,1100,1105,1226,1234,1245,1262,1270,1288,1291],some_backend:43,some_namespac:43,someth:[43,1291],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,873,1114,1120,1145],sort_by_kei:[40,41],sorting_funct:[872,873],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,390,391,392,393,394,395,397,398,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,487,488,489,490,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,872,873,875,876,877,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,922,923,924,925,926,927,929,930,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1248,1249,1250,1251,1252,1253,1255,1256,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1289,1290,1291],space:[994,997,1027,1047,1048],spars:[1239,1242],sparse_cross_entropi:1239,spawn:[994,1054],special:[43,851,852,854,855,856,861,863],specif:[40,41,43,851,862,920,962,994,1012,1019,1020,1021,1054,1141,1142,1143,1144,1145,1201,1207,1245,1274,1275,1287,1288],specifc:[1201,1202],specifi:[40,41,43,842,843,845,865,866,867,868,869,872,873,875,876,877,920,939,940,941,942,943,944,945,946,949,950,954,956,960,963,964,965,970,974,976,994,997,999,1000,1001,1007,1010,1011,1028,1029,1030,1036,1047,1048,1076,1086,1089,1114,1117,1145,1189,1194,1195,1199,1200,1208,1209,1210,1211,1212,1213,1214,1215,1216],sphinx:43,split:[40,41,130,294,439,569,701,920,929,943,944,945,946,962,963,964,994,1049,1145],split_arg:1145,split_factor:[920,929,1145],split_func_cal:[920,1145],split_siz:1145,spread:[920,952,1145],sqrt:[86,217,400,524,655,851,865,867],squar:[851,863,994,1037,1114,1116],squeez:[130,294,439,569,701,994],stabil:[872,873,994,1074,1075],stabl:[872,873,994,1032,1033,1066,1067,1074,1075],stable_divid:994,stable_pow:994,stack:[40,41,294,701,842,845,865,866,994,1107,1112,1189,1190,1197,1262,1271],stack_imag:[166,348,478,612,774,1107],stacked_dim_s:1145,stage:43,standard:[40,41,847,848,1201,1204,1208,1214,1243,1244,1245,1246,1276,1277],start:[40,41,43,437,438,439,440,462,463,489,920,935,994,997,1047,1048,1145,1245,1288],starting_index:[40,41],starting_split_factor:[920,1145],state:[1145,1226,1236,1245,1248,1249,1250,1251,1252,1253,1255,1256,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287],statement:1288,static_argnam:[439,445,918,919],static_argnum:[439,445,918,919],std:[489,1201,1204],step:[40,41,439,440,920,994,997,1047,1048,1091,1093,1094,1096,1098,1099,1100,1141,1142,1143,1144,1145,1245,1278,1279,1280,1281,1282,1283,1287,1291],stephen:1245,stick:1245,still:[40,41,43],stochast:[1278,1283],stop:[40,41,437,438,439,440,462,463,920,935,964,994,997,1047,1048,1091,1094,1096,1098,1099,1100,1102,1141,1142,1143,1144,1145,1278,1279,1280,1281,1282,1283],stop_gradi:[40,41,343,473,607,768,920,964,1091,1094,1096,1098,1099,1100,1141,1142,1143,1144,1145,1278,1279,1280,1281,1282,1283],stopiter:1145,store:[40,41,994,1027,1072,1091,1105,1274,1275],store_var:[1274,1275],str:[15,16,17,40,41,42,43,390,391,392,394,395,397,398,847,848,849,918,919,920,929,930,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,964,970,975,976,981,982,983,984,985,986,993,994,1001,1017,1019,1020,1021,1052,1054,1057,1064,1065,1114,1117,1119,1141,1142,1143,1144,1145,1189,1193,1208,1209,1251,1252,1262,1273,1274,1275],str_to_nod:1145,straight:1288,strength:[1245,1291],stride:[1226,1227,1228,1229,1230,1231,1232,1233,1262,1263,1264,1265,1266,1267,1268,1269],string:[40,41,43,920,936,938,947,948,953,959,965,966,969,970,974,980,982,983,984,993,994,997,1001,1017,1037,1057,1058,1090,1145,1226,1227,1228,1229,1230,1231,1232,1233,1262,1263,1264,1265,1266,1267,1268,1269,1274,1275],structur:[40,41,42,43,994,1012],structural_diff:[40,41],style:43,sub:[40,41,43,865,866,920,943,944,949,950,951,952,994,1072,1141,1142,1143,1144,1145],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1145,sub_mod:[1274,1275],sub_modul:[1284,1285],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1245,1246,1276,1277,1284,1285],subsequ:43,subset:43,substr:[40,41],suffici:[1114,1119],suggest:1245,suitabl:[1107,1112],sum:[40,41,439,466,467,865,867,920,949,950,951,952,964,994,1016,1020,1064,1065,1145,1208,1209,1215],summat:[40,41,1208,1209],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,108,111,112,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,230,234,237,238,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,349,350,351,353,354,355,356,357,359,360,363,364,365,366,368,369,370,371,372,373,374,375,378,380,381,382,383,384,385,386,391,392,393,394,396,397,398,401,402,403,404,405,406,407,408,409,410,411,412,415,416,418,422,425,426,438,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,474,475,476,477,479,480,481,483,484,485,488,490,492,493,494,495,496,497,498,501,502,504,505,506,507,508,509,510,515,516,517,518,520,521,522,525,526,527,528,529,530,531,532,533,534,535,536,539,540,542,546,549,550,558,563,564,565,566,567,568,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,608,609,610,611,613,614,615,617,618,619,620,624,625,626,627,629,630,631,632,633,634,635,639,640,641,646,647,648,649,651,652,653,656,657,658,659,660,661,662,663,664,665,666,667,670,671,673,677,680,681,689,694,695,696,697,698,699,700,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,769,770,771,772,773,775,776,777,779,780,781,782,783,784,785,787,788,790,791,792,793,794,795,796,797,798,799,800,801,802,803,805,806,807,808,809,810,812,813,814,815,816,817,818,821,822,823,824,825,826,827,829,830,832,833,834,835,836,837,838,843,844,845,846,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,869,873,876,877,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,919,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1123,1124,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1240,1241,1242,1244,1245,1249,1250,1252,1254,1255,1256,1257,1258,1259,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1275,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1290,1291],supports_inplac:994,suppos:1291,sure:43,svd:[352,616,778,1114],swap:[40,41,994,1078],swapax:[40,41,569,701,994,1291],symmetr:[1114,1121],syntax:[437,439,473,478,482,486,487,489],tab:1245,take:[43,994,1046],taken:[43,865,866,1208,1210,1211,1212,1214,1216],tan:[789,1125,1129],tangent:[1125,1129,1130,1131,1139,1140,1218,1225],tanh:[789,820,1125,1218],target:[40,41,920,936,939,940,941,942,943,944,945,946,949,950,951,952,965,1145,1245],target_dict:[40,41],task:[43,1141,1142,1143,1144],team:[43,1291],templat:1245,temporari:[994,1069,1080],tensor:[40,41,43,439,466,467,920,938,970,980,994,997,999,1000,1005,1047,1048,1051,1053,1056,1057,1058,1062,1064,1065,1072,1090,1145,1201,1202,1203,1226,1234,1236,1245,1262,1270,1272,1278,1279,1280,1281,1282,1283,1287,1288],tensorflow:[43,1114,1119,1226,1228,1230,1232,1245,1262,1264,1266,1268,1288,1291],term:[40,41,43,1226,1236,1245,1262,1272],termcolor:[40,41,42],termin:[40,41,42,1145],test:[43,851,857,858,875,876,877,970,985,986],test_array_api:43,tf_concat:1245,than:[40,41,43,847,848,851,854,861,863,865,867,868,869,920,964,994,997,1007,1025,1044,1051,1073,1076,1091,1097,1145,1201,1205,1245,1288],thei:[40,41,43,1125,1130,1141,1142,1143,1201,1202,1245,1284,1285,1288],them:[1245,1291],themselv:[1189,1190],therefor:43,thi:[40,41,42,43,851,862,920,942,946,952,959,964,969,994,997,1027,1060,1062,1068,1091,1094,1096,1097,1098,1099,1100,1105,1114,1117,1145,1189,1193,1198,1208,1210,1211,1212,1213,1214,1215,1216,1226,1235,1245,1274,1275,1278,1279,1280,1281,1282,1283,1287,1288,1291],thing:[43,1245],those:[40,41,43,994,1007,1091,1105,1114,1120,1145],though:43,thought:43,threshold:[994,1051,1053],through:[40,41,43],tick:43,tickbox:43,tile:[294,569,701,994],time:[43,994,1079,1091,1094,1098,1141,1142,1143,1144,1145,1201,1202,1226,1236,1262,1273,1274,1275,1291],timeout:[40,41,42,920,929,930,994,1060,1068,1145],timestep:[1226,1236,1262,1271],titl:[43,1245],tmp_dir:994,tmp_dr:[994,1069],to_appli:[40,41],to_clon:[920,1145],to_dev:[40,41,123,288,437,562,693,920],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[920,1145],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1245],to_ivy_modul:[194,828,1245,1251],to_json:[40,41],to_kv_fn:[1226,1237],to_kv_v:[1226,1237],to_list:[40,41,439,701,994],to_multi_dev:[40,41],to_mut:[1189,1191,1198],to_n:[15,40,41,1245],to_nod:1145,to_numpi:[40,41,439,701,994,1245,1287],to_out_fn:[1226,1237],to_out_v:[1226,1237],to_q_fn:[1226,1237],to_q_v:[1226,1237],to_raw:[40,41],to_scalar:[439,701,994],todo:[1145,1245,1246],togeth:[40,41,1284,1285],tool:[1245,1288],top_mod:[1274,1275],topic:1291,torch:[43,918,919,1245,1287,1288,1291],torch_concat:1245,torchfcmodel:1287,total:[40,41,42,920,966,1145],total_mem_on_dev:920,total_mem_on_nod:1145,tpu:[920,967,1145],tpu_is_avail:[437,562,693,920,1145],tpye:[970,981],trace:[40,41,994,1044],track:[43,920,1145,1189,1198,1274,1275],track_submod_call_ord:[1274,1275],track_submod_ret:[1274,1275],trail:[1276,1277],train:[1091,1093,1094,1098,1245,1246],trainabl:[1091,1097,1245,1246,1251,1252,1274,1275,1284],trainer:1245,tran:1291,transform:[1226,1234,1235],transpos:[40,41,130,294,439,701,920,951,994,1145,1226,1228,1230,1232,1262,1264,1266,1268],travers:[15,18,19,40,41,1189,1198],treat:[40,41,918,919],tri:[40,41],triangular:[842,845],trigonometr:[1125,1126,1129,1137],tril:[390,514,645,842],trim_kei:[40,41],trust:[1091,1098,1278,1280],truth:[851,859,879,898,994,1022,1122,1123,1124],try_else_non:994,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[920,1145],tune_dev_alloc:920,tune_dev_split:920,tune_node_alloc:1145,tune_node_split:1145,tune_step:[920,1145],tupl:[15,16,17,18,19,40,41,43,390,391,392,394,842,843,844,846,865,867,868,869,875,876,877,918,919,994,1011,1027,1028,1071,1089,1145,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1203,1208,1210,1211,1212,1213,1214,1215,1216],tutori:43,two:[40,41,842,845,865,866,994,997,1002,1014,1050,1078,1114,1117,1120],type:[15,18,40,41,42,43,59,397,398,437,438,842,843,844,845,846,848,849,851,852,853,854,855,856,857,858,859,861,862,863,865,866,867,868,869,872,873,875,876,877,879,898,904,920,932,933,934,935,947,948,952,964,970,974,975,976,980,981,982,983,984,985,986,993,994,995,997,1001,1010,1012,1022,1025,1026,1028,1037,1044,1056,1057,1058,1063,1077,1087,1090,1091,1097,1102,1125,1133,1145,1245,1253,1255,1256,1258,1259,1261,1274,1275,1288],types_to_iteratively_nest:[40,41,42],uint8:[1107,1109,1113],uint8_img_to_float_img:1107,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[851,853],underwai:43,unecessari:43,unfairli:43,unif:1145,unifi:[40,41,920,949,950,951,952,964,1145,1245],uniform:[40,41,1201,1202,1204,1205,1253,1255,1256,1259,1260],uniformli:[1201,1203,1205],unify_arrai:1145,unify_it:1145,unify_nest:1145,uniniti:[842,843],union:[15,18,19,40,41,43,390,391,392,394,395,397,398,842,843,844,845,846,847,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,865,867,868,869,872,873,875,876,877,879,898,904,918,919,920,938,943,944,945,946,964,965,970,974,975,976,980,981,982,983,984,985,986,993,994,995,996,997,999,1000,1001,1002,1003,1005,1007,1008,1009,1010,1011,1013,1014,1015,1016,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1034,1036,1037,1038,1045,1046,1047,1048,1050,1051,1052,1053,1056,1057,1058,1061,1062,1063,1064,1065,1070,1071,1072,1073,1076,1078,1079,1081,1082,1083,1084,1086,1087,1088,1089,1090,1145,1189,1190,1191,1197,1198],uniqu:[920,929,930,1141,1142,1143,1144,1145,1189,1193],unique_kwarg:1145,unit:[43,920,1125,1126,1128,1145,1218,1219,1220,1221],unitari:[1114,1120],unless:[994,1056,1058,1090],unlik:[920,1145],unnorm:[1201,1202],unpack:[994,1086],unrol:[1226,1236],unset:1288,unset_debug_mod:44,unset_default_devic:920,unset_default_dtyp:970,unset_default_float_dtyp:970,unset_default_int_dtyp:970,unset_framework:[59,1288],unset_with_grad:1091,unstack:[40,41,130,294,439,569,701,994],until:43,unus:[918,919],updat:[40,41,439,466,467,920,929,994,1042,1064,1065,1091,1093,1094,1096,1098,1099,1100,1141,1142,1143,1145,1189,1194,1195,1199,1200,1226,1236,1245,1246,1251,1252,1278,1279,1280,1281,1282,1283,1288,1291],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1201,1205],upper_depth:[1274,1275],upstream:43,usabl:[1245,1291],usag:[920,964,1145],use:[40,41,42,43,489,920,929,930,955,967,994,1061,1074,1075,1114,1119,1145,1226,1237,1243,1244,1245,1276,1277,1288,1291],used:[40,41,43,489,865,866,920,929,959,962,963,969,970,981,994,1032,1033,1049,1058,1064,1065,1066,1067,1090,1091,1098,1099,1114,1117,1141,1142,1143,1144,1145,1189,1198,1262,1273,1278,1280,1281,1287,1288],used_dev:[920,929],used_mem_on_dev:920,used_mem_on_nod:1145,used_node_str:1145,used_node_strs_dict:1145,useful:[40,41,920,964,1145,1226,1235,1245,1288],user:[1245,1262,1273,1274,1275,1288,1291],uses:1245,using:[40,41,43,1091,1093,1094,1189,1192,1196,1208,1209,1226,1234,1238,1245,1262,1270,1287,1288,1291],util:[920,953,1145],utility_funct:[875,876,877],v_with_top_v_key_chain:[1274,1275],val:[40,41,439,457,458,459,879,914,994,1040,1041,1042,1066,1067],valid:[875,876,877,970,975,994,1074,1075,1226,1227,1228,1229,1230,1231,1232,1233,1262,1263,1264,1265,1266,1267,1268,1269],valid_dtyp:970,valu:[40,41,439,851,854,859,865,867,872,873,879,898,920,932,963,964,994,995,997,999,1000,1007,1008,1009,1011,1012,1018,1022,1027,1028,1029,1030,1045,1047,1048,1051,1053,1060,1061,1062,1063,1064,1065,1066,1067,1068,1084,1087,1088,1089,1091,1095,1098,1107,1113,1114,1120,1122,1123,1124,1125,1134,1135,1136,1141,1142,1143,1145,1189,1193,1194,1195,1199,1200,1201,1204,1205,1208,1210,1212,1226,1237,1238,1243,1244,1262,1273,1276,1277,1278,1280],value_is_nan:994,vanilla:[1141,1143],var_shap:1253,variabl:[15,16,17,18,19,40,41,343,473,607,768,994,1004,1040,1041,1042,1043,1044,1077,1091,1094,1095,1096,1097,1098,1099,1100,1102,1105,1141,1142,1143,1144,1226,1237,1243,1244,1251,1252,1253,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285],variable_data:[473,768,1091],varianc:[40,41,1208,1216,1291],varieti:1288,variou:[43,1245],vector:[40,41,482,485,865,867,994,1009,1014,1114,1120,1121,1226,1235,1262,1272],vector_norm:[40,41,100,226,414,538,669,865],vector_to_skew_symmetric_matrix:[170,352,482,616,778,1114],verbos:1290,veri:[43,1245],verifi:43,version:43,via:[1189,1190,1197,1288],view:[1107,1112],vision:1245,visual:1288,volum:[1226,1231],vw_tm1:[1091,1094,1098],wai:[1288,1291],wait:[40,41,42,43],want:[43,1245,1288,1291],warn:[59,66,67,68,69,70],warp:[478,479,1107,1108],watch:1287,websit:43,weight:[1091,1093,1094,1096,1098,1099,1100,1226,1235,1236,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1274,1275,1278,1280,1281],weight_initi:[1262,1263,1264,1265,1266,1267,1268,1269,1271,1272],weights_path:[1274,1275],well:[40,41,994,1036],were:[40,41,1145],what:[43,1245],when:[40,41,42,43,920,994,1006,1075,1088,1114,1120,1145,1245,1274,1275,1288,1291],where:[40,41,43,294,439,701,851,860,875,876,877,879,904,994,997,1005,1007,1011,1024,1038,1045,1056,1089,1114,1120,1189,1190,1197,1201,1202],wherea:43,wherebi:[1189,1198],whether:[15,18,19,40,41,42,851,858,875,876,877,918,919,920,938,951,955,959,964,967,969,970,980,984,985,986,993,994,996,1002,1003,1015,1018,1023,1027,1034,1036,1039,1043,1044,1049,1070,1077,1086,1087,1091,1094,1095,1096,1097,1098,1099,1100,1102,1141,1142,1143,1144,1145,1189,1190,1191,1193,1197,1198,1201,1202,1218,1219,1226,1234,1245,1251,1252,1262,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283],which:[40,41,42,43,489,842,843,844,845,846,847,848,849,865,866,867,868,869,872,873,875,876,877,918,919,920,929,930,938,943,944,945,946,949,950,951,952,954,956,960,962,963,964,970,975,980,984,993,994,997,1001,1010,1012,1014,1015,1016,1018,1028,1029,1030,1031,1037,1038,1046,1047,1048,1055,1056,1057,1058,1059,1061,1064,1065,1072,1076,1086,1088,1090,1091,1094,1095,1096,1098,1099,1100,1102,1104,1105,1107,1109,1114,1117,1125,1130,1145,1189,1193,1194,1195,1199,1200,1201,1202,1203,1204,1205,1208,1210,1211,1212,1213,1214,1215,1216,1218,1223,1226,1237,1238,1245,1251,1252,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1284,1285,1287,1288],whilst:43,whitespac:[40,41,42],who:43,whose:[43,842,845,851,852,855,856,865,866,868,869,879,904,994,1001,1006,1208,1209,1210,1211,1212,1214,1216],why:[1245,1246],width:[1107,1112],wiki:1291,wikipedia:1291,window:[1107,1112,1226,1227,1228,1229,1230,1231,1232,1233,1262,1263,1264,1265,1266,1267,1268,1269],wise:[40,41,43,851,853,859,862,879,898,904,994,1007,1022,1025,1026,1051,1053,1063,1091,1094,1096,1098,1100,1122,1123,1124,1125,1126,1128,1129,1130,1133,1134,1135,1136,1137,1139,1218,1219,1220,1221,1222,1223,1224,1225],wish:1288,with_bia:[1262,1272],with_cal:[994,1018],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1091,1101],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1145,with_partial_v:[1274,1275],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,439,468,994,1072,1145],with_to_kv_fn:[1262,1273],with_to_out_fn:[1262,1273],with_to_q_fn:[1262,1273],within:[15,18,19,43,994,997,1114,1120,1201,1205],without:[40,41,43,994,1060,1062,1068,1189,1191,1288],wonder:1245,word:[15,16,17,994,997,1201,1205,1251,1252],work:[43,1287],worker:[920,929,930,1145],worker_class:[920,929,930,1145],worker_kwarg:1145,would:[43,1218,1223,1245,1288,1291],wrap:[15,40,41,42,43,437,439,473,478,482,486,487,489,994,1006,1091,1105,1245],wrapper:43,write:[40,41,43,1245,1246,1291],written:[43,1245,1291],ws_new:[1091,1094,1096,1098,1099,1100],x1_i:[851,853,859,994,1022,1125,1133],x2_i:[851,853,859,994,1022,1125,1133],x_feat_dim:[1226,1237],x_i:[851,852,854,855,856,857,858,861,862,863],x_in:[1245,1287],x_inv:[1114,1116],x_max:[439,994,1007],x_min:[439,994,1007],x_sub:1145,xkk:1291,xkkm1:1291,xkm1km1:1291,xs0:1145,xs_t:1145,year:[1245,1291],yet:[1189,1198,1291],yield:[994,1088],you:[43,1245,1287,1288,1291],your:[1245,1246,1287,1288,1291],your_awesome_project:1288,yourself:[43,1245],yourslef:43,youtub:43,zero:[40,41,77,208,390,514,645,842,843,845,851,862,865,867,875,876,877,994,1011,1056,1058,1064,1065,1089,1090,1091,1093,1094,1098,1099,1226,1234,1245,1253,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1278,1279,1280,1281],zero_pad:[294,439,569,701,994],zeros_lik:[130,294,439,569,701,994],zip:1145,zk_e:1291},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1018,"function":[77,81,86,99,103,105,106,107,109,110,208,212,217,225,229,231,232,233,235,236,390,395,400,413,417,419,420,421,423,424,514,519,524,537,541,543,544,545,547,548,645,650,655,668,672,674,675,676,678,679,842,847,851,864,868,870,871,872,874,875],Ones:1258,Using:1288,abs:[295,570,702,995],aco:[790,1126],acosh:[791,1127],activ:[192,377,500,637,820,1218,1248],adam:1279,adam_step:1093,adam_upd:1094,algebra:[100,170,226,352,414,482,538,616,669,778,865],all:[111,237,425,549,680,876],all_equ:996,all_nested_indic:1190,ani:[112,238,426,550,681,877],api:[0,43,75,114,206,240,388,428,512,552,643,683,840],arang:[131,296,440,571,703,997],arg_nam:998,argmax:[132,441,572,704,999],argmin:[133,442,573,705,1000],args_to_ivi:16,args_to_n:17,argsort:[108,234,422,546,677,873],arithmet:[1,115,241,429,553,684],arrai:[0,3,43,75,113,114,116,134,206,239,240,242,249,297,388,427,428,430,443,512,551,552,554,574,643,682,683,685,706,840,879,1001],array_equ:[298,707,1002],arrays_equ:1003,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[792,1128],asinh:[87,401,525,656,852],assert_supports_inplac:1004,atan2:[794,1130],atan:[793,1129],atanh:[795,1131],attribut:[5,117,243,431,555,686],backend:[43,73],bilinear_resampl:[167,349,479,613,775,1108],binary_cross_entropi:1240,bitwis:[7,118,244,432,556,687],bitwise_and:[88,218,402,526,657,853],broadcast_to:[299,708,1005],builder:51,builtin:[113,239,249,427,551,682,879],builtin_ab:[250,880],builtin_add:[251,881],builtin_and:[252,882],builtin_bool:[253,883],builtin_contain:[254,884],builtin_deepcopi:[255,885],builtin_dir:[256,886],builtin_eq:[257,887],builtin_float:[258,888],builtin_floordiv:[259,889],builtin_g:[260,890],builtin_getattr:[261,891],builtin_getattribut:[262,892],builtin_getitem:[263,893],builtin_gt:[264,894],builtin_int:[265,895],builtin_invert:[266,896],builtin_l:[267,897],builtin_lt:[268,558,689,898],builtin_mul:[269,899],builtin_n:[270,900],builtin_neg:[271,901],builtin_or:[272,902],builtin_po:[273,903],builtin_pow:[274,904],builtin_radd:[275,905],builtin_rand:[276,906],builtin_rfloordiv:[277,907],builtin_rmul:[278,908],builtin_ror:[279,909],builtin_rpow:[280,910],builtin_rsub:[281,911],builtin_rtruediv:[282,912],builtin_rxor:[283,913],builtin_setitem:[284,914],builtin_sub:[285,915],builtin_truediv:[286,916],builtin_xor:[287,917],cache_fn:1006,cast:[135,300,444,575,709,974],ceil:[89,219,403,527,658,854],choleski:[779,1115],choose_random_framework:61,citat:1245,clear_framework_stack:62,clear_mem_on_dev:[695,936],clip:[301,710,1007],clip_matrix_norm:1008,clip_vector_norm:1009,clone:1160,clone_arrai:1161,clone_it:1162,clone_nest:1163,clonedit:1147,cloneditem:1146,clonednest:1148,closest_valid_dtyp:975,code:1291,comparison:[9,119,245,433,557,688],compil:[302,445,711,918,919],concaten:[136,303,446,576,712,1010],constant:[76,207,389,513,644,841],constant_pad:[304,577,713,1011],contain:[40,41],container_typ:[714,1012],content:1245,contribut:43,conv1d:[198,380,504,832,1227,1263],conv1d_transpos:[199,381,505,833,1228],conv1dtranspos:1264,conv2d:[200,382,506,639,834,1229,1265],conv2d_transpos:[201,383,507,835,1230],conv2dtranspos:1266,conv3d:[202,384,508,640,836,1231,1267],conv3d_transpos:[203,385,509,837,1232],conv3dtranspos:1268,convers:15,convert:[194,828,1251],convert_dtyp:976,copy_arrai:[715,1013],copy_nest:1191,core:[122,248,436,561,692,878],cos:[90,404,528,659,855],cosh:[91,405,529,660,796,856,1132],cprint:1290,creat:43,creation:[77,208,390,514,645,842],cross:[305,716,1014],cross_entropi:1241,cumprod:[137,306,447,717,1015],cumsum:[718,1016],current_framework:63,current_framework_str:[719,1017],data:[81,85,212,216,395,399,519,523,650,654,847,850],debug_mod:45,debugg:44,default_devic:937,default_dtyp:977,default_float_dtyp:978,default_int_dtyp:979,default_nod:1164,depthwise_conv2d:[204,386,510,641,838,1233],depthwiseconv2d:1269,design:43,dev:[125,290,564,696,938],dev_clon:939,dev_clone_arrai:940,dev_clone_it:941,dev_clone_nest:942,dev_dist:943,dev_dist_arrai:944,dev_dist_it:945,dev_dist_nest:946,dev_from_str:[126,291,565,697,947],dev_to_str:[127,292,566,698,948],dev_unifi:949,dev_unify_arrai:950,dev_unify_it:951,dev_unify_nest:952,dev_util:953,devclonedit:923,devcloneditem:922,devclonednest:924,devdistit:926,devdistitem:925,devdistnest:927,devic:[20,123,288,437,562,693,920],devmapp:929,devmappermultiproc:930,diagon:[101,227,415,539,670,866],distribute_nest:1165,divid:1133,document:1245,dropout:[1234,1270],dtype:[138,307,448,578,720,970,980],dtype_bit:[139,308,449,579,721,981],dtype_from_str:[140,309,450,580,722,982],dtype_to_str:[141,310,451,581,723,983],ecosystem:52,einops_rearrang:1019,einops_reduc:1020,einops_repeat:1021,einsum:[184,368,492,629,812,1209],elementwis:[86,217,400,524,655,851],empti:[78,209,391,515,646,843],equal:[582,724,1022],erf:[488,797,1134],execute_with_gradi:[164,344,474,608,769,1095],exist:1023,exp:[798,1135],expand_dim:[311,725,1024],finfo:[83,214,397,521,652,848],firstlayersiren:1255,flip:[104,230,418,542,673,869],float_img_to_uint8_img:1109,floor:[312,726,1025],floormod:[313,727,1026],fomaml_step:1142,fork:43,fourier_encod:1027,framework:59,full:[142,314,452,583,728,1028],func:72,gather:[143,315,453,584,729,1029],gather_nd:[144,316,454,585,730,1030],geglu:1249,gelu:[378,501,821,1219,1250],gener:[22,130,294,439,569,701,994],get_all_arrays_in_memori:1031,get_all_arrays_on_dev:954,get_framework:64,get_min_bas:1032,get_min_denomin:1033,get_num_dim:[731,1034],get_referrers_recurs:1035,glorotuniform:1256,gpu_is_avail:[955,1166],gradient:[24,163,343,473,607,768,1091],gradient_descent_upd:1096,gradient_imag:[168,350,480,614,776,1110],gym:53,handler:59,has_nan:1036,ident:[145,317,455,586,732,1037],iinfo:[84,215,398,522,653,849],imag:[26,166,348,478,612,774,1107],index_nest:1192,indices_wher:[146,318,456,733,1038],initi:1253,inplac:[11,120,246,434,559,690],inplace_arrays_support:1039,inplace_decr:[147,319,457,587,734,1040],inplace_incr:[148,320,458,588,735,1041],inplace_upd:[149,321,459,589,736,1042],inplace_variables_support:1043,inv:[780,1116],invalid_dtyp:984,is_arrai:[150,322,460,590,737,1044],is_float_dtyp:985,is_int_dtyp:986,is_vari:[165,345,475,609,770,1097],isfinit:[92,220,406,530,661,857],isinf:[323,591,738,1045],isnan:[93,221,407,531,662,858],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,839,1287,1288,1291],ivymodul:[195,829],jax:74,keep:43,lamb:1280,lamb_upd:1098,lar:1281,lars_upd:1099,layer:[197,379,503,638,831,1226,1262],layer_norm:1244,layernorm:1277,leaky_relu:[822,1220],less:[94,222,408,532,663,859],linalg:[28,1114],linear:[100,170,226,352,414,482,538,616,669,778,865,1235,1272],linear_resampl:[151,324,461,592,739,1046],linspac:[152,325,462,593,740,1047],list:43,log1p:[95,409,533,664,860],log2:[96,410,534,665,861],log:[799,1136],logic:[30,174,358,486,621,786,1122],logical_and:[359,787,1123],logical_not:[97,223,411,535,666,862],logical_or:[360,788,1124],logspac:[153,326,463,594,741,1048],loss:1239,lstm:1271,lstm_updat:1236,maml_step:1143,manipul:[103,229,417,541,672,868],map:1193,map_nest_at_index:1194,map_nest_at_indic:1195,match_kwarg:1049,math:[32,175,361,487,622,789,1125],matmul:[327,595,742,1050],matrix_norm:[171,353,483,617,781,1117],maximum:[743,1051],mech:54,memori:55,meshgrid:[328,744,1052],meta:[34,1141],method:[99,225,413,537,668,864],minimum:[745,1053],model:56,modul:[1274,1275,1287],multi:1145,multi_head_attent:1237,multi_index_nest:1196,multidevcontain:42,multidevit:933,multidevitem:932,multidevnest:934,multiheadattent:1273,multinodeit:1151,multinodeitem:1150,multinodenest:1152,multinomi:[177,363,490,624,805,1202],multiprocess:[746,1054],mxnet:205,nativ:1287,nest:1189,nested_indices_wher:1197,nested_map:1198,network:1287,next:1245,node:[1145,1167],node_dist:1168,node_dist_arrai:1169,node_dist_it:1170,node_str:1171,node_to_str:1172,node_util:1173,nodedistit:1154,nodedistitem:1153,nodedistnest:1155,nodemapp:1157,nodemappermultiproc:1158,norm:[1243,1276],num_arrays_in_memori:1055,num_arrays_on_dev:956,num_cpu_cor:957,num_gpu:[128,958,1174],numpi:387,nutshel:1245,one_hot:[154,464,596,747,1056],ones:[79,210,392,516,647,844,1057],ones_lik:[155,329,465,597,748,1058],oper:[1,3,7,9,11,13,43,115,116,118,119,120,121,241,242,244,245,246,247,429,430,432,433,434,435,553,554,556,557,559,560,684,685,687,688,690,691],optim:[1278,1282],optimizer_upd:1100,overview:1245,percent_used_mem_on_dev:959,percent_used_mem_on_nod:1175,pinv:[354,782,1118],portabl:1291,print_all_arrays_in_memori:1059,print_all_arrays_on_dev:960,profil:[124,289,438,563,694,935,1159],pull:43,queue_timeout:1060,randint:[178,364,625,806,1203],random:[36,176,362,489,623,804,1201],random_crop:1111,random_norm:[179,365,626,807,1204],random_uniform:[180,366,627,808,1205],reduce_max:[185,369,493,630,813,1210],reduce_mean:[186,370,494,631,814,1211],reduce_min:[187,371,495,632,815,1212],reduce_prod:[188,372,496,633,816,1213],reduce_std:[373,1214],reduce_sum:[189,374,497,634,817,1215],reduce_var:[190,375,498,635,818,1216],reduct:[38,183,367,491,628,811,1208],reflect:[13,121,247,435,560,691],relu:[823,1221],repeat:[330,749,1061],reptile_step:1144,request:43,reshap:[750,1062],robot:57,round:[331,751,1063],run:1288,scaled_dot_product_attent:1238,scatter_flat:[156,332,466,598,752,1064],scatter_nd:[157,333,467,599,753,1065],search:[105,231,419,543,674,870],seed:[181,809,1206],sequenti:[1284,1285],set:[106,232,420,544,675,871],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:961,set_default_dtyp:987,set_default_float_dtyp:988,set_default_int_dtyp:989,set_default_nod:1176,set_exception_debug_mod:48,set_framework:65,set_min_bas:1066,set_min_denomin:1067,set_nest_at_index:1199,set_nest_at_indic:1200,set_queue_timeout:1068,set_split_factor:[962,1177],set_tmp_dir:1069,set_with_grad:1101,sgd:1283,shape:[754,1070],shape_to_tupl:1071,shuffl:[182,810,1207],sigmoid:[824,1222],signatur:[99,225,413,537,668,864],sin:[800,1137],sinh:[801,1138],siren:1259,softmax:[193,502,825,1223],softplu:[826,1224],sort:[107,233,421,545,676,872],sparse_cross_entropi:1242,split:[158,334,468,600,755,1072],split_factor:[963,1178],split_func_cal:[964,1179],sqrt:[98,224,412,536,667,863],squeez:[159,335,469,601,756,1073],stable_divid:1074,stable_pow:1075,stack:[336,757,1076],stack_imag:[169,351,481,615,777,1112],standard:43,statist:[109,235,423,547,678,874],stop_gradi:[346,476,610,771,1102],str_to_nod:1180,submodul:43,supports_inplac:1077,svd:[356,619,784,1120],swapax:[602,758,1078],tan:[802,1139],tanh:[803,827,1140,1225],tensorflow:511,tile:[337,603,759,1079],tmp_dir:1080,to_dev:[129,293,567,699,965],to_ivi:18,to_ivy_modul:[196,830,1252],to_list:[760,1081],to_n:19,to_nod:1181,to_numpi:[761,1082],to_scalar:[762,1083],todo:43,torch:642,total_mem_on_dev:966,total_mem_on_nod:1182,tpu_is_avail:[568,700,967,1183],train:1287,trainabl:1287,transpos:[160,338,470,763,1084],tree:1245,tril:[393,517,648,845],try_else_non:1085,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[81,85,212,216,395,399,519,523,650,654,847,850],uint8_img_to_float_img:1113,unifi:1184,unify_arrai:1185,unify_it:1186,unify_nest:1187,unset_debug_mod:49,unset_default_devic:968,unset_default_dtyp:990,unset_default_float_dtyp:991,unset_default_int_dtyp:992,unset_framework:71,unset_with_grad:1103,unstack:[161,339,471,604,764,1086],updat:43,used_mem_on_dev:969,used_mem_on_nod:1188,util:[110,236,424,548,679,875],valid_dtyp:993,value_is_nan:1087,variabl:[347,477,611,772,1104],variable_data:[773,1105],vector_norm:[102,228,416,540,671,867],vector_to_skew_symmetric_matrix:[173,357,485,620,785,1121],verbos:1289,vision:58,where:[340,765,1088,1245],why:1291,with_grad:1106,wrapper:72,write:1288,your:43,zero:[80,211,394,518,649,846,1261],zero_pad:[341,605,766,1089],zeros_lik:[162,342,472,606,767,1090]}})