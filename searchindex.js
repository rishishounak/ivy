Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[829,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[387,0,0,"-"],creation_functions:[388,0,0,"-"],data_type_functions:[392,0,0,"-"],data_types:[396,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[389,2,1,""],ones:[390,2,1,""],zeros:[391,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[392,1,1,""],finfo:[394,2,1,""],iinfo:[395,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[392,3,1,""],bits:[392,3,1,""],eps:[392,3,1,""],max:[392,3,1,""],min:[392,3,1,""],smallest_normal:[392,3,1,""]},"ivy.functional.backends.numpy.core":{device:[432,0,0,"-"],general:[434,0,0,"-"],gradients:[468,0,0,"-"],image:[473,0,0,"-"],linear_algebra:[477,0,0,"-"],logic:[481,0,0,"-"],math:[482,0,0,"-"],random:[484,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[433,1,1,""],clear_mem_on_dev:[432,2,1,""],dev:[432,2,1,""],dev_from_str:[432,2,1,""],dev_to_str:[432,2,1,""],gpu_is_available:[432,2,1,""],num_gpus:[432,2,1,""],to_dev:[432,2,1,""],tpu_is_available:[432,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[433,3,1,""],start:[433,3,1,""],stop:[433,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[434,2,1,""],arange:[435,2,1,""],argmax:[436,2,1,""],argmin:[437,2,1,""],array:[438,2,1,""],asarray:[434,2,1,""],astype:[434,2,1,""],cast:[439,2,1,""],ceil:[434,2,1,""],clip:[434,2,1,""],compile:[440,2,1,""],concatenate:[441,2,1,""],constant_pad:[434,2,1,""],container_types:[434,2,1,""],copy_array:[434,2,1,""],cumprod:[442,2,1,""],current_framework_str:[434,2,1,""],dtype:[443,2,1,""],dtype_bits:[444,2,1,""],dtype_from_str:[445,2,1,""],dtype_to_str:[446,2,1,""],equal:[434,2,1,""],floor:[434,2,1,""],floormod:[434,2,1,""],full:[447,2,1,""],gather:[448,2,1,""],gather_nd:[449,2,1,""],get_num_dims:[434,2,1,""],identity:[450,2,1,""],indices_where:[451,2,1,""],inplace_arrays_supported:[434,2,1,""],inplace_decrement:[452,2,1,""],inplace_increment:[453,2,1,""],inplace_update:[454,2,1,""],inplace_variables_supported:[434,2,1,""],is_array:[455,2,1,""],linear_resample:[456,2,1,""],linspace:[457,2,1,""],logspace:[458,2,1,""],matmul:[434,2,1,""],meshgrid:[434,2,1,""],multiprocessing:[434,2,1,""],one_hot:[459,2,1,""],ones_like:[460,2,1,""],round:[434,2,1,""],scatter_flat:[461,2,1,""],scatter_nd:[462,2,1,""],shape:[434,2,1,""],split:[463,2,1,""],squeeze:[464,2,1,""],to_list:[434,2,1,""],to_numpy:[434,2,1,""],to_scalar:[434,2,1,""],transpose:[465,2,1,""],unstack:[466,2,1,""],where:[434,2,1,""],zero_pad:[434,2,1,""],zeros_like:[467,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[469,2,1,""],is_variable:[470,2,1,""],stop_gradient:[471,2,1,""],variable:[472,2,1,""],variable_data:[468,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[474,2,1,""],gradient_image:[475,2,1,""],stack_images:[476,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[478,2,1,""],qr:[479,2,1,""],vector_to_skew_symmetric_matrix:[480,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[483,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[485,2,1,""],randint:[484,2,1,""],random_normal:[484,2,1,""],random_uniform:[484,2,1,""],seed:[484,2,1,""],shuffle:[484,2,1,""]},"ivy.functional.ivy":{array_api:[830,0,0,"-"],core:[865,0,0,"-"],nn:[1206,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[831,0,0,"-"],creation_functions:[832,0,0,"-"],data_type_functions:[836,0,0,"-"],data_types:[839,0,0,"-"],elementwise_functions:[840,0,0,"-"],function_and_method_signatures:[851,0,0,"-"],linear_algebra:[852,0,0,"-"],manipulation_functions:[855,0,0,"-"],searching_functions:[857,0,0,"-"],set_functions:[858,0,0,"-"],sorting_functions:[859,0,0,"-"],statistical_functions:[861,0,0,"-"],utility_functions:[862,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[831,4,1,""],nan:[831,4,1,""],pi:[831,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[833,2,1,""],ones:[834,2,1,""],zeros:[835,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[837,2,1,""],iinfo:[838,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[841,2,1,""],bitwise_and:[842,2,1,""],cos:[843,2,1,""],cosh:[844,2,1,""],isfinite:[845,2,1,""],isnan:[846,2,1,""],less:[847,2,1,""],log2:[848,2,1,""],logical_not:[849,2,1,""],sqrt:[850,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[853,2,1,""],vector_norm:[854,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[856,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[860,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[863,2,1,""],any:[864,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[866,0,0,"-"],compilation:[905,0,0,"-"],device:[907,0,0,"-"],dtype:[957,0,0,"-"],general:[981,0,0,"-"],gradients:[1080,0,0,"-"],image:[1096,0,0,"-"],linalg:[1103,0,0,"-"],logic:[1111,0,0,"-"],math:[1114,0,0,"-"],meta:[1130,0,0,"-"],multi_node:[1134,0,0,"-"],nest:[1178,0,0,"-"],random:[1190,0,0,"-"],reductions:[1197,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[867,2,1,""],builtin_add:[868,2,1,""],builtin_and:[869,2,1,""],builtin_bool:[870,2,1,""],builtin_contains:[871,2,1,""],builtin_deepcopy:[872,2,1,""],builtin_dir:[873,2,1,""],builtin_eq:[874,2,1,""],builtin_float:[875,2,1,""],builtin_floordiv:[876,2,1,""],builtin_ge:[877,2,1,""],builtin_getattr:[878,2,1,""],builtin_getattribute:[879,2,1,""],builtin_getitem:[880,2,1,""],builtin_gt:[881,2,1,""],builtin_int:[882,2,1,""],builtin_invert:[883,2,1,""],builtin_le:[884,2,1,""],builtin_lt:[885,2,1,""],builtin_mul:[886,2,1,""],builtin_ne:[887,2,1,""],builtin_neg:[888,2,1,""],builtin_or:[889,2,1,""],builtin_pos:[890,2,1,""],builtin_pow:[891,2,1,""],builtin_radd:[892,2,1,""],builtin_rand:[893,2,1,""],builtin_rfloordiv:[894,2,1,""],builtin_rmul:[895,2,1,""],builtin_ror:[896,2,1,""],builtin_rpow:[897,2,1,""],builtin_rsub:[898,2,1,""],builtin_rtruediv:[899,2,1,""],builtin_rxor:[900,2,1,""],builtin_setitem:[901,2,1,""],builtin_sub:[902,2,1,""],builtin_truediv:[903,2,1,""],builtin_xor:[904,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[906,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[907,1,1,""],DevClonedItem:[909,1,1,""],DevClonedIter:[910,1,1,""],DevClonedNest:[911,1,1,""],DevDistItem:[912,1,1,""],DevDistIter:[913,1,1,""],DevDistNest:[914,1,1,""],DevManager:[907,1,1,""],DevMapper:[916,1,1,""],DevMapperMultiProc:[917,1,1,""],MultiDev:[907,1,1,""],MultiDevItem:[919,1,1,""],MultiDevIter:[920,1,1,""],MultiDevNest:[921,1,1,""],Profiler:[922,1,1,""],clear_mem_on_dev:[923,2,1,""],default_device:[924,2,1,""],dev:[925,2,1,""],dev_clone:[926,2,1,""],dev_clone_array:[927,2,1,""],dev_clone_iter:[928,2,1,""],dev_clone_nest:[929,2,1,""],dev_dist:[930,2,1,""],dev_dist_array:[931,2,1,""],dev_dist_iter:[932,2,1,""],dev_dist_nest:[933,2,1,""],dev_from_str:[934,2,1,""],dev_to_str:[935,2,1,""],dev_unify:[936,2,1,""],dev_unify_array:[937,2,1,""],dev_unify_iter:[938,2,1,""],dev_unify_nest:[939,2,1,""],dev_util:[940,2,1,""],get_all_arrays_on_dev:[941,2,1,""],gpu_is_available:[942,2,1,""],num_arrays_on_dev:[943,2,1,""],num_cpu_cores:[944,2,1,""],num_gpus:[945,2,1,""],percent_used_mem_on_dev:[946,2,1,""],print_all_arrays_on_dev:[947,2,1,""],set_default_device:[948,2,1,""],set_split_factor:[949,2,1,""],split_factor:[950,2,1,""],split_func_call:[951,2,1,""],to_dev:[952,2,1,""],total_mem_on_dev:[953,2,1,""],tpu_is_available:[954,2,1,""],unset_default_device:[955,2,1,""],used_mem_on_dev:[956,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[907,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[907,3,1,""],da_tune_step:[907,3,1,""],dim_size:[907,3,1,""],ds_tune_step:[907,3,1,""],map:[907,3,1,""],repeated_config_check:[907,3,1,""],tune_step:[907,3,1,""],tuned:[907,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[916,3,1,""],map:[916,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[917,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[907,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[919,3,1,""],items:[919,3,1,""],keys:[919,3,1,""],shape:[919,3,1,""],values:[919,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[920,3,1,""],at_dev:[920,3,1,""],at_devs:[920,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[921,3,1,""],at_dev:[921,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[922,3,1,""],start:[922,3,1,""],stop:[922,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[957,1,1,""],DefaultFloatDtype:[957,1,1,""],DefaultIntDtype:[957,1,1,""],astype:[957,2,1,""],cast:[961,2,1,""],closest_valid_dtype:[962,2,1,""],convert_dtype:[963,2,1,""],default_dtype:[964,2,1,""],default_float_dtype:[965,2,1,""],default_int_dtype:[966,2,1,""],dtype:[967,2,1,""],dtype_bits:[968,2,1,""],dtype_from_str:[969,2,1,""],dtype_to_str:[970,2,1,""],invalid_dtype:[971,2,1,""],is_float_dtype:[972,2,1,""],is_int_dtype:[973,2,1,""],set_default_dtype:[974,2,1,""],set_default_float_dtype:[975,2,1,""],set_default_int_dtype:[976,2,1,""],unset_default_dtype:[977,2,1,""],unset_default_float_dtype:[978,2,1,""],unset_default_int_dtype:[979,2,1,""],valid_dtype:[980,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[957,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[957,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[957,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1006,2,1,""],abs:[982,2,1,""],all_equal:[983,2,1,""],arange:[984,2,1,""],arg_names:[985,2,1,""],argmax:[986,2,1,""],argmin:[987,2,1,""],array:[988,2,1,""],array_equal:[989,2,1,""],arrays_equal:[990,2,1,""],asarray:[981,2,1,""],assert_supports_inplace:[991,2,1,""],broadcast_to:[992,2,1,""],cache_fn:[993,2,1,""],ceil:[994,2,1,""],clip:[995,2,1,""],clip_matrix_norm:[996,2,1,""],clip_vector_norm:[997,2,1,""],concatenate:[998,2,1,""],constant_pad:[999,2,1,""],container_types:[1000,2,1,""],copy_array:[1001,2,1,""],cross:[1002,2,1,""],cumprod:[1003,2,1,""],cumsum:[1004,2,1,""],current_framework_str:[1005,2,1,""],einops_rearrange:[1007,2,1,""],einops_reduce:[1008,2,1,""],einops_repeat:[1009,2,1,""],equal:[1010,2,1,""],exists:[1011,2,1,""],expand_dims:[1012,2,1,""],flip:[1013,2,1,""],floor:[1014,2,1,""],floormod:[1015,2,1,""],fourier_encode:[1016,2,1,""],full:[1017,2,1,""],gather:[1018,2,1,""],gather_nd:[1019,2,1,""],get_all_arrays_in_memory:[1020,2,1,""],get_min_base:[1021,2,1,""],get_min_denominator:[1022,2,1,""],get_num_dims:[1023,2,1,""],get_referrers_recursive:[1024,2,1,""],has_nans:[1025,2,1,""],identity:[1026,2,1,""],indices_where:[1027,2,1,""],inplace_arrays_supported:[1028,2,1,""],inplace_decrement:[1029,2,1,""],inplace_increment:[1030,2,1,""],inplace_update:[1031,2,1,""],inplace_variables_supported:[1032,2,1,""],is_array:[1033,2,1,""],isinf:[1034,2,1,""],linear_resample:[1035,2,1,""],linspace:[1036,2,1,""],logspace:[1037,2,1,""],match_kwargs:[1038,2,1,""],matmul:[1039,2,1,""],maximum:[1040,2,1,""],meshgrid:[1041,2,1,""],minimum:[1042,2,1,""],multiprocessing:[1043,2,1,""],num_arrays_in_memory:[1044,2,1,""],one_hot:[1045,2,1,""],ones:[1046,2,1,""],ones_like:[1047,2,1,""],print_all_arrays_in_memory:[1048,2,1,""],queue_timeout:[1049,2,1,""],repeat:[1050,2,1,""],reshape:[1051,2,1,""],round:[1052,2,1,""],scatter_flat:[1053,2,1,""],scatter_nd:[1054,2,1,""],set_min_base:[1055,2,1,""],set_min_denominator:[1056,2,1,""],set_queue_timeout:[1057,2,1,""],set_tmp_dir:[1058,2,1,""],shape:[1059,2,1,""],shape_to_tuple:[1060,2,1,""],split:[1061,2,1,""],squeeze:[1062,2,1,""],stable_divide:[1063,2,1,""],stable_pow:[1064,2,1,""],stack:[1065,2,1,""],supports_inplace:[1066,2,1,""],swapaxes:[1067,2,1,""],tile:[1068,2,1,""],tmp_dir:[1069,2,1,""],to_list:[1070,2,1,""],to_numpy:[1071,2,1,""],to_scalar:[1072,2,1,""],transpose:[1073,2,1,""],try_else_none:[1074,2,1,""],unstack:[1075,2,1,""],value_is_nan:[1076,2,1,""],where:[1077,2,1,""],zero_pad:[1078,2,1,""],zeros_like:[1079,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1080,1,1,""],adam_step:[1082,2,1,""],adam_update:[1083,2,1,""],execute_with_gradients:[1084,2,1,""],gradient_descent_update:[1085,2,1,""],is_variable:[1086,2,1,""],lamb_update:[1087,2,1,""],lars_update:[1088,2,1,""],optimizer_update:[1089,2,1,""],set_with_grads:[1090,2,1,""],stop_gradient:[1091,2,1,""],unset_with_grads:[1092,2,1,""],variable:[1093,2,1,""],variable_data:[1094,2,1,""],with_grads:[1095,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1080,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1097,2,1,""],float_img_to_uint8_img:[1098,2,1,""],gradient_image:[1099,2,1,""],random_crop:[1100,2,1,""],stack_images:[1101,2,1,""],uint8_img_to_float_img:[1102,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1104,2,1,""],inv:[1105,2,1,""],matrix_norm:[1106,2,1,""],pinv:[1107,2,1,""],qr:[1108,2,1,""],svd:[1109,2,1,""],vector_to_skew_symmetric_matrix:[1110,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1112,2,1,""],logical_or:[1113,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1115,2,1,""],acosh:[1116,2,1,""],asin:[1117,2,1,""],atan2:[1119,2,1,""],atan:[1118,2,1,""],atanh:[1120,2,1,""],cosh:[1121,2,1,""],divide:[1122,2,1,""],erf:[1123,2,1,""],exp:[1124,2,1,""],log:[1125,2,1,""],sin:[1126,2,1,""],sinh:[1127,2,1,""],tan:[1128,2,1,""],tanh:[1129,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1131,2,1,""],maml_step:[1132,2,1,""],reptile_step:[1133,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1134,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1179,2,1,""],copy_nest:[1180,2,1,""],index_nest:[1181,2,1,""],map:[1182,2,1,""],map_nest_at_index:[1183,2,1,""],map_nest_at_indices:[1184,2,1,""],multi_index_nest:[1185,2,1,""],nested_indices_where:[1186,2,1,""],nested_map:[1187,2,1,""],set_nest_at_index:[1188,2,1,""],set_nest_at_indices:[1189,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1191,2,1,""],randint:[1192,2,1,""],random_normal:[1193,2,1,""],random_uniform:[1194,2,1,""],seed:[1195,2,1,""],shuffle:[1196,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1198,2,1,""],reduce_max:[1199,2,1,""],reduce_mean:[1200,2,1,""],reduce_min:[1201,2,1,""],reduce_prod:[1202,2,1,""],reduce_std:[1203,2,1,""],reduce_sum:[1204,2,1,""],reduce_var:[1205,2,1,""]},"ivy.functional.ivy.nn":{activations:[1207,0,0,"-"],layers:[1215,0,0,"-"],losses:[1228,0,0,"-"],norms:[1232,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1208,2,1,""],leaky_relu:[1209,2,1,""],relu:[1210,2,1,""],sigmoid:[1211,2,1,""],softmax:[1212,2,1,""],softplus:[1213,2,1,""],tanh:[1214,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1216,2,1,""],conv1d_transpose:[1217,2,1,""],conv2d:[1218,2,1,""],conv2d_transpose:[1219,2,1,""],conv3d:[1220,2,1,""],conv3d_transpose:[1221,2,1,""],depthwise_conv2d:[1222,2,1,""],dropout:[1223,2,1,""],linear:[1224,2,1,""],lstm_update:[1225,2,1,""],multi_head_attention:[1226,2,1,""],scaled_dot_product_attention:[1227,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1229,2,1,""],cross_entropy:[1230,2,1,""],sparse_cross_entropy:[1231,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1233,2,1,""]},"ivy.graph_compiler":{compiler:[1234,0,0,"-"],globals:[1237,0,0,"-"],graph:[1240,0,0,"-"],helpers:[1242,0,0,"-"],op_logging:[1243,0,0,"-"],param:[1244,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1235,2,1,""],show_graph:[1236,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1238,2,1,""],log_global_inference_rel_times:[1239,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1240,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1240,3,1,""],add_fn_to_dict:[1240,3,1,""],add_param:[1240,3,1,""],compiled:[1240,3,1,""],connect:[1240,3,1,""],debug_info:[1240,3,1,""],get_param:[1240,3,1,""],get_param_recursive:[1240,3,1,""],include_generators:[1240,3,1,""],increment_param_count:[1240,3,1,""],log_all_ops:[1240,3,1,""],params_all_empty:[1240,3,1,""],save_debug_info:[1240,3,1,""],set_param:[1240,3,1,""],show:[1240,3,1,""],show_debug_info:[1240,3,1,""],update_inference_times:[1240,3,1,""],with_array_caching:[1240,3,1,""]},"ivy.graph_compiler.param":{Param:[1244,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1244,3,1,""],count:[1244,3,1,""],depth:[1244,3,1,""],get:[1244,3,1,""],is_var:[1244,3,1,""],ptype:[1244,3,1,""],set:[1244,3,1,""],set_count:[1244,3,1,""],shape:[1244,3,1,""]},"ivy.stateful":{activations:[1249,0,0,"-"],converters:[1252,0,0,"-"],initializers:[1254,0,0,"-"],layers:[1263,0,0,"-"],module:[1275,0,0,"-"],norms:[1277,0,0,"-"],optimizers:[1279,0,0,"-"],sequential:[1285,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1250,1,1,""],GELU:[1251,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1250,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1251,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1253,2,1,""]},"ivy.stateful.initializers":{Constant:[1254,1,1,""],FirstLayerSiren:[1256,1,1,""],GlorotUniform:[1257,1,1,""],KaimingNormal:[1254,1,1,""],Ones:[1259,1,1,""],Siren:[1260,1,1,""],Uniform:[1254,1,1,""],Zeros:[1262,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1254,3,1,""],create_variables:[1254,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1256,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1257,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1254,3,1,""],create_variables:[1254,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1259,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1260,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1254,3,1,""],create_variables:[1254,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1262,3,1,""]},"ivy.stateful.layers":{Conv1D:[1264,1,1,""],Conv1DTranspose:[1265,1,1,""],Conv2D:[1266,1,1,""],Conv2DTranspose:[1267,1,1,""],Conv3D:[1268,1,1,""],Conv3DTranspose:[1269,1,1,""],DepthwiseConv2D:[1270,1,1,""],Dropout:[1271,1,1,""],LSTM:[1272,1,1,""],Linear:[1273,1,1,""],MultiHeadAttention:[1274,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1264,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1265,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1266,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1267,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1268,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1269,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1270,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1271,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1272,3,1,""],get_initial_state:[1272,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1273,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1274,3,1,""]},"ivy.stateful.module":{Module:[1276,1,1,""]},"ivy.stateful.module.Module":{__init__:[1276,3,1,""],build:[1276,3,1,""],build_mode:[1276,3,1,""],built:[1276,3,1,""],check_submod_rets:[1276,3,1,""],compile_graph:[1276,3,1,""],compile_on_next_step:[1276,3,1,""],get_mod_key:[1276,3,1,""],mod_depth:[1276,3,1,""],mod_height:[1276,3,1,""],mod_with_top_mod_key_chain:[1276,3,1,""],save_weights:[1276,3,1,""],show_graph:[1276,3,1,""],show_mod_in_top_mod:[1276,3,1,""],show_structure:[1276,3,1,""],show_v_in_top_v:[1276,3,1,""],sub_mods:[1276,3,1,""],track_submod_call_order:[1276,3,1,""],track_submod_rets:[1276,3,1,""],v_with_top_v_key_chains:[1276,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1278,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1278,3,1,""]},"ivy.stateful.optimizers":{Adam:[1280,1,1,""],LAMB:[1281,1,1,""],LARS:[1282,1,1,""],Optimizer:[1283,1,1,""],SGD:[1284,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1280,3,1,""],set_state:[1280,3,1,""],state:[1280,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1281,3,1,""],set_state:[1281,3,1,""],state:[1281,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1282,3,1,""],set_state:[1282,3,1,""],state:[1282,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1283,3,1,""],compile_graph:[1283,3,1,""],compile_on_next_step:[1283,3,1,""],set_state:[1283,3,1,""],show_graph:[1283,3,1,""],step:[1283,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1284,3,1,""],set_state:[1284,3,1,""],state:[1284,3,1,""]},"ivy.stateful.sequential":{Sequential:[1286,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1286,3,1,""]},"ivy.verbosity":{cprint:[1291,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1290,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1279,1280,1281],"02886":1246,"100":[1134,1246,1288],"141592653589793":831,"2021":1246,"2102":1246,"360":[840,843,1114,1126,1128],"718281828459045":831,"754":[831,836,837,840,850],"999":[1080,1082,1083,1087,1279,1280,1281],"abstract":[907,922,1246,1279,1283],"boolean":[40,41,840,842,846,849,907,942,954,957,971,980,981,983,989,990,1025,1027,1028,1032,1033,1034,1066,1076,1080,1086,1111,1112,1113,1130,1131,1132,1134],"break":43,"case":[15,18,19,40,41,42,43,840,841,907,946,953,956,981,984,1051,1053,1054,1103,1106,1108,1134,1178,1181,1185,1246,1263,1274,1275,1276,1279,1283,1292],"catch":[981,1006],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,392,432,433,836,838,907,909,910,911,912,913,914,916,917,919,920,921,922,934,935,957,981,985,1038,1080,1094,1134,1178,1180,1187,1228,1230,1231,1240,1244,1246,1249,1250,1251,1252,1253,1254,1256,1257,1259,1260,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1292],"default":[15,18,19,40,41,42,43,832,833,834,835,852,853,854,855,856,859,860,862,863,864,905,906,907,916,917,924,925,929,930,931,932,933,936,937,938,939,946,949,950,951,956,957,964,965,966,967,981,983,984,986,987,996,997,998,999,1002,1003,1004,1013,1016,1017,1018,1023,1025,1026,1035,1037,1038,1041,1043,1046,1049,1050,1053,1054,1057,1059,1061,1063,1064,1073,1075,1076,1080,1083,1085,1086,1087,1088,1089,1091,1095,1103,1106,1108,1130,1131,1132,1133,1134,1178,1179,1180,1182,1186,1187,1190,1191,1193,1194,1197,1199,1200,1201,1202,1203,1204,1205,1207,1208,1212,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286],"final":[40,41,43,981,1016,1036,1037,1134,1263,1274,1289],"float":[40,41,42,43,831,832,833,834,835,836,837,840,841,850,852,854,866,885,891,907,916,917,940,946,949,953,956,957,965,972,981,984,996,997,999,1016,1017,1021,1022,1037,1055,1056,1057,1063,1064,1080,1082,1083,1085,1087,1088,1089,1096,1098,1102,1114,1122,1130,1131,1132,1133,1134,1190,1193,1194,1207,1209,1215,1223,1226,1227,1228,1229,1230,1231,1232,1233,1263,1271,1274,1277,1278,1279,1280,1281,1282,1283,1284],"function":[15,40,41,43,389,390,391,394,395,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,831,833,834,835,837,838,841,842,843,844,845,846,847,848,849,850,852,853,854,856,860,863,864,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,909,910,911,912,913,914,916,917,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1246,1249,1250,1251,1279,1282,1283,1284,1288,1289,1292],"import":[43,1246,1289,1292],"int":[40,41,42,43,388,389,390,391,484,832,833,834,835,836,837,838,852,853,854,855,856,859,860,862,863,864,866,885,891,905,906,907,929,930,931,932,933,936,937,938,939,944,945,951,957,966,968,973,981,986,987,992,998,999,1003,1004,1007,1008,1009,1012,1013,1016,1017,1018,1023,1026,1035,1036,1037,1045,1046,1050,1051,1053,1054,1059,1060,1061,1062,1065,1067,1068,1073,1075,1078,1080,1082,1083,1087,1096,1100,1101,1103,1106,1130,1131,1132,1133,1134,1178,1187,1190,1191,1192,1194,1195,1197,1199,1200,1201,1202,1203,1204,1205,1207,1212,1215,1216,1217,1218,1219,1220,1221,1222,1226,1228,1230,1231,1232,1233,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1277,1278],"long":[1215,1225],"new":[40,41,43,484,832,833,834,835,840,844,848,957,961,981,982,992,1007,1008,1009,1012,1016,1017,1018,1019,1046,1051,1053,1054,1055,1056,1063,1064,1065,1080,1083,1085,1087,1088,1089,1096,1098,1100,1102,1114,1116,1120,1121,1127,1129,1134,1178,1188,1189,1190,1191,1232,1233,1246,1252,1253,1263,1273,1277,1278,1279,1280,1281,1282,1283,1284,1289,1292],"public":[981,1000],"return":[15,16,17,18,19,40,41,42,43,484,832,833,834,835,836,837,838,840,841,842,843,844,845,846,847,848,849,850,852,853,854,855,856,859,860,862,863,864,866,885,891,905,906,907,916,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,942,943,945,946,950,951,952,953,954,956,957,961,962,963,964,965,966,967,968,969,970,971,972,973,980,981,982,983,984,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1023,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1050,1051,1052,1053,1054,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1082,1083,1084,1085,1086,1087,1088,1089,1091,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1178,1179,1180,1182,1186,1187,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1246,1252,1253,1263,1272,1273,1279,1283,1288,1289,1292],"short":[1215,1225,1246,1292],"static":[40,41,905,906],"super":1134,"true":[40,41,42,434,440,468,471,484,485,840,845,852,854,859,860,862,863,864,905,906,907,981,983,991,993,1011,1016,1025,1027,1076,1077,1080,1083,1085,1086,1087,1088,1089,1091,1103,1106,1130,1131,1132,1133,1134,1178,1179,1186,1190,1191,1197,1199,1200,1201,1202,1203,1204,1205,1207,1208,1215,1223,1228,1229,1230,1231,1234,1235,1236,1240,1263,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284],"try":[40,41,981,1074,1134],"var":[40,41,1130,1131,1132,1292],"while":[40,41,42,1134],AND:[840,842,862,863,1111,1112],But:1292,For:[43,840,841,981,984,995,1065,1080,1086,1094,1103,1108,1114,1115,1246,1252,1253,1289,1292],Its:[1114,1118],NOT:[840,849],Not:831,One:[40,41,43,981,1008,1051,1190,1192,1292],Ones:[1246,1254],PRs:43,Such:[981,1000],That:1289,The:[15,16,17,18,19,40,41,42,43,840,841,842,843,845,847,850,852,854,855,856,859,860,862,863,864,866,885,891,905,906,907,916,917,923,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,946,949,950,951,952,953,956,957,961,962,963,968,969,970,971,980,981,984,988,989,992,993,996,997,998,999,1001,1002,1005,1006,1010,1013,1016,1018,1019,1026,1029,1030,1031,1033,1035,1037,1039,1041,1043,1046,1047,1050,1051,1053,1054,1055,1056,1057,1060,1061,1062,1063,1064,1065,1068,1076,1079,1080,1082,1083,1085,1087,1088,1089,1091,1094,1096,1098,1100,1102,1103,1106,1108,1109,1114,1115,1117,1118,1122,1123,1124,1125,1126,1128,1130,1131,1132,1133,1134,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1246,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1289,1292],There:[43,1246,1289],These:[43,1246],Used:[1178,1179,1186,1275,1276],Using:[1246,1247,1292],With:[40,41,1103,1106,1197,1199,1200,1201,1202,1203,1204,1205,1246,1288,1292],__array__:[981,988],__call__:[1263,1274,1275,1276],__del__:1134,__dict__:[1134,1289],__enter__:1134,__exit__:1134,__getitem__:1134,__getstate__:1134,__init__:[40,41,42,43,59,60,82,211,392,393,432,433,514,642,907,908,915,916,917,918,919,920,921,922,957,958,959,960,1080,1081,1134,1138,1145,1240,1241,1244,1245,1246,1249,1250,1251,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1292],__iter__:1134,__len__:1134,__next__:1134,__pow__:43,__repr__:1134,_assign_vari:1288,_axi:1134,_base:[1178,1179,1186],_compute_node_da_ratio:1134,_compute_node_strs_da:1134,_concat_unify_arrai:1134,_counter:1134,_cur_framework:[43,1134],_da_direct:1134,_da_directions_flip:1134,_da_step_tim:1134,_da_tim:1134,_da_tune_count:1134,_data:1134,_delta_da_dim_s:1134,_delta_sf:1134,_dict:1134,_dim_siz:1134,_first_da_tune_step:1134,_first_ns_tune_step:1134,_fn:1134,_forward:[1246,1288],_get_kalman_param:1292,_get_prior:1292,_get_some_model:1292,_handle_flat_arrays_in_out:43,_index:[1178,1179,1186],_input_queu:1134,_length:1134,_max_depth:1134,_max_node_dim_step_ratio:1134,_max_node_dim_step_s:1134,_max_split_factor_step_s:1134,_mean_unify_arrai:1134,_min_bas:[981,1064,1232,1233,1277,1278],_min_denomin:[981,1063],_min_node_dim_s:1134,_min_sf_tune_step:1134,_min_unit_node_tune_step:1134,_model:1292,_native_wrapp:43,_node_mapp:1134,_node_percent_mem:1134,_node_str:1134,_node_str_da_ratio:1134,_node_strs_da:1134,_node_strs_kei:1134,_node_strs_n:1134,_node_util:1134,_ns_step_tim:1134,_ns_time:1134,_ns_tune_count:1134,_num_nod:1134,_num_work:1134,_observed_config:1134,_output_queu:1134,_paramet:1288,_percent_mem_inc_per_sf:1134,_percent_mem_inc_per_unit_da_dim:1134,_percent_util_inc_per_unit_da_dim:1134,_ret_fn:1134,_safety_factor:1134,_save_dir:1134,_shift_da_split:1134,_shift_n:1134,_slice:1134,_step:[1279,1283],_sum_unify_arrai:1134,_timeout:1134,_tune:1134,_tune_da:1134,_tune_n:1134,_tune_step:1134,_unit_da_tune_count:1134,_unroll_step:1292,_with_node_mappig:1134,_worker:1134,_worker_class:1134,_worker_fn:1134,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,907,916,922,1134,1275,1276,1279,1283],abil:1246,abl:[40,41],about:[836,837,838],abov:[43,1190,1192],above_height:[40,41],abs:[291,434,561,690,852,854,981,1134],absolut:[40,41,981,982],abstractmethod:1134,accept:[15,43,1246],access:[40,41,43,1289],accord:[40,41,836,837,981,999,1018,1053,1054,1073,1078],accordingli:[852,854,862,863,864],accur:[59,392,432,433,907,919,920,921,922,957,1080,1240,1244,1254,1256,1257,1259,1260,1262],aco:[779,1114],acosh:[779,1114],across:[40,41,907,916,917,926,927,929,930,931,932,933,939,949,950,981,986,987,989,990,1134,1178,1182],activ:[1208,1209,1210,1211,1212,1213,1214,1246,1250,1251],actual:1289,adam:[1080,1082,1083,1087,1246,1279,1281,1288],adam_step:1080,adam_upd:1080,adapt:[1080,1088,1279,1282],add:[40,41,43,1134,1228,1229,1230,1231,1232,1233,1246,1277,1278,1289],add_fn_to_dict:1240,add_param:1240,added:[43,981,1063,1064,1285,1286],adding:[981,992],addit:[40,41,43,981,1007,1008,1009,1232,1233,1263,1273],adher:43,adjac:[981,984],adopt:[981,1000],affect:[981,984],affin:[1277,1278],after:[840,850,981,1035,1080,1083,1084,1085,1087,1088,1089,1096,1097,1232,1233,1279,1280,1281,1282,1283,1284,1292],after_1:[981,999,1078],after_n:[981,999,1078],again:43,against:[40,41,1103,1106,1197,1199,1200,1201,1202,1203,1204,1205],agnost:[43,1246,1288,1289],aim:1292,algebra:1103,algorithm:[1215,1216,1217,1218,1219,1220,1221,1222,1263,1264,1265,1266,1267,1268,1269,1270,1292],align:[40,41,43,981,992],aliv:[907,941,943,947,981,1020,1044,1048],all:[15,16,17,18,19,40,41,43,108,233,419,540,668,852,854,855,856,862,905,906,907,916,941,947,981,982,983,989,990,1000,1013,1020,1026,1048,1062,1103,1108,1130,1131,1132,1133,1134,1178,1179,1180,1186,1187,1190,1191,1194,1197,1199,1200,1201,1202,1203,1204,1205,1215,1225,1246,1289,1292],all_depth:[40,41],all_equ:981,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1178,all_tru:[40,41],alloc:[907,1134],allow:[981,1036,1037,1038,1275,1276],allow_dupl:[981,1038],alon:[907,946,956,1134,1246],along:[40,41,43,484,852,853,854,855,856,859,860,862,863,864,907,930,931,932,933,936,937,938,939,951,981,998,1003,1004,1013,1018,1035,1036,1037,1050,1061,1065,1068,1075,1103,1106,1130,1131,1132,1133,1134,1190,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205],alongsid:[1288,1289],alpha:[1207,1209],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,907,1134],also:[40,41,43,981,984,1080,1083,1130,1131,1132,1133,1178,1179,1180,1186,1187,1215,1224,1263,1273,1288],altern:1288,alwai:[40,41,43,1080,1086,1091],among:[40,41],amount:[907,953,1134,1246],angl:[1114,1115,1119],ani:[15,16,17,18,19,40,41,43,108,233,419,540,668,862,905,906,907,909,912,916,917,919,928,929,932,933,938,981,983,984,988,1006,1007,1008,1009,1010,1011,1025,1033,1038,1063,1064,1080,1084,1134,1178,1179,1182,1186,1187,1188,1189,1190,1194,1246,1252,1253,1275,1276,1288,1289,1292],anoth:[40,41,43,957,963,1246],another_backend:43,anyth:[43,1292],anywai:43,apart:43,api:[1246,1247],appear:[981,1012],append:[40,41,1134],appli:[15,18,19,40,41,840,849,981,1007,1008,1009,1080,1087,1088,1103,1109,1111,1112,1113,1130,1131,1132,1178,1182,1185,1187,1207,1208,1209,1210,1211,1212,1213,1214,1215,1224,1226,1227,1232,1233,1246,1249,1250,1251,1277,1278],applic:[1178,1182,1187,1215,1226,1227,1246,1292],approxim:[43,840,841,848,866,891,1207,1208],arang:[128,291,434,484,561,690,981,1036,1037],arbitrari:[40,41,907,936,937,939,1134],arc:[1114,1119],arcco:[1114,1115],arctan:[1114,1118],area:[840,841,1246],arg:[15,16,17,40,41,43,59,63,907,916,929,933,939,951,981,1007,1008,1009,1054,1134,1234,1235,1236,1240,1252,1253,1275,1276],arg_nam:981,arg_stateful_idx:[1234,1235,1236,1240,1275,1276],argmax:[128,434,561,690,981],argmin:[128,434,561,690,981],args_clon:1134,args_dist:1134,args_to_ivi:[15,1246],args_to_n:[15,1246],args_uni:1134,argsort:[105,230,416,537,665,859],argument:[15,16,17,18,19,40,41,42,43,59,63,905,906,907,916,917,929,933,939,981,984,985,993,1006,1038,1054,1114,1115,1134,1178,1182,1252,1253,1275,1276],aris:[1246,1292],arithmet:[43,1197,1200,1203,1205],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:484,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,128,291,434,484,561,690,832,833,834,835,836,837,838,840,841,842,843,844,845,846,847,848,849,850,852,853,854,855,856,859,860,862,863,864,885,891,907,925,926,927,930,931,932,933,936,937,938,939,941,943,947,951,952,957,961,967,972,973,981,982,983,984,986,987,989,990,991,992,994,995,996,997,998,999,1001,1002,1003,1004,1007,1008,1009,1010,1012,1013,1014,1015,1016,1017,1018,1019,1020,1023,1025,1026,1027,1028,1029,1030,1031,1033,1034,1035,1036,1037,1039,1040,1041,1042,1044,1045,1046,1047,1048,1050,1051,1052,1053,1054,1059,1061,1062,1065,1066,1067,1068,1070,1071,1072,1073,1075,1076,1077,1078,1079,1080,1082,1083,1086,1087,1091,1093,1094,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1134,1178,1180,1187,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1246,1247,1263,1271,1272,1274,1279,1283,1288,1289],arrang:[981,1007],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,388,389,390,391,392,394,395,831,832,833,834,835,836,837,838,840,841,842,843,844,845,846,847,848,849,850,852,853,854,855,856,859,860,862,863,864],array_api_methods_to_test:43,array_builtin:[43,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904],array_equ:[291,690,981],array_lik:[484,981,988],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,981],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1246],arraywithgener:[22,1246],arraywithgradi:[24,1246],arraywithimag:[26,1246],arraywithlinalg:[28,1246],arraywithlog:[30,1246],arraywithmath:[32,1246],arraywithmeta:[34,1246],arraywithrandom:[36,1246],arraywithreduct:[38,1246],arriv:[40,41,42],articl:1246,arxiv:1246,as_arrai:[40,41,981,1023,1059],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[432,434,443,907,925,957,964,965,966,967],as_tensor:434,as_vari:[40,41],as_zero:[40,41],asarrai:[434,981],asin:[779,1114],asinh:[86,397,518,646,840],aspect:[1096,1101],assert:[40,41,981,991,1134],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:981,associ:[43,1103,1110],assum:[1289,1292],astyp:[434,957],asynchron:[40,41,42],at_dev:[40,42,907,920,921],at_kei:[40,41],at_key_chain:[40,41],at_nod:1134,atan2:[779,1114],atan:[779,1114],atanh:[779,1114],attent:[43,1215,1226,1227,1263,1274],attribut:[0,6,40,41,836,837,838,981,1047,1079],audienc:[1246,1289],author:1246,avail:[40,41,43,907,942,944,945,954,981,1008,1134],averag:[1080,1082,1083,1087,1130,1131,1132,1197,1200],average_across_step:[1130,1131,1132],avoid:[907,1134,1289],axes:[40,41,43,434,465,477,478,852,854,855,856,862,863,864,907,951,981,986,987,999,1012,1013,1067,1073,1078,1103,1106,1134,1197,1199,1200,1201,1202,1203,1204,1205],axes_length:[40,41,981,1007,1008,1009],axi:[40,41,434,436,437,441,442,448,456,457,458,463,464,466,852,853,854,855,856,859,860,862,863,864,907,909,912,919,930,931,932,933,936,937,938,939,951,981,986,987,998,999,1002,1003,1004,1012,1013,1018,1035,1036,1037,1050,1061,1062,1065,1067,1068,1075,1078,1134,1190,1196,1197,1199,1200,1201,1202,1203,1204,1205,1207,1212,1228,1230,1231],axis0:[40,41,981,1067],axis1:[40,41,852,853,981,1067],axis2:[852,853],back:[43,1275,1276,1279,1283],backend:[15,17,19,40,41,388,389,390,391,392,394,395,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,482,483,484,485,907,942,945,954,957,963,971,980,981,1028,1032,1080,1083,1085,1087,1088,1089,1094,1134,1246,1247,1252,1253,1279,1280,1281,1282,1283,1284,1288,1289,1292],backend_nam:43,background:[1246,1289],backprop:1292,backward:[862,863,864,1288],band:[981,1016],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,392,432,433,434,458,840,848,866,891,907,909,910,911,912,913,914,916,917,919,920,921,922,957,981,1021,1037,1055,1064,1080,1134,1197,1198,1240,1244,1246,1249,1250,1251,1254,1256,1257,1259,1260,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1292],batch:[40,41,852,854,907,949,950,981,1013,1016,1026,1096,1100,1103,1109,1130,1131,1132,1133,1134,1215,1224,1232,1233,1277,1278],batch_shap:[434,450,981,1013,1026,1045,1096,1097,1098,1099,1100,1101,1102,1103,1110,1190,1191,1215,1225,1226,1227,1263,1272],batch_siz:[484,485,1134,1190,1191,1215,1216,1217,1218,1219,1220,1221,1222],bayesian:1292,becaus:[43,981,984],becom:[981,995,1114,1119,1292],been:[981,1007,1008,1009,1190,1191],befor:[40,41,43,907,951,1130,1131,1132,1134,1178,1187,1197,1199,1200,1201,1202,1203,1204,1205,1215,1226,1227,1292],before_1:[981,999,1078],before_n:[981,999,1078],begin:[1178,1179,1186,1289],behaviour:[43,1292],behind:[1080,1083,1085,1087,1088,1089,1246],being:[40,41,43,981,984,1049,1057,1134],belong:[40,41],below:[43,1246,1289,1292],below_depth:[40,41],benefit:1246,bernoul:[1215,1223,1263,1271],best:[43,981,1038,1246],beta1:[1080,1082,1083,1087,1279,1280,1281],beta2:[1080,1082,1083,1087,1279,1280,1281],beta:[1232,1233],between:[40,41,42,836,837,981,984,1103,1108,1178,1182,1190,1192,1228,1230,1231,1279,1281],bia:[1215,1224,1225,1263,1264,1265,1266,1267,1268,1269,1270,1273],bias_initi:[1263,1264,1265,1266,1267,1268,1269,1270,1273],bilinear:[1096,1097],bilinear_resampl:[164,346,473,604,764,1096],bilinearli:[1096,1097],binari:[840,842,1228,1229],binary_cross_entropi:1228,bit:[392,836,837,838,957,968,1096,1098,1102,1246],bitwis:[840,842],bitwise_and:[86,215,397,518,646,840],bitwise_oper:[0,7,8],block:[1246,1289],bool:[15,18,19,40,41,42,43,840,845,847,852,854,859,860,862,863,864,866,885,905,906,907,925,938,942,946,951,954,956,957,967,981,983,989,990,1003,1006,1010,1011,1016,1023,1025,1033,1038,1059,1061,1075,1076,1077,1080,1083,1084,1085,1086,1087,1088,1089,1091,1103,1106,1130,1131,1132,1133,1134,1178,1179,1180,1182,1186,1187,1190,1191,1197,1199,1200,1201,1202,1203,1204,1205,1207,1208,1215,1223,1252,1253,1263,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284],both:[43,981,1002],bottom:1246,boundari:[40,41,1190,1194],branch:[43,905,906],brittl:43,broadcast:[40,41,43,840,842,852,854,862,863,864,866,885,891,981,992,1010,1040,1041,1042,1050,1103,1106,1114,1119,1122,1197,1199,1200,1201,1202,1203,1204,1205],broadcast_to:[291,690,981],build:[1134,1246,1263,1274,1275,1276],build_mod:[1263,1274,1275,1276],builder:1246,built:[907,981,984,1134,1263,1274,1275,1276],builtin:43,builtin_ab:[246,866],builtin_add:[246,866],builtin_and:[246,866],builtin_bool:[246,866],builtin_contain:[246,866],builtin_deepcopi:[246,866],builtin_dir:[246,866],builtin_eq:[246,866],builtin_float:[246,866],builtin_floordiv:[246,866],builtin_g:[246,866],builtin_getattr:[246,866],builtin_getattribut:[246,866],builtin_getitem:[246,866],builtin_gt:[246,866],builtin_int:[246,866],builtin_invert:[246,866],builtin_l:[246,866],builtin_lt:[246,549,677,866],builtin_mul:[246,866],builtin_n:[246,866],builtin_neg:[246,866],builtin_or:[246,866],builtin_po:[246,866],builtin_pow:[43,246,866],builtin_radd:[246,866],builtin_rand:[246,866],builtin_rfloordiv:[246,866],builtin_rmul:[246,866],builtin_ror:[246,866],builtin_rpow:[246,866],builtin_rsub:[246,866],builtin_rtruediv:[246,866],builtin_rxor:[246,866],builtin_setitem:[246,866],builtin_some_op:43,builtin_sub:[246,866],builtin_truediv:[246,866],builtin_xor:[246,866],bypass:1289,cach:[907,923,981,993],cache_fn:981,calcul:[40,41,42,43,840,841,848,850,866,891,1114,1122],call:[43,907,951,981,1049,1057,1074,1080,1084,1134,1178,1179,1182,1186,1263,1274,1275,1276,1279,1283,1289,1292],callabl:[40,41,905,906,907,916,917,951,981,993,1006,1008,1038,1074,1130,1131,1132,1133,1134,1178,1182,1183,1184,1186,1187,1215,1226],can:[43,907,949,950,951,981,1051,1096,1098,1134,1246,1288,1289,1292],cancel_join_thread:1134,captur:1246,cast:[40,41,128,291,434,561,690,957,981,998,1096,1098,1102],catch_except:[981,1006],categori:43,caus:43,ceil:[291,434,690,981,984],cell:[1215,1225,1263,1272],certain:[40,41,981,984,1036,1037],chain:[40,41,1130,1131,1132,1285,1286],chang:[43,907,981,1051,1134,1178,1180,1187,1246,1288],channel:[981,1016,1096,1098,1099,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273],check:[15,16,17,18,19,40,41,43,907,946,956,957,962,971,980,981,991,1011,1025,1033,1066,1076,1080,1086,1134,1178,1179,1186,1246,1289],check_nest:[1178,1186],check_shap:[40,41],check_submod_ret:[1275,1276],check_typ:[40,41],choic:[1246,1289],choleski:[768,1103],choos:[981,1077,1103,1108,1114,1119,1246],choose_random_framework:59,chosen:[40,41,981,984,1077],chunk:[907,949,950,951,1134],chunk_siz:[907,951,1134],circl:[1114,1115,1117],clark:1246,clear:[907,923,1134],clear_framework_stack:59,clear_mem_on_dev:[432,682,907],click:1246,clip:[40,41,291,434,690,981,996,997,1040,1042,1246],clip_matrix_norm:981,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,981],clipped_delta:1134,clone:[40,41,907,926,927,928,929,1134],clone_arrai:1134,clone_it:1134,clone_nest:1134,clonedit:1134,cloneditem:1134,clonednest:1134,close:[43,1096,1101,1114,1117,1134,1292],closest:[957,962],closest_valid_dtyp:957,code:[40,41,42,43,484,1246,1247,1288,1289],codebas:[907,949,950,1134,1246,1289,1292],codomain:[840,841,850],collect:[15,40,41,432,434,468,473,477,481,482,484,866,905,907,957,981,1080,1096,1103,1111,1114,1134,1178,1190,1197,1207,1215,1228,1232,1249,1263,1277,1279],color:[40,41,42,1290,1291],column:[981,1026],combin:[40,41,42,1096,1101,1246,1292],combined_batch_s:1134,come:1289,command:1246,comment:43,commit:1292,common:[40,41,43,1114,1119],common_key_chain:[40,41],commun:[43,1246,1289],compar:[40,41,981,983,989,990],comparison_oper:[0,9,10],compat:[43,840,842,852,854,862,863,864,866,885,891,981,1010,1051,1114,1122,1246,1292],compil:[291,434,690,1235,1236,1240,1246,1275,1276,1279,1280,1281,1282,1283,1284],compile_graph:[1234,1246,1275,1276,1279,1283],compile_on_next_step:[1275,1276,1279,1280,1281,1282,1283,1284],complet:[40,41,1103,1108,1134],complex:[1289,1292],compon:[981,1002],composit:43,comput:[40,41,840,842,843,847,849,852,854,866,885,907,951,981,996,997,1003,1004,1010,1039,1080,1082,1083,1084,1085,1087,1088,1089,1091,1093,1096,1099,1103,1104,1105,1106,1107,1108,1111,1112,1113,1114,1115,1117,1118,1119,1123,1124,1125,1126,1128,1178,1182,1197,1198,1199,1200,1201,1202,1203,1204,1205,1215,1216,1217,1218,1219,1220,1221,1222,1224,1226,1228,1229,1230,1231],concat:[40,41,907,936,937,938,939,951,981,1016,1134],concaten:[40,41,128,291,434,561,690,981,1016,1134,1246],concatten:[40,41,907,936,937,938,939,951,1134],condit:[434,905,906,981,1077,1178,1186],conditon:[1178,1186],config:[40,41,1134],config_list:1134,configur:[40,41],conflict:43,conform:43,conjunct:1289,connect:[1240,1263,1273,1274],consid:[40,41,1103,1108,1288,1292],consist:[40,41,907,939,1134,1197,1198,1275,1276,1289],constant:[907,916,917,981,999,1134,1178,1182,1228,1229,1230,1231,1232,1233,1254,1255,1259,1262,1275,1276,1277,1278,1289],constant_kwarg:1134,constant_pad:[291,434,561,690,981],constitu:[40,41],construct:[981,1068,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288],constructor:[40,41,42,981,985,1285,1286],consum:[907,1134],cont_feat_dim:[1215,1226],contaienr:[40,41],contain:[15,18,19,42,43,832,834,835,840,841,842,845,847,848,850,852,854,859,860,862,863,864,866,885,891,907,926,930,951,957,961,981,982,986,987,995,996,997,1000,1010,1025,1040,1042,1052,1063,1064,1080,1082,1083,1085,1087,1088,1089,1114,1122,1130,1131,1132,1133,1134,1190,1191,1197,1199,1200,1201,1203,1205,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[434,690,981],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[434,981,1043,1215,1226,1263,1274],context_dim:[1263,1274],contextmanag:[59,60],continu:[43,1134,1289],contract:[40,41,1197,1198],contribut:[1246,1247],contributor:[43,1246],control:1246,conv1d:[195,377,498,821,1215,1246,1263],conv1d_transpos:[195,377,498,821,1215],conv1dtranspos:[1246,1263],conv2d:[195,377,498,630,821,1215,1246,1263],conv2d_transpos:[195,377,498,821,1215],conv2dtranspos:[1246,1263],conv3d:[195,377,498,630,821,1215,1246,1263],conv3d_transpos:[195,377,498,821,1215],conv3dtranspos:[1246,1263],convent:[40,41,1197,1198],conver:[907,923,934,946,953,956,1134],convers:[16,17,18,19,40,41,1134,1246],convert:[15,16,17,18,19,40,41,43,907,934,935,957,963,969,970,981,1060,1071,1072,1096,1098,1102,1103,1110,1134,1178,1180,1187,1246,1253],convert_dtyp:957,convolut:[1215,1216,1217,1218,1219,1220,1221,1222,1263,1264,1265,1266,1267,1268,1269,1270],cool:43,cooler:43,coordin:[981,1041,1114,1115,1117,1119],copi:[40,41,484,981,1001,1134,1178,1180],copy_arrai:[434,690,981],copy_nest:1178,core:[432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,482,483,484,485,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,909,910,911,912,913,914,916,917,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1246],corner:43,correct:[43,1246,1289],correctli:[40,41,1103,1106,1114,1119,1197,1199,1200,1201,1202,1203,1204,1205],correspond:[40,41,43,866,891,981,998,1190,1191],cos:[86,397,518,646,840,981,1016,1114,1115,1128,1289],cosh:[86,397,518,646,779,840,1114],cosin:[840,843,844,1114,1115,1116,1121],cost:[1080,1082,1083,1085,1087,1088,1089,1130,1131,1132,1133],cost_fn:[1130,1133],could:1292,count:[40,41,855,856,862,863,864,1134,1197,1202,1204,1244],cprint:1290,cpu:[40,41,43,907,944,946,952,953,956,981,984,988,1018,1019,1026,1036,1037,1045,1046,1047,1053,1054,1079,1134,1190,1191,1192,1193,1194,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1285,1286,1288,1289],creat:[40,41,832,833,834,835,907,916,917,981,984,988,1017,1018,1019,1026,1036,1037,1045,1046,1047,1053,1054,1070,1079,1080,1093,1134,1190,1191,1192,1193,1194,1246,1247,1252,1253,1254,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1292],create_if_abs:[40,41],create_vari:1254,creation:[40,41,42,43],creation_funct:[388,389,390,391,832,833,834,835],crop:[1096,1100],crop_siz:[1096,1100],cross:[291,690,981,1228,1229,1230,1231],cross_entropi:1228,cuda:[40,41,907,916,935,952,981,984,988,1018,1019,1026,1036,1037,1045,1046,1047,1053,1054,1079,1134,1190,1191,1192,1193,1194,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1285,1286],cumprod:[128,291,434,690,981],cumsum:[690,981],cumul:[981,1003,1004],current:[40,41,42,43,907,916,940,941,943,947,957,963,971,980,981,1005,1020,1028,1032,1044,1048,1134,1178,1179,1186,1246,1292],current_framework:59,current_framework_str:[434,690,981,1134],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1240,d_in:[1215,1216,1217,1218,1219,1220,1221],d_out:[1215,1216,1217,1218,1219,1220,1221],da_can_termin:1134,da_dim_s:[907,1134],da_direct:1134,da_tune_step:[907,1134],dai:1292,daniel:1246,data:[40,41,42,43,832,833,834,835,837,838,840,841,842,845,847,850,852,854,855,856,862,863,864,866,885,891,907,909,910,911,912,913,914,919,920,921,935,957,961,962,963,967,968,969,970,971,972,973,980,981,984,988,1010,1017,1026,1033,1046,1047,1051,1062,1066,1079,1080,1086,1094,1114,1122,1134,1215,1224,1246],data_format:[1215,1216,1217,1218,1219,1220,1221,1222,1263,1264,1265,1266,1267,1268,1269,1270],data_type_funct:[392,394,395,836,837,838],dataset:[40,41],datatyp:[40,41,957,962,972,973],dcdw:[1080,1082,1083,1085,1087,1088],debug_info:1240,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1080,1087,1088,1279,1281,1282],decay_lambda:[1080,1087,1088,1279,1281,1282],decid:[40,41,1292],decompos:[1103,1104,1108],decomposit:[1103,1104,1108,1109],decor:43,decrement:[981,1029],dedic:[1080,1094,1252,1253],deep:[40,41,1246],deep_copi:[40,41],deeper:[907,929,933,939,1134,1178,1187,1246],deepli:[1178,1180],def:[43,60,82,211,393,514,642,908,915,918,958,959,960,1081,1134,1138,1145,1241,1245,1246,1255,1258,1261,1288,1289,1292],default_dev:43,default_devic:907,default_dtyp:[43,957],default_float_dtyp:957,default_int_dtyp:957,default_key_color:[40,41,42],default_nod:1134,default_rng:484,default_v:[981,1006],defaultdevic:[907,908],defaultdtyp:[957,958],defaultfloatdtyp:[957,959],defaultintdtyp:[957,960],defer:43,defin:[43,981,1002,1045,1047,1079,1190,1192],degre:[840,843,1114,1126,1128],del:1134,delta:[1080,1082,1134,1240],delta_dim_s:1134,delta_percent_mem:1134,delta_sf:1134,delta_util:1134,demo:1246,denomin:[981,1015,1022,1056,1063,1064,1232,1233,1277,1278],dens:[1263,1273],depend:[43,840,841,848,866,891,981,1077,1103,1109,1246],depth:[40,41,434,459,907,929,933,939,981,1024,1045,1134,1178,1187,1240,1244,1275,1276],depth_cutoff:[40,41],depthwis:[1215,1222,1263,1270],depthwise_conv2d:[195,377,498,630,821,1215],depthwiseconv2d:[1246,1263],deriv:[1080,1082,1083,1085,1087,1088,1089,1178,1180,1187,1246,1275,1279,1283,1285],descend:[859,860,1103,1109],descent:[1080,1085,1279,1284],describ:[40,41,1197,1198],descript:[852,854],design:[1246,1247],desir:[40,41,907,952,957,961,981,984,988,1026,1027,1046,1047,1079,1096,1101,1134,1197,1199,1200,1201,1203,1205],desired_aspect_ratio:[473,476,1096,1101],desired_percent_increas:1134,detail:1292,detect:[40,41,1178,1179,1186],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,840,841,842,845,850,852,854,862,863,864,866,891,907,942,944,945,954,957,961,962,968,971,972,973,980,981,983,984,988,989,990,1025,1028,1032,1033,1066,1076,1080,1086,1114,1122,1130,1131,1132,1133,1134,1215,1226],dev:[40,41,42,43,121,285,432,434,435,438,448,449,450,457,458,459,460,461,462,467,484,485,554,682,907,910,911,913,914,916,917,920,921,923,924,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,943,946,947,948,949,950,951,952,953,956,981,984,988,1018,1019,1026,1036,1037,1045,1046,1047,1053,1054,1079,1080,1095,1190,1191,1192,1193,1194,1252,1253,1254,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1285,1286],dev_clon:[40,41,907],dev_clone_arrai:907,dev_clone_it:907,dev_clone_nest:907,dev_dist:[40,41,907],dev_dist_arrai:907,dev_dist_it:907,dev_dist_nest:907,dev_from_str:[43,121,285,432,554,682,907],dev_mapp:907,dev_str:[40,41],dev_to_str:[121,285,432,554,682,907],dev_unifi:907,dev_unify_arrai:907,dev_unify_it:907,dev_unify_nest:907,dev_util:907,devclonedit:907,devcloneditem:907,devclonednest:907,devdistit:907,devdistitem:907,devdistnest:907,develop:[43,1246,1289,1292],deviat:[40,41,1190,1193,1197,1203,1232,1233,1277,1278],devic:[21,40,41,43,388,389,390,391,433,434,447,832,833,834,835,909,910,911,912,913,914,916,917,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,981,984,988,1017,1018,1019,1026,1036,1037,1045,1046,1047,1053,1054,1079,1080,1095,1190,1191,1192,1193,1194,1246,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1285,1286],devmanag:[907,915],devmapp:[907,917],devmappermultiproc:907,diag:[1103,1109],diagon:[98,223,409,530,658,852,981,1026],dict:[15,16,17,18,19,40,41,42,907,909,912,916,917,919,929,930,931,932,933,981,1007,1008,1009,1038,1130,1131,1132,1134,1178,1180,1181,1182,1185,1187,1252,1253],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,836,837,907,926,927,930,931,1103,1108,1134,1215,1224,1246,1289,1292],differenti:[1246,1289],dilat:[1215,1216,1217,1218,1219,1220,1221,1222,1263,1264,1265,1266,1267,1268,1269,1270],dim:[40,41,43,981,1045,1096,1097,1101,1103,1109,1134,1263,1274],dim_siz:[40,41,907,1134],dimens:[40,41,42,852,853,854,855,856,862,863,864,907,938,981,992,998,1002,1007,1008,1009,1012,1016,1023,1035,1045,1050,1051,1061,1062,1065,1073,1075,1096,1100,1103,1106,1109,1130,1131,1132,1133,1134,1190,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1212,1215,1216,1217,1218,1219,1220,1221,1222,1225,1228,1230,1231,1263,1264,1265,1266,1267,1268,1269,1270,1273,1274],dimension:[40,41,484,852,854,862,863,864,981,1061,1062,1103,1109],direct:1134,directli:[43,1178,1187,1289,1292],directori:[981,1058,1069],discret:[1228,1230],disk:[40,41,1096,1098],distanc:[981,984],distribut:[40,41,907,926,930,931,932,933,1134,1190,1191,1192,1193,1194,1215,1223,1263,1271,1275,1276],distribute_nest:1134,distributedarrai:[40,41],distrubt:[1228,1230],dive:[1246,1289],divid:[40,41,981,1061,1063,1114],dividend:[1114,1122],divis:[981,1015,1022,1056,1063,1064,1080,1082,1083,1087,1114,1122,1279,1280,1281],divisor:[1080,1082,1083,1087,1114,1122,1279,1280,1281],doc:1246,docstr:43,doe:[40,41,43,981,984,1061,1288],doesn:[1103,1108,1246],doing:43,domain:[840,841,850,1114,1115],don:1246,done:43,door:1292,dot:[1103,1105,1215,1226,1227,1263,1274],down:1288,downscal:[981,996,997],drag:[1246,1292],draw:[1190,1191,1193,1194],drawn:[1190,1191,1192,1193,1194],drop:[1246,1292],dropout:[1215,1246,1263,1274],dropout_r:[1263,1274],ds_tune_step:907,dtype:[40,41,43,128,291,388,389,390,391,392,394,395,434,435,438,439,447,450,460,467,561,690,832,833,834,835,836,837,838,961,962,963,964,965,966,968,969,970,971,972,973,974,975,976,977,978,979,980,981,984,988,1017,1026,1045,1046,1047,1079],dtype_bit:[128,291,434,561,690,957],dtype_from_str:[43,128,291,434,561,690,957],dtype_in:[434,444,445,446,957,963,968,969,970,971,972,973,980],dtype_to_str:[128,291,434,561,690,957],duplic:[40,41],dure:[40,41,43,905,906,981,1074,1080,1082,1083,1087,1130,1131,1132,1133,1275,1276,1279,1280,1281,1283],dynam:[434,440,905,906],each:[40,41,42,43,840,841,842,845,847,848,850,859,860,866,885,891,907,916,917,926,927,928,929,930,931,932,938,950,951,981,982,983,999,1010,1050,1061,1065,1068,1078,1080,1083,1085,1087,1088,1089,1096,1099,1103,1109,1114,1117,1122,1124,1125,1134,1178,1182,1190,1191,1197,1198,1215,1216,1217,1218,1219,1220,1221,1222,1223,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1289],eager:1289,easi:1292,easili:1246,econom:1292,ecosystem:1246,edg:[981,995,999,1078],effect:[1080,1089],effective_grad:[1080,1089],effici:1292,einop:[40,41,981,1007,1008,1009],einops_rearrang:[40,41,981],einops_reduc:[40,41,981],einops_repeat:[40,41,981],einstein:[40,41,1197,1198],einsum:[40,41,181,365,486,620,801,1197],either:[40,41,43,981,1006,1038,1041,1043,1130,1131,1132,1133,1134,1263,1274,1275,1276,1289],eleg:1134,element:[40,41,43,484,840,841,842,843,844,845,847,848,849,850,855,856,859,860,862,863,864,866,885,891,907,928,932,938,957,961,981,982,984,986,987,989,990,994,995,996,997,1003,1004,1010,1013,1014,1015,1026,1027,1040,1042,1050,1052,1061,1072,1077,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1134,1197,1198,1200,1202,1204,1207,1208,1209,1210,1211,1212,1213,1214,1215,1223,1263,1271],elementwis:[40,41],elementwise_affin:[1277,1278],elementwise_funct:[840,841,842,843,844,845,846,847,848,849,850],elemtn:[1190,1191],elif:1134,els:[981,991,1006,1011,1134],elsewher:[981,1077],emphas:1246,empti:[40,41,77,206,388,509,637,832,1103,1108,1134],enabl:[40,41,42,43,1246],encapsul:[836,838],encod:[981,1016,1096,1098],end:[981,984,1246,1289],ensur:43,entir:[40,41,862,863,864,907,951,1134,1246,1263,1272],entri:[40,41,981,1013,1036,1037,1061,1062],entropi:[1228,1229,1230,1231],enumer:1134,environ:1246,eps:[392,836,837],epsilon:[1080,1082,1083,1087,1228,1229,1230,1231,1232,1233,1277,1278,1279,1280,1281],equal:[40,41,434,561,690,840,843,845,981,983,989,990,999,1061,1078,1114,1126,1128,1190,1194],equality_matrix:[981,983],equat:[40,41,1197,1198],equival:[852,854,981,984,1114,1128],erf:[482,779,1114],error:[40,41,43,907,981,1062,1114,1123,1134,1207,1208,1275,1276,1279,1283],essenti:43,etc:[40,41,43,907,952,981,984,988,1018,1019,1026,1036,1037,1045,1046,1047,1053,1054,1079,1134,1190,1191,1192,1193,1194,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1285,1286,1292],euclidean:[852,854],euler:831,evalu:[40,41,840,848,862,863,864,981,1041,1178,1179,1186],even:[43,1292],evenli:[40,41,981,984,1036,1037,1061],everi:[981,983,1292],exact:[40,41],exampl:[43,905,906,981,995,1065,1103,1108,1246,1288,1289,1292],example_input:[434,440,905,906],exc_tb:1134,exc_typ:1134,exc_val:1134,exce:[981,1042],except:[40,41,44,47,862,863,864,981,984,991,998,1006,1074,1134],excess_s:1134,excit:[1246,1289],exclud:[59,61,981,984,1190,1194],exclus:[40,41,434,442,455,468,470,981,1003,1033,1080,1086,1190,1192],execut:[43,981,1074,1289],execute_with_gradi:[161,341,468,599,758,1080,1246,1288],exist:[40,41,981,1006,1134,1246,1279,1283,1292],exp:[779,1114],expand:[40,41,981,1012,1016],expand_dim:[40,41,291,690,981,1134],expect:[981,985],explain:[43,1289],explicitli:[43,1263,1272,1274,1275,1276,1289],expon:[43,866,891,981,1064],exponenti:[43,866,891,1114,1123,1124],expos:[981,988,1000],express:[981,1041],exsit:[40,41],extend:43,extra:[40,41,42,1080,1084],extract:[852,853],eye:[1103,1105],fabian:1246,fabio:1246,factor:[907,916,949,950,951,1080,1082,1083,1087,1088,1103,1109,1134,1215,1216,1217,1218,1219,1220,1221,1222,1263,1264,1265,1266,1267,1268,1269,1270,1279,1280,1281,1282],fail:43,falck:1246,fall:[1275,1276,1279,1283],fallback_to_non_compil:[1275,1276,1279,1283],fals:[15,18,19,40,41,42,59,66,67,68,69,70,432,434,442,443,455,463,466,468,469,470,477,478,840,845,852,854,859,860,862,863,864,907,925,938,946,951,956,957,964,965,966,967,981,983,1003,1006,1011,1016,1023,1033,1038,1059,1061,1075,1077,1080,1083,1084,1085,1086,1087,1088,1089,1103,1106,1130,1131,1132,1133,1134,1178,1179,1180,1182,1186,1187,1197,1199,1200,1201,1202,1203,1204,1205,1234,1235,1236,1240,1244,1252,1253,1275,1276,1279,1280,1281,1282,1283,1284],fan_in:1254,fan_mod:1254,fan_out:1254,far:[1178,1179,1186,1288],faster:[905,906],favourit:[1246,1288],feasibl:1292,feat_dim:[1215,1226,1227],fed:[907,951,1134],feed:[907,951,1134],few:43,field:1292,file:[40,41,43,981,1058,1069,1275,1276],filepath:[40,41],fill:[40,41,832,833,834,835,981,1017,1046,1190,1192],fill_valu:[434,447,981,1017],filter:[1215,1216,1217,1218,1219,1220,1221,1222,1263,1264,1265,1266,1267,1268,1269,1270,1292],filter_s:[1263,1264,1265],filter_shap:[1263,1266,1267,1268,1269,1270],find:[40,41,1292],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[81,82,210,211,392,393,513,514,641,642,836],finish:[1246,1292],finit:[840,845],first:[40,41,43,484,840,842,905,906,907,938,981,989,998,1002,1010,1036,1037,1065,1067,1080,1084,1103,1109,1130,1131,1132,1133,1134,1178,1179,1186,1190,1196,1197,1202,1204,1263,1274,1275,1276,1279,1283,1289,1292],firstlayersiren:[1246,1254],firstli:[1289,1292],fist:[907,951,1134],fit:[40,41,432,434,468,473,477,481,482,484,981,1050,1096,1101],fix:43,fkt:1292,flag:[40,41,43,1080,1086],flat:[40,41,43,981,1050,1053],flat_list:[40,41],flatten:[40,41,852,854,981,1016,1050,1197,1199,1200,1201,1203,1205],flatten_key_chain:[40,41,1275,1276],flexibl:[1246,1289],flip:[40,41,101,226,412,533,661,855,981],float32:[43,434,450,957,961,969,970,981,984,988,1026,1046,1047,1079],float_dtyp:[957,965,975],float_img_to_uint8_img:1096,floor:[291,434,690,981,1015,1134],floormod:[291,434,690,981],fluid:1292,fname:[1234,1236,1240,1275,1276],folder:[43,1246],follow:[40,41,43,836,838,852,854,907,951,981,1029,1030,1031,1063,1064,1080,1083,1085,1087,1088,1089,1134,1178,1182,1187,1215,1226,1227,1246,1263,1273,1279,1283],followng:[836,837],fomaml_step:1130,forget:[1080,1082,1083,1087,1279,1280,1281],fork:[981,1043,1246,1247],forkserv:[981,1043,1134],form:[15,16,17,18,19,40,41,981,988,1080,1083,1085,1087,1088,1089,1178,1180,1187,1215],format:[40,41,43,907,925,957,961,963,967,981,984,988,1026,1046,1047,1079,1134,1197,1198,1246,1288,1289],format_fn:[40,41],format_key_chain:[40,41],forward:[1275,1276,1279,1283,1288],found:[40,41,42],fourier:[981,1016],fourier_encod:981,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,99,100,102,106,109,110,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,165,166,167,169,170,171,175,176,177,178,179,180,182,183,184,185,186,187,188,191,193,194,196,197,198,199,200,201,202,207,208,209,211,212,213,216,217,218,219,220,221,224,225,227,231,234,235,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,342,343,344,345,347,348,349,351,352,353,354,355,357,358,361,362,363,364,366,367,368,369,370,371,372,373,376,378,379,380,381,382,383,384,389,390,391,393,394,395,398,399,400,401,402,403,404,405,406,407,410,411,413,417,420,421,433,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,469,470,471,472,474,475,476,478,479,480,483,485,487,488,489,490,491,492,493,496,497,499,500,501,502,503,504,505,510,511,512,514,515,516,519,520,521,522,523,524,525,526,527,528,531,532,534,538,541,542,550,555,556,557,558,559,560,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,600,601,602,603,605,606,607,609,610,611,612,616,617,618,619,621,622,623,624,625,626,627,631,632,633,638,639,640,642,643,644,647,648,649,650,651,652,653,654,655,656,659,660,662,666,669,670,678,683,684,685,686,687,688,689,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,759,760,761,762,763,765,766,767,769,770,771,772,773,774,775,777,778,780,781,782,783,784,785,786,787,788,789,790,791,792,793,795,796,797,798,799,800,802,803,804,805,806,807,808,811,812,813,814,815,816,817,819,820,822,823,824,825,826,827,828,833,834,835,837,838,840,841,842,843,844,845,846,847,848,849,850,852,853,854,856,860,863,864,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1112,1113,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1233,1235,1236,1238,1239,1241,1245,1246,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289,1291,1292],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1134,framewrk:[981,1043],freeli:43,frequenc:[981,1016],from:[40,41,42,43,840,847,850,852,853,855,856,862,863,864,907,916,917,951,957,963,981,1006,1013,1018,1019,1026,1051,1062,1070,1077,1080,1083,1087,1096,1100,1103,1108,1130,1131,1132,1133,1134,1178,1180,1187,1190,1191,1192,1193,1194,1197,1202,1204,1215,1223,1226,1246,1252,1253,1263,1271,1274,1279,1283,1288,1289],from_cal:[1275,1276],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[128,291,434,561,690,836,837,981,1103,1108,1246],full_matric:[1103,1109],fulli:[43,1246,1263,1273,1274,1288],func:[40,41,434,440,468,469,905,906,907,951,981,993,1080,1084,1134],further:[43,1292],furthermor:1292,futur:1292,gain:1254,gamma:[1232,1233],gather:[40,41,128,291,434,561,690,981,1019],gather_nd:[40,41,128,291,434,561,690,981],gauss:[1114,1123],gaussian:[1207,1208],geglu:[1246,1249],gelu:[375,495,810,1207,1246,1249],gener:[23,40,41,43,432,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,484,905,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1086,1190,1192,1194,1195,1246,1279,1283],geometr:[981,1016],get:[40,41,43,836,837,838,907,916,917,925,940,941,946,950,953,956,957,967,968,981,985,1020,1021,1022,1049,1134,1244,1246,1263,1272,1292],get_all_arrays_in_memori:981,get_all_arrays_on_dev:907,get_framework:59,get_initial_st:[1263,1272],get_min_bas:981,get_min_denomin:981,get_mod_kei:[1275,1276],get_num_dim:[434,690,981],get_param:1240,get_param_recurs:1240,get_referrers_recurs:981,getfullargspec:1134,gist:1246,give:[43,859,860,981,1051,1289],given:[40,41,43,832,833,834,835,855,856,859,860,907,940,946,949,950,951,953,956,957,961,981,984,988,995,1003,1004,1013,1019,1036,1037,1046,1047,1050,1053,1054,1061,1068,1073,1075,1079,1080,1082,1083,1085,1087,1088,1089,1103,1105,1110,1114,1115,1134,1178,1183,1184,1190,1193,1194,1196,1197,1200,1202,1203,1204,1205,1215,1216,1217,1218,1219,1220,1221,1222,1252,1253,1292],global:[40,41,42,907,916,917,924,949,950,951,957,964,965,966,981,1005,1021,1022,1049,1055,1056,1057,1063,1064,1080,1095,1134,1232,1233,1238,1239,1246,1277,1278],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1246,1254,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273],got:[43,1246],gpu0:43,gpu2:43,gpu:[907,942,945,1134],gpu_is_avail:[432,907,1134],grad:[1246,1279,1283,1288],gradient:[25,40,41,469,470,471,472,907,951,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1099,1130,1131,1132,1133,1246,1279,1280,1281,1282,1283,1284,1288,1292],gradient_descent_upd:[1080,1130,1131,1132,1133],gradient_imag:[164,346,473,604,764,1096],gradienttrack:[1080,1081],graph:[1080,1083,1085,1087,1088,1089,1234,1235,1236,1241,1246,1275,1276],graph_compil:[1234,1235,1236,1237,1238,1239,1240,1244],greater:[40,41,981,984,1014,1062,1190,1194],green:[40,41,42,1290,1291],grid:[981,1041],group:[1096,1101],guid:[1246,1247,1292],gym:1246,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1292,half:[981,984,1134,1190,1194],hand:1246,handl:[40,41,42,43,905,906,907,923,925,934,935,946,953,956,1080,1083,1085,1087,1088,1089,1134,1279,1280,1281,1282,1283,1284],has:[40,41,43,981,1065,1103,1108,1114,1118],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,981],hasattr:1134,have:[40,41,43,832,833,836,837,840,841,842,845,847,850,852,854,855,856,862,863,864,866,885,891,981,998,1002,1007,1008,1009,1010,1017,1065,1080,1086,1094,1103,1109,1114,1122,1134,1246,1288,1289],haven:43,hdf5:[40,41,1275,1276],head:[1215,1226,1263,1274],head_dim:[1263,1274],height:[1096,1101],height_cutoff:[40,41],help:[59,392,432,433,907,919,920,921,922,957,1080,1240,1244,1246,1254,1256,1257,1259,1260,1262],helper:1246,here:[43,1246],hidden:[1215,1225,1263,1272],hierarch:[981,1000],hierarchi:[40,41],high:[40,41,484,1190,1192,1194],higher:[1080,1083,1085,1087,1088,1089,1103,1109],highest:[1190,1192],highest_util:1134,highest_util_nod:1134,highli:1246,highlight:1292,highlight_subgraph:[1234,1236,1240],hint:43,hkt:1292,hold:[957,961,981,984,988,1053,1054],host:1246,hot:[981,1045],how:[1246,1263,1274,1275,1276,1289,1292],howev:[43,1289],http:1292,hyperbol:[840,841,844,1114,1116,1120,1121,1127,1129,1207,1214],hypothet:1292,icon:1246,idea:1246,ident:[40,41,43,128,291,434,561,690,981],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[831,836,837,840,850],if_exist:[40,41],ignor:[40,41,1279,1283],ignore_key_error:[40,41],ignore_miss:[1279,1283],ignore_non:[40,41],iinfo:[81,210,392,513,641,836],imag:[27,474,475,476,981,1035,1097,1098,1099,1100,1101,1102,1215,1216,1217,1218,1219,1221,1222,1246,1292],image_dim:[1096,1100],imkkhk:1292,immedi:[1246,1289,1292],implement:[43,840,841,848,866,891,1246,1289,1292],in_featur:[1215,1224],inadvert:43,includ:[40,41,43,852,854,862,863,864,981,984,1025,1063,1064,1076,1178,1179,1190,1194,1263,1273,1274,1277,1278,1288],include_deriv:[1178,1180,1187],include_empti:[40,41],include_gener:[1234,1235,1236,1240,1275,1276],include_inf:[40,41,981,1025,1076],include_nest:[1178,1179],include_self:[40,41],inclus:[1190,1192],incom:[1215,1224],increas:[907,929,933,939,981,999,1012,1078,1134,1178,1187],increasingli:1292,increment:[981,1030,1134],increment_param_count:1240,inde:1246,indent:[40,41,42],independ:[1190,1191],index:[40,41,434,484,981,986,987,1018,1019,1041,1062,1065,1178,1181,1183,1184,1185,1188],index_nest:1178,indic:[40,41,434,448,449,459,461,462,852,854,859,860,981,986,987,1018,1019,1027,1045,1053,1054,1178,1179,1181,1183,1184,1185,1186,1188,1189,1190,1191,1207,1212,1215,1216,1217,1218,1219,1220,1221,1222,1232,1233,1263,1264,1265,1266,1267,1268,1269,1270,1275,1276],indices_wher:[128,291,434,690,981],indistinguish:[840,850],inevit:1292,inf:[40,41,852,854,981,1025,1034,1076,1114,1118],infer:[840,847,852,853,905,906,981,1013,1023,1026,1051,1059,1096,1100,1103,1108,1289,1292],infin:[840,841,845,850,852,854,981,1034],infinit:[840,850],inform:[836,837,838,1080,1091],init_c:[1215,1225],init_h:[1215,1225],init_on_first_step:[1279,1283],initi:[40,41,42,59,392,432,433,907,919,920,921,922,957,1080,1134,1215,1225,1240,1244,1246,1256,1257,1259,1260,1262,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1279,1283],initialz:[1275,1276],inner:[1130,1131,1132,1133],inner_batch_fn:[1130,1131,1132],inner_batch_shap:[1215,1224],inner_cost_fn:[1130,1131,1132],inner_grad_step:[1130,1131,1132,1133],inner_learning_r:[1130,1131,1132,1133],inner_optimization_step:[1130,1131,1132,1133],inner_v:[1130,1131,1132],inp:1134,inplac:[40,41,981,991,1028,1032,1066,1080,1083,1085,1087,1088,1089,1252,1253,1279,1280,1281,1282,1283,1284],inplace_arrays_support:[434,981],inplace_decr:[128,291,434,561,690,981],inplace_incr:[128,291,434,561,690,981],inplace_oper:[0,11,12],inplace_upd:[40,41,128,291,434,561,690,981,1252,1253],inplace_variables_support:[434,981],input:[15,18,19,40,41,42,43,840,841,842,843,844,845,846,847,848,849,850,852,853,854,855,856,859,860,862,863,864,905,906,907,916,917,924,925,926,929,930,933,939,951,952,957,961,962,964,965,966,967,968,972,973,981,982,983,986,987,989,990,991,992,994,995,996,997,998,999,1001,1003,1004,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1023,1025,1026,1027,1029,1030,1031,1033,1034,1035,1039,1040,1041,1042,1050,1052,1059,1060,1062,1065,1066,1067,1068,1070,1071,1072,1073,1075,1076,1078,1080,1084,1086,1091,1095,1096,1097,1098,1099,1100,1102,1103,1106,1108,1109,1111,1112,1113,1114,1116,1118,1120,1121,1122,1126,1127,1128,1129,1130,1131,1132,1133,1134,1190,1191,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1232,1233,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1277,1278,1289],input_ax:[907,951,1134],input_channel:[1263,1264,1265,1266,1267,1268,1269,1272,1273],input_queu:1134,inputs_split:1134,insert:[981,1012],insid:43,inspect:1134,inspir:1292,instal:1246,instanc:[15,16,17,18,19,40,41,43,484,866,885,891,907,916,1134,1252,1253,1285,1286],instead:[40,41,484,1197,1199,1200,1201,1202,1203,1204,1205,1292],int32:43,int64:[957,961,981,984,988,1026,1046,1047,1079],int_dtyp:[957,966,976],integ:[40,41,484,836,838,840,842,852,854,862,863,864,957,973,981,984,994,1014,1052,1061,1190,1192,1195],integr:1246,intend:43,inter:1246,interchang:[40,41,981,1067],interest:1246,interfac:[981,988,1289],intermedi:[40,41],intern:[40,41,907,1080,1094,1134,1178,1179,1186,1187,1254,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1285,1286],interpol:[981,1035],intersect:[1114,1115],interv:[40,41,862,863,864,981,984,995,1036,1037,1114,1117,1190,1194],introduc:1292,inv:[768,1103,1292],invalid:[862,863,864],invalid_dtyp:957,invers:[840,841,1103,1105,1107,1114,1115,1116,1117,1118,1120,1292],invert:[1103,1105,1107],invest:1292,invoc:[905,906],irrespect:1246,is_al:1134,is_arrai:[128,291,434,561,690,981,1134],is_float_dtyp:957,is_int_dtyp:957,is_mean:1134,is_sum:1134,is_var:[1240,1244],is_vari:[161,341,468,599,758,1080],isfinit:[86,215,397,518,646,840],isinf:[291,561,690,981],isinst:1134,isnan:[86,215,397,518,646,840],isnumer:1134,issu:43,item:[15,19,40,41,866,878,879,907,916,917,919,926,928,930,932,938,957,964,981,1000,1024,1063,1064,1134,1178,1182,1183,1184,1187,1188,1189,1246,1275,1276,1288],iter:[15,16,17,18,19,40,41,42,905,906,907,910,911,913,914,916,917,920,921,928,930,931,932,933,938,951,981,983,992,998,999,1013,1026,1041,1046,1050,1051,1054,1059,1061,1065,1068,1073,1078,1134,1178,1179,1180,1182,1186,1187],iterbal:[907,928,932,938,1134],its:[484,859,860,907,951,981,1026,1051,1067,1073,1134,1246],itself:[43,1178,1187],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,388,389,390,391,392,394,395,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,831,832,833,834,835,836,837,838,840,841,842,843,844,845,846,847,848,849,850,852,853,854,855,856,859,860,862,863,864,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,909,910,911,912,913,914,916,917,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1244,1246,1247,1249,1250,1251,1252,1253,1254,1256,1257,1259,1260,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1290,1291],ivy_backend:[40,41],ivy_bay:1292,ivy_test:43,ivyfcmodel:1288,ivyh:[40,41,42],ivymodul:[192,818],jame:1246,jax:[43,1080,1086,1246,1292],jax_concat:1246,jnp:1246,join:[40,41,981,998,1065,1134],journal:1246,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1246,1263,1272,1292],kaimingnorm:[1254,1258],kalman:1292,kalman_filt:1292,kalman_filter_step:1292,kalman_filter_upd:1292,keep:[40,41,907,952,981,1075,1134,1246,1247,1292],keep_inner_v:[1130,1131,1132],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1130,1131,1132],keepdim:[40,41,434,466,477,478,852,854,862,863,864,981,1075,1103,1106,1197,1199,1200,1201,1202,1203,1204,1205],kei:[15,16,17,40,41,42,43,866,871,907,919,981,1000,1130,1131,1132,1134,1178,1181,1185,1215,1226,1227,1246,1252,1253,1263,1274,1279,1283],kept:[40,41,42,1130,1131,1132],kera:1292,kernel:[1215,1225],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,907,916,917,929,933,939,981,985,1007,1008,1009,1038,1134,1178,1182,1275,1276],keyword_color_dict:[40,41,42],kind:[836,837,838,1292],kwarg:[15,16,17,40,41,42,59,63,907,916,929,933,939,981,1038,1134,1234,1235,1236,1240,1252,1253,1275,1276],kwarg_stateful_idx:[1234,1235,1236,1240,1275,1276],kwargs_clon:1134,kwargs_dist:1134,kwargs_uni:1134,label:[43,1228,1229,1230,1231],lamb:[1080,1087,1246,1279],lamb_upd:1080,lambda:[1134,1279,1282,1284,1288],lar:[1080,1087,1088,1246,1279],larger:[836,837,981,995],largest:[40,41,836,837,838,981,986,1014],lars_upd:1080,last:[40,41,855,856,862,863,864,981,984,1002,1035,1061,1065,1103,1106,1109,1197,1202,1204,1207,1212,1215,1225,1263,1273],later:[40,41,981,993],latest:[1263,1272],layer:[1080,1083,1085,1087,1089,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1232,1233,1246,1254,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1285,1286,1292],layer_norm:1232,layernorm:[1246,1277],layerwis:[1080,1088,1279,1282],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1178,1179,1186],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1207,1208,1209],leaky_relu:[810,1207],learn:[840,847,852,853,1080,1083,1085,1087,1088,1089,1103,1108,1130,1131,1132,1133,1190,1196,1246,1279,1280,1281,1282,1283,1284,1289,1292],learnabl:[1232,1233,1277,1278],leav:[15,18,19,40,41,1178,1179,1180,1186,1187],left:[40,41,43,1103,1106,1197,1199,1200,1201,1202,1203,1204,1205,1246],leftmost:[40,41],len:1134,length:[40,41,42,981,984,1051,1062,1073],lenton2021ivi:1246,lenton:1246,less:[40,41,43,86,215,397,518,646,840,852,854,981,994,1134,1190,1194],less_util_node_str:1134,let:[1289,1292],level:1246,librari:[1246,1288,1292],lightweight:1246,like:[43,1080,1086,1190,1194,1246,1288,1289,1292],limit:[40,41,42,836,837,838,981,995,996,997],linalg:[29,1104,1105,1106,1107,1108,1109,1110,1246],line:43,linear0:[1246,1288],linear1:1246,linear2:1288,linear:[981,1016,1035,1103,1207,1208,1209,1210,1215,1223,1246,1263,1264,1265,1266,1267,1268,1269,1270,1288],linear_algebra:[477,478,479,480,852,853,854],linear_resampl:[128,291,434,561,690,981],linearli:[981,1016],link:[43,1246],linspac:[128,291,434,561,690,981,984],list:[15,18,19,40,41,43,388,389,390,391,832,833,834,835,855,856,862,863,864,907,916,917,926,927,929,930,931,933,936,937,951,981,984,988,990,1041,1060,1061,1070,1075,1130,1131,1132,1134,1178,1179,1180,1182,1186,1187,1215,1216,1217,1218,1219,1220,1221,1222,1246,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270],list_join:[40,41,42],list_stack:[40,41],liter:[852,854],littl:1289,load:[40,41],loaded_kwarg:1134,loader:1246,local:43,local_set:[981,1024],locat:[43,840,846,981,1034,1190,1191],log2:[86,397,518,646,840],log:[779,981,1037,1114,1134,1228,1229,1230,1231,1246],log_all_op:1240,log_global_inference_abs_tim:[1237,1246],log_global_inference_rel_tim:[1237,1246],logarithm:[840,848,1114,1125],logic:[31,840,849,862,863,864,1112,1113,1246],logical_and:[356,776,1111],logical_not:[86,215,397,518,646,840],logical_or:[356,776,1111],logit:[1228,1231],logspac:[128,291,434,561,690,981],look:[43,1289,1292],loop:[1130,1131,1132,1133],loss:[1229,1230,1231,1246,1288],loss_fn:[1246,1288],lot:1289,low:[40,41,484,1190,1192,1194],lower:[40,41,43,981,1040,1190,1194],lower_depth:[1275,1276],lowest:[15,18,19,40,41,1178,1187,1190,1192],lstm:[1215,1225,1246,1263],lstm_updat:[43,1215],machin:[836,837,838,840,847,852,853,1103,1108,1190,1196,1246,1289,1292],made:43,mai:[981,984,1006,1010,1246,1289,1292],main:[981,1026,1246],mainli:1246,maintain:43,make:[43,484,907,1134,1246,1289],maml:[1130,1131,1132],maml_step:1130,manag:[907,1134],manhattan:[852,854],mani:[40,41,43,981,1061,1246],manipulation_funct:[855,856],manner:[15,18,19,40,41,43,1178,1187],manual:[1178,1179,1186,1292],map:[40,41,42,840,846,907,916,981,1034,1134,1178,1183,1184,1187,1263,1274,1288],map_cont:[40,41],map_nest_at_index:1178,map_nest_at_indic:1178,map_sequ:[40,41],mapper:[907,916,917,1134],mask:[1215,1226,1227],master:43,match:[40,41,981,1038],match_kwarg:981,math:[33,483,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1134,1246],mathbb:[1103,1110],mathbf:[1103,1110],mathemat:[831,852,854],matmul:[43,291,434,561,690,981,1292],matplotlib:1289,matric:[1215,1224],matrix:[40,41,852,853,981,983,996,1039,1103,1104,1105,1106,1107,1108,1110,1215,1224,1263,1273],matrix_norm:[40,41,168,350,477,608,768,1103],matter:1246,max:[40,41,392,836,837,838,981,996,997,1008,1040,1053,1054,1134,1197,1199,1279,1281],max_batch_s:[40,41],max_chunk_s:[907,951,1134],max_depth:[40,41,907,911,914,921,929,933,939,981,1024,1134,1178,1187],max_dev_dim_step_ratio:907,max_freq:[981,1016],max_length:[40,41],max_node_dim_step_ratio:1134,max_norm:[40,41,981,996,997],max_split_factor_step_s:[907,1134],max_trust_ratio:[1080,1087,1279,1281],maxim:[1246,1289,1292],maximis:1246,maximum:[40,41,42,690,907,929,933,939,951,981,986,995,996,997,1016,1080,1087,1134,1178,1187,1197,1199],mayb:[15,18,19],mdi:1134,mean:[40,41,484,907,936,937,938,939,951,981,1008,1130,1131,1132,1133,1134,1178,1182,1190,1193,1197,1200,1203,1205,1254,1288,1292],measur:[1215,1226,1263,1274],mech:1246,mechan:[1246,1292],medic:1292,member:43,memori:[907,923,946,951,953,956,1134,1215,1225,1246],merg:43,merge_with_upstream:43,meshgrid:[291,434,690,981],messag:[1290,1291],meta:[35,1131,1132,1133,1246],method:[40,41,42,43,484,981,988,1000,1041,1053,1054,1080,1087,1088,1134,1178,1179,1186,1187,1246,1263,1274,1275,1276,1289],might:[981,1006,1292],min:[40,41,392,836,837,838,852,854,981,1008,1042,1053,1054,1063,1103,1108,1134,1197,1201],min_bas:[981,1064],min_denomin:[981,1063],min_dev_dim_s:907,min_node_dim_s:1134,min_sf_tune_step:[907,1134],min_unit_dev_tune_step:907,min_unit_node_tune_step:1134,mind:1246,mini:[1232,1233,1277,1278],minimum:[40,41,690,907,957,961,981,984,987,988,995,1021,1022,1055,1056,1063,1064,1134,1197,1201],miss:[1279,1283],ml_framework:[840,847,852,853,981,984,1103,1108],mod:[981,1015],mod_depth:[1275,1276],mod_height:[1275,1276],mod_with_top_mod_key_chain:[1275,1276],mode:[40,41,477,479,905,906,907,936,937,938,939,951,1103,1108,1109,1134,1289],model:[1246,1288],modul:[40,41,42,59,981,1043,1134,1246,1247,1249,1250,1251,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1277,1278,1285,1286,1292],moment:[1080,1082,1083,1087,1279,1280,1281],more:[43,855,856,981,1065,1134,1246,1289,1292],more_util_node_str:1134,most:[40,41,43,1103,1108,1246,1292],move:[40,41,43,907,952,1134],much:[43,1246,1292],multi:[484,981,1043,1215,1226,1263,1274],multi_head_attent:1215,multi_index_nest:1178,multi_map:[40,41],multi_nod:1134,multidev:[907,918,919,920,939],multidevcontain:[40,41],multidevic:[907,916],multidevit:[907,910,913,916,917,921],multidevitem:[907,909,912],multidevnest:[907,911,914],multiheadattent:[1246,1263],multinod:[1134,1138],multinodecontain:1134,multinodeit:1134,multinodeitem:1134,multinodenest:1134,multinomi:[174,360,484,615,794,1190],multipl:[40,41,862,863,864,981,1038,1061,1103,1105,1197,1199,1200,1201,1202,1203,1205,1232,1233,1263,1273,1289],multipli:[40,41,981,1003,1197,1202],multiprocess:[40,41,42,434,690,907,916,981,1134],must:[40,41,42,43,832,833,834,835,840,841,842,845,847,850,852,854,855,856,862,863,864,866,885,891,907,936,937,938,939,951,981,984,998,1000,1002,1010,1040,1042,1054,1065,1114,1119,1122,1134,1190,1195,1279,1283],mutabl:[1178,1180,1187],mutlidevic:[907,916],mutlinod:1134,mw_tm1:[1080,1083,1087],mx_concat:1246,mxnet:[43,1246,1292],my_func:43,mymodel:1246,name:[905,906,1234,1235,1236,1240,1288],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1289],nan:[40,41,831,840,841,845,846,981,1025,1076],nativ:[15,17,18,19,40,41,43,907,923,925,934,935,946,953,956,957,962,969,970,1134,1246,1247,1252,1253],native_modul:[1252,1253],native_module_class:[1252,1253],nativearrai:[15,18,19,43,836,837,838,840,841,842,843,844,845,846,847,848,849,850,852,854,855,856,859,860,862,863,864,866,885,891,907,925,951,952,957,961,967,972,973,981,982,983,984,986,987,988,989,990,992,994,995,996,997,998,999,1001,1002,1003,1004,1007,1008,1009,1010,1012,1013,1014,1015,1016,1018,1019,1023,1025,1026,1027,1034,1035,1036,1037,1039,1040,1041,1042,1045,1046,1047,1050,1051,1052,1053,1054,1059,1061,1062,1065,1067,1068,1070,1071,1072,1073,1075,1076,1077,1078,1079,1134,1178,1180,1187],natur:[1114,1125,1292],ncdhw:[1215,1220,1221,1263,1268,1269],nchw:[1215,1218,1219,1222,1263,1266,1267,1270],ncw:[1215,1216,1217,1263,1264,1265],ndarrai:[43,388,389,390,391,392,394,395,484,981,1071],ndhwc:[1215,1220,1221,1263,1268,1269],nearest:[981,1052],need:[43,981,996,997,1215,1217,1219,1221,1246,1263,1265,1267,1269,1292],neg:[40,41,840,845,852,854,855,856,862,863,864,1197,1202,1204,1207,1209],negative_slop:1254,neither:1134,nest:[15,16,17,18,19,40,41,42,907,929,933,939,981,988,1070,1130,1131,1132,1134,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1275,1276,1279,1280,1281,1282,1283,1284],nested_indices_wher:1178,nested_map:[1134,1178],network:[1215,1224,1246,1247,1249,1263,1275,1276,1292],neural:[1215,1246,1249,1263,1288],new_node_percent_mem:1134,new_node_util:1134,new_node_utils_kei:1134,new_std:[1232,1233,1277,1278],newli:[43,905,906,981,992,993],newlin:[40,41,42],newshap:[981,992,1051],next:[836,837,1134,1275,1276,1279,1280,1281,1282,1283,1284],nhwc:[1215,1218,1219,1222,1263,1266,1267,1270],node:[40,41,1178,1179,1186],node_clon:1134,node_dist:1134,node_dist_arrai:1134,node_dist_it:1134,node_in:1134,node_mapp:1134,node_str:1134,node_to_str:1134,node_util:1134,nodedistit:1134,nodedistitem:1134,nodedistnest:1134,nodemanag:[1134,1145],nodemapp:1134,nodemappermultiproc:1134,noinspect:[43,908,958,959,960,1081,1134,1241],non:[40,41,852,854,862,863,864,905,906,957,971,1275,1276,1279,1283,1289],none:[40,41,42,43,59,61,64,388,389,390,391,432,434,435,438,440,447,448,449,450,457,458,459,460,461,462,463,464,465,467,477,478,484,485,832,833,834,835,836,837,838,840,847,852,853,854,855,856,862,863,864,905,906,907,916,917,923,924,949,950,951,952,957,964,965,966,981,984,988,1005,1006,1011,1013,1017,1018,1019,1024,1026,1028,1029,1030,1031,1032,1036,1037,1043,1045,1046,1047,1050,1053,1054,1055,1056,1061,1062,1063,1064,1073,1074,1079,1080,1083,1085,1087,1088,1089,1095,1096,1100,1103,1106,1108,1130,1131,1132,1133,1134,1178,1179,1182,1186,1187,1190,1191,1192,1193,1194,1197,1199,1200,1201,1202,1203,1204,1205,1215,1217,1219,1221,1224,1225,1226,1227,1232,1233,1234,1235,1236,1240,1244,1252,1253,1254,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286],norm:[40,41,852,854,981,996,997,1103,1106,1233,1246,1278,1279,1281],normal:[1190,1193,1232,1233,1277,1278],normalized_idx:[1232,1233],normalized_shap:[1277,1278],notat:[40,41,1197,1198],note:[43,1103,1108],noth:[40,41,1289],notimplementederror:1134,now:[40,41,907,952,981,982,1134,1246,1263,1274,1275,1276,1288,1289,1292],np_concat:1246,np_finfo:392,ns_tune_step:1134,num:[434,457,458,981,1036,1037],num_arrai:[40,41],num_arrays_in_memori:981,num_arrays_on_dev:907,num_band:[981,1016],num_channel:[1263,1270],num_chunk:1134,num_chunks_floor:1134,num_class:[1190,1191],num_cpu_cor:907,num_gpu:[121,432,907,1134],num_head:[1215,1226,1263,1274],num_kei:[1215,1226,1227],num_lay:[1263,1272],num_or_size_split:[40,41,434,463,981,1061],num_output:1134,num_queri:[1215,1226,1227],num_sampl:[434,456,484,485,981,1035,1096,1097,1190,1191],num_task:[1130,1131,1132,1133],number:[40,41,42,831,836,837,838,840,846,862,863,864,905,906,907,943,944,945,957,968,972,973,981,984,995,999,1012,1016,1023,1026,1035,1036,1037,1040,1044,1050,1061,1068,1072,1076,1078,1103,1109,1130,1131,1132,1133,1134,1190,1191,1195,1197,1199,1200,1201,1203,1205,1215,1226,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1289,1292],numer:[43,840,845,866,885,891,981,1021,1022,1055,1056,1063,1064,1114,1122,1254],numhead:[1215,1226],numpi:[40,41,43,388,389,390,391,392,394,395,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,981,1071,1103,1108,1109,1197,1198,1246,1288,1289,1292],nwc:[1215,1216,1217,1263,1264,1265],obj:[40,41],object:[40,41,42,59,392,836,837,838,907,957,961,981,984,988,1080,1178,1181,1183,1184,1185,1188,1189,1190,1196,1240,1244,1254,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1275,1276],object_in:[434,438,981,988],observ:1134,occupi:[836,837,838,981,1053,1054],off:[981,984],offer:1246,offset:[852,853,1232,1233],often:1289,old:[40,41],on_init:[1263,1274,1275,1276],onc:[43,907,951,1134,1190,1191,1246],one:[40,41,43,852,854,855,856,907,936,937,938,939,951,957,963,981,1026,1038,1045,1053,1054,1062,1065,1103,1106,1134,1197,1198,1199,1200,1201,1202,1203,1204,1205,1246,1289,1292],one_hot:[128,434,561,690,981],onearrai:[981,1012],ones:[40,41,77,206,388,509,637,832,981,1026,1045,1047,1246],ones_lik:[128,291,434,561,690,981],ongo:43,onli:[40,41,43,484,855,856,907,1103,1108,1134,1178,1179,1180,1186,1279,1280,1281,1282,1283,1284,1288,1289],onlin:1246,onto:[907,936,937,952,1134,1178,1182,1187],oom:[907,1134],open:[981,984,1190,1194,1246,1292],opencv:1289,oper:[40,41,840,849,981,991,1007,1008,1009,1036,1037,1066,1080,1083,1085,1087,1088,1089,1111,1112,1113,1215,1216,1217,1218,1219,1220,1221,1222,1224,1246,1247],operand:[40,41,840,841,1197,1198],oppos:[981,1016],optim:[907,1080,1083,1085,1087,1088,1089,1130,1131,1132,1133,1134,1246,1280,1281,1282,1284,1288,1292],optimizer_upd:1080,option:[15,18,19,40,41,42,43,388,389,390,391,832,833,834,835,840,847,852,853,854,855,856,862,863,864,905,906,907,916,917,925,929,930,931,932,933,936,937,938,939,946,949,950,951,952,956,957,962,967,971,980,981,983,984,986,987,988,996,997,998,1003,1005,1006,1013,1016,1017,1018,1019,1023,1025,1026,1033,1035,1036,1037,1038,1041,1043,1045,1046,1047,1050,1053,1054,1057,1059,1061,1062,1063,1064,1065,1073,1075,1076,1079,1080,1083,1085,1086,1087,1088,1089,1091,1096,1100,1103,1106,1108,1130,1131,1132,1133,1134,1178,1179,1180,1182,1186,1187,1190,1191,1197,1199,1200,1201,1202,1203,1204,1205,1207,1208,1212,1215,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1289],ord:[852,854,981,1013,1103,1109],order:[40,41,42,43,852,854,855,856,859,860,1080,1083,1085,1087,1088,1089,1103,1106,1130,1131,1132,1285,1286],ordered_node_util_kei:1134,org:1292,organ:43,origin:[40,41,42,981,1047,1051,1079,1103,1106],other:[40,41,43,866,868,869,874,876,877,881,883,884,885,886,887,889,891,892,893,894,895,896,898,899,900,902,903,904,905,906,981,983,984,1026,1080,1084,1190,1194,1246,1288,1289,1292],other_i:[43,866,885,891],otherwis:[15,16,17,18,19,40,41,840,845,852,854,862,863,864,907,924,957,964,965,966,981,991,1073,1074,1077,1080,1086,1091,1095,1130,1131,1132,1134,1197,1199,1200,1201,1203,1205],our:[43,1246,1292],out:[484,866,885,981,984,1114,1118,1215,1223,1225,1246,1263,1271],out_feat_dim:[1215,1226],out_featur:[1215,1223,1224],out_i:[840,845],outdat:1292,outer:[1130,1131,1132,1133],outer_batch_fn:[1130,1131,1132],outer_batch_shap:[1215,1224],outer_cost_fn:[1130,1131,1132],outer_v:[1130,1131,1132],outlin:1289,output:[40,41,43,832,833,834,835,855,856,907,916,917,951,981,984,993,1017,1026,1050,1068,1080,1084,1114,1119,1134,1190,1192,1193,1194,1215,1217,1219,1221,1223,1225,1226,1227,1246,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274],output_ax:[907,951,1134],output_axi:1134,output_channel:[1263,1264,1265,1266,1267,1268,1269,1272,1273],output_connected_onli:[1234,1236,1240,1275,1276],output_queu:1134,output_shap:[1215,1217,1219,1221,1263,1265,1267,1269],outsid:[981,995],over:[40,41,852,854,862,863,864,981,1013,1103,1106,1190,1194,1197,1199,1200,1201,1203,1205,1232,1233,1277,1278],overal:1289,overflow:[981,984],overhead:1289,overrid:[981,1045,1047,1079],overriden:[1279,1283],overwrit:[40,41,907,951,1134],overwrite_at_key_chain:[40,41],own:[1246,1289,1292],packag:[43,1289],pad:[981,999,1016,1078,1215,1216,1217,1218,1219,1220,1221,1222,1263,1264,1265,1266,1267,1268,1269,1270],pad_width:[434,981,999,1078],page:1246,pair:[1215,1227],parallel:[907,916,917,1134],parallelis:[907,916,917,1134],param:[40,41,42,43,434,448,449,832,833,834,835,840,850,907,951,981,982,1018,1019,1045,1046,1134,1245,1246,1275,1276,1288],paramet:[15,16,17,18,19,40,41,42,832,833,834,835,836,837,838,840,841,842,843,844,845,846,847,848,849,852,853,854,855,856,859,860,862,863,864,866,885,891,905,906,907,916,917,923,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,946,949,950,951,952,953,956,957,961,962,963,967,968,969,970,971,972,973,980,981,983,984,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1001,1002,1003,1004,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1023,1025,1026,1027,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1046,1047,1050,1051,1052,1053,1054,1055,1056,1057,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1082,1083,1084,1085,1086,1087,1088,1089,1091,1093,1094,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288],parameter:[1190,1193,1194],params_all_empti:1240,pardo:1246,pars:[981,1000],part:[1080,1083,1085,1087,1088,1089,1114,1118,1246,1275,1276,1289],partial:[40,41,1275,1276],particl:1292,particular:[43,1292],pass:[40,41,42,43,907,916,951,957,962,981,993,1080,1094,1130,1131,1132,1134,1252,1253,1275,1276,1279,1283,1285,1286],pattern:[40,41,981,1007,1008,1009],per:[907,1134,1215,1216,1217,1218,1219,1220,1221,1222,1263,1264,1265,1266,1267,1268,1269,1270],percent_used_mem_on_dev:907,percent_used_mem_on_nod:1134,percentag:[907,946,1134],perf_count:1134,perform:[40,41,43,859,860,862,863,864,907,981,986,987,1003,1007,1008,1009,1029,1030,1031,1035,1036,1037,1080,1083,1085,1087,1088,1089,1096,1097,1130,1131,1132,1133,1134,1178,1183,1184,1197,1199,1200,1201,1202,1203,1204,1205,1207,1212,1215,1223,1225],permissable_step:1134,permit:43,permut:[484,981,1067,1073],perpendicular:[981,1002],person:1246,physci:1292,pickl:[40,41,1134],pickle_filepath:[40,41],pid:1240,pinv:[350,768,1103],pip:1246,pipelin:1288,pkk:1292,pkkm1:1292,pkm1km1:1292,place:[40,41,43,832,833,834,835,907,952,981,1012,1017,1029,1030,1031,1134,1279,1280,1281,1282,1283,1284],placehold:[1178,1187],pleas:[484,1103,1108],point:[43,831,832,833,834,835,836,837,840,841,850,852,854,957,972,981,984,1114,1122],popul:[40,41,1190,1191],popular:1292,population_s:[484,485,1190,1191],portabl:[1246,1247],posit:[15,16,17,836,837,840,845,907,929,933,939,981,982,984,1012,1016,1134,1190,1195,1252,1253],possibi:[40,41],possibl:[981,1038,1070,1096,1101,1292],post:[1232,1233],post_shap:[40,41],power:[43,866,891,897,981,1021,1055,1064,1254],practic:1246,pre:[907,1134,1246],pre_shap:[40,41],precis:[836,837,840,850],pred:[1228,1229,1230,1231],predict:[1228,1229,1230,1231,1292],preprint:1246,present:[40,41],preserv:[40,41,42,855,856,981,1013,1080,1091],preserve_typ:[40,41,468,471,1080,1091],press:1246,prevent:[43,1080,1082,1083,1087,1134,1279,1280,1281],previou:[1080,1083,1087],previous:[981,993],prime:1246,print:[40,41,42,907,947,981,1048,1246,1288],print_all_arrays_in_memori:981,print_all_arrays_on_dev:907,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1279,1283],prob:[484,485,1190,1191,1215,1223,1263,1271],probabl:[1190,1191,1215,1223,1263,1271],problem:[43,1292],process:[43,907,916,917,946,956,981,1043,1134],process_specif:[907,946,956,1134],prod:[40,41,981,1008],produc:[907,916,917,1134],product:[40,41,981,1002,1003,1039,1197,1198,1215,1226,1227,1263,1274],profil:[121,285,432,554,682,907,1134],project:[1246,1288,1289,1292],promot:[43,840,841,842,850,852,854,866,891,1114,1122],prompt:1246,properli:43,properti:[40,41,392,907,919,1134,1240,1244,1275,1276,1279,1280,1281,1282,1284],provid:[40,41,43,855,856,862,863,864,905,906,907,924,957,964,965,966,971,980,981,1006,1045,1047,1054,1079,1080,1083,1085,1087,1088,1089,1095,1134,1246,1263,1272,1279,1280,1281,1282,1283,1284,1289],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1103,1107],ptype:[1240,1244],pull:[1246,1247],pure:[40,41,1246,1292],purpos:1292,put:1134,pybroadexcept:1134,pyprotectedmemb:[1134,1241],pyshadowingbuiltin:43,pyshadowingnam:[908,958,959,960,1081,1134],python:[40,41,907,946,956,981,984,1134,1246],pytorch:[1080,1083,1085,1087,1088,1089,1103,1108,1246,1279,1280,1281,1282,1283,1284,1288,1289,1292],pyunresolvedrefer:1134,quadrant:[1114,1119],queri:[40,41,866,880,901,907,940,950,1134,1215,1226,1227,1263,1274],query_dim:[1263,1274],query_kei:[40,41],queue:[40,41,42,907,916,917,981,1049,1057,1134],queue_class:[907,916,917,1134],queue_load_s:[40,41,42],queue_timeout:[40,41,42,981,1134],quick:[484,1246],quickli:[43,1288],radian:[840,843,1114,1115,1117,1119,1126,1128],rai:[1114,1115],rais:[40,41,43,862,863,864,866,891,981,991,1021,1055,1062,1064,1074,1134,1275,1276,1279,1283],ram:[907,946,953,956,1134],randint:[174,360,484,615,794,1190],random:[37,40,41,485,1191,1192,1193,1194,1195,1196,1246],random_crop:1096,random_norm:[174,360,484,615,794,1190],random_uniform:[174,360,484,615,794,1190],randomli:[484,1096,1100,1215,1223,1263,1271],randomness_factor:[1234,1236,1240,1275,1276],rang:[484,981,984,1036,1037,1114,1119,1134,1246,1288,1292],rank:[852,854,862,863,864,981,999,1075,1078],rate:[1080,1083,1085,1087,1088,1089,1130,1131,1132,1133,1263,1274,1279,1280,1281,1282,1283,1284],rather:[40,41,907,951,981,984,1033,1080,1086,1134],ratio:[907,1080,1087,1096,1101,1134,1279,1281],raw:[40,41,1103,1108],raw_delta:1134,reach:[907,929,933,939,1134,1178,1187],read:[40,41],readi:[1134,1288],real:[1114,1115,1118],realiti:1289,rearrang:[40,41,981,1007,1009],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1130,1132],receiv:[907,916,917,981,985,1038,1134,1263,1273],receivess:[907,1134],receiving_fn:1240,receivng:[1130,1133],recev:[1130,1131,1132],recognit:1292,recommend:1246,rectifi:[1207,1209,1210],recurr:[1215,1225],recurrent_bia:[1215,1225],recurrent_kernel:[1215,1225],recurs:[40,41,1178,1179,1180,1186,1187],redefin:43,reduc:[40,41,862,863,864,907,951,981,1008,1103,1108,1134,1197,1199,1200,1201,1202,1203,1204,1205],reduce_max:[40,41,181,365,486,620,801,1197],reduce_mean:[40,41,181,365,486,620,801,1197,1246,1288],reduce_min:[40,41,181,365,486,620,801,1197],reduce_prod:[40,41,181,365,486,620,801,1197],reduce_std:[40,41,365,1197],reduce_sum:[40,41,181,365,486,620,801,1134,1197],reduce_var:[40,41,181,365,486,620,801,1197],reduct:[39,40,41,434,461,462,862,863,864,981,1008,1053,1054,1198,1199,1200,1201,1202,1203,1204,1205,1246],refactor:43,refer:[43,862,863,864,1080,1082,1083,1103,1110,1263,1273,1292],reflected_oper:[0,13,14],regard:[907,1134],regardless:[40,41,905,906],register_paramet:1288,reimplement:1292,rel:[855,856,1080,1083,1085,1087,1088,1089],rel_slice_obj:1134,relev:[1279,1280,1281,1282,1283,1284],relu:[810,1207,1208,1209,1246,1288],remain:[43,981,1051,1178,1182],remaind:[40,41,981,1015,1061],remov:[40,41,981,1062,1130,1131,1132],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,855,856,981,1013],rep:[981,1068],repeat:[40,41,43,291,690,981,1009,1068,1134,1289],repeated_config_check:[907,1134],repeatedli:[1178,1185],repetit:[40,41,981,1050,1068],replac:[40,41,43,484,485,981,995,1053,1054,1190,1191],repo:[43,1246],repres:[43,840,841,957,963,968,1215,1224],represent:[40,41,42,43,831,836,837,838,840,842,907,934,935,957,963,969,970,981,1060,1070,1134],reptil:[1130,1133],reptile_step:1130,request:[1246,1247],requir:[43,840,850,905,906,957,961,981,984,988,1252,1253],resampl:[981,1035],reserv:43,reshap:[40,41,43,484,690,981],reshape_lik:[40,41],respect:[840,842,847,866,885,981,1010,1080,1082,1083,1084,1085,1087,1088,1089,1103,1108,1114,1122,1130,1131,1132,1133],respond:43,respons:1134,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,840,841,842,845,847,849,850,852,854,862,863,864,866,885,891,907,916,981,984,1010,1053,1054,1065,1103,1106,1111,1112,1113,1114,1122,1134,1197,1199,1200,1201,1202,1203,1204,1205,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1246],ret:1134,ret_dict:1134,ret_fn:[907,916,917,1134],retain:[1080,1084],retain_grad:[468,469,1080,1084],retreiv:1134,retrn:[981,1060],return_cont:[40,41],return_dict:[40,41],return_graph:[1234,1235,1236],return_inner_v:[1130,1131,1132,1133],return_sequ:[1263,1272],return_st:[1263,1272],rev:[981,1006],revers:[40,41,855,856,981,1006,1013,1073],review:43,right:[40,41,43],rk_e:1292,robot:1246,ronald:1246,root:[43,840,850],round:[291,434,690,840,850,981,984,1134],row:[981,1026,1190,1191],rule:[43,840,842,850,866,891,981,984,1114,1122],run:[43,907,916,1080,1082,1083,1087,1130,1131,1132,1133,1134,1246,1247,1263,1274,1275,1276],safe:[907,916,1134],safety_factor:[907,1134],same:[15,16,17,40,41,43,855,856,907,916,917,951,952,957,961,981,982,994,998,1014,1015,1018,1019,1045,1047,1052,1053,1054,1065,1079,1080,1086,1091,1103,1109,1114,1118,1130,1131,1132,1134,1197,1198,1215,1216,1217,1218,1219,1220,1221,1222,1246,1263,1264,1265,1266,1267,1268,1269,1270,1288,1292],same_arrai:[40,41],sampl:[981,1035,1096,1097,1190,1191,1193,1194,1215,1223,1246,1263,1271],satisfi:[981,988,1103,1105,1110],save:[40,41,981,1058,1069,1096,1098,1275,1276],save_debug_info:1240,save_dir:[432,433,907,922,1134],save_to_disk:[1234,1236,1240,1275,1276],save_weight:[1275,1276],scalar:[852,854,981,995,1045,1072,1076],scale:[907,949,950,1080,1088,1134,1215,1223,1226,1227,1232,1233,1263,1271,1274,1279,1282],scaled_dot_product_attent:1215,scatter:[981,1045,1053,1054],scatter_flat:[128,291,434,561,690,981],scatter_nd:[128,291,434,561,690,981],scene:[1080,1083,1085,1087,1088,1089],schemat:1246,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,840,842,907,938,981,989,1002,1010,1049,1057,1067,1080,1082,1083,1087,1130,1132,1134,1279,1280,1281],secondli:1292,sector:[840,841],see:[43,59,392,432,433,484,840,842,852,854,862,863,864,866,885,891,907,919,920,921,922,957,981,984,1036,1037,1080,1114,1122,1240,1244,1246,1254,1256,1257,1259,1260,1262],seed:[40,41,174,484,794,1190],seed_valu:[40,41,484,1190,1195],seem:1246,seen_set:[981,1024],select:[981,988,1062,1289,1292],self:[40,41,43,59,392,432,433,866,885,891,907,919,920,921,922,957,1080,1134,1240,1244,1246,1254,1256,1257,1259,1260,1262,1279,1283,1288,1292],self_i:[866,885],sent:1134,seper:[43,981,1016],seq:[40,41,42,1197,1198,1275,1276],sequenc:[15,16,17,40,41,42,43,484,905,906,907,916,917,926,927,928,929,930,931,932,933,936,937,951,957,961,981,984,988,990,992,998,999,1013,1026,1038,1041,1046,1050,1051,1054,1061,1065,1068,1073,1078,1080,1084,1096,1100,1101,1103,1106,1134,1178,1189,1190,1192,1194,1197,1199,1200,1201,1202,1203,1204,1205,1215,1216,1217,1218,1219,1220,1221,1222,1232,1233,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1272,1275,1276,1277,1278,1279,1283,1285,1286],sequenti:1246,seri:43,set:[15,18,19,40,41,907,936,937,949,950,951,981,983,1005,1026,1055,1056,1057,1058,1080,1083,1085,1086,1087,1088,1089,1103,1106,1134,1178,1179,1186,1188,1189,1190,1191,1195,1197,1199,1200,1201,1202,1203,1204,1205,1244,1246,1263,1272,1279,1280,1281,1282,1283,1284,1289,1292],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1244,set_debug_mod:44,set_default_devic:907,set_default_dtyp:957,set_default_float_dtyp:957,set_default_int_dtyp:957,set_default_nod:1134,set_exception_debug_mod:44,set_framework:[40,41,43,59,1134,1246,1288,1289,1292],set_ivy_backend:[40,41],set_min_bas:981,set_min_denomin:981,set_nest_at_index:1178,set_nest_at_indic:1178,set_param:1240,set_queue_timeout:981,set_split_factor:[907,1134],set_stat:[1279,1280,1281,1282,1283,1284],set_tmp_dir:981,set_with_grad:1080,setter:1134,sever:1292,sgd:[1246,1279],shape0:1134,shape:[40,41,43,388,389,390,391,434,447,462,484,690,832,833,834,835,855,856,907,919,957,961,981,982,992,994,998,999,1012,1013,1014,1015,1017,1019,1023,1026,1045,1046,1047,1050,1051,1052,1053,1054,1060,1062,1065,1078,1079,1096,1100,1103,1105,1108,1114,1118,1119,1134,1190,1192,1193,1194,1197,1198,1215,1217,1219,1221,1240,1244,1263,1265,1266,1267,1268,1269,1270,1277,1278],shape_slic:[40,41],shape_to_tupl:981,share:[40,41,1246,1289],shift:1134,should:[40,41,42,43,484,840,841,842,845,850,852,854,866,885,891,905,906,907,981,992,993,1000,1045,1051,1080,1083,1085,1087,1088,1089,1114,1122,1134,1197,1198,1246],show:[40,41,1240,1246,1292],show_debug_info:1240,show_graph:[1234,1246,1275,1276,1279,1283],show_mod_in_top_mod:[1275,1276],show_structur:[1275,1276],show_sub_contain:[40,41],show_v:[1275,1276],show_v_in_top_v:[1275,1276],shown:[40,41],shp:1134,shuffl:[40,41,174,484,794,1190],shuffle_h5_fil:[40,41],sigmoid:[810,1207,1246,1288],signatur:[43,59,392,432,433,434,468,473,477,481,482,484,907,919,920,921,922,957,1080,1240,1244,1254,1256,1257,1259,1260,1262],signific:1292,similar:[43,1215,1226,1263,1274],similarli:[1103,1108],simpl:[43,981,1011,1246,1289,1292],simpler:43,simplest:1289,simpli:[40,41,43,1246,1289,1292],simultan:1246,sin:[779,981,1016,1114,1128,1289],sinco:1289,sine:[840,841,1114,1117,1126,1127],singl:[40,41,905,906,907,916,917,936,937,938,939,981,1062,1072,1076,1096,1101,1134,1190,1193,1194,1197,1199,1200,1201,1202,1203,1204,1205,1246,1289,1292],singleton:[852,854,862,863,864],singular:[1103,1109],sinh:[779,1114],siren:[1246,1254],size:[40,41,42,434,461,907,930,931,932,933,949,950,951,981,984,992,1036,1037,1053,1061,1096,1100,1103,1106,1109,1134,1190,1191,1193,1194,1197,1199,1200,1201,1202,1203,1204,1205,1263,1264,1265],size_ordered_arrai:[40,41],skew:[1103,1110],skinv:1292,skip:[40,41],slice:[40,41,859,860,981,1018,1019,1134,1178,1185],slice_kei:[40,41],slice_obj:[40,41,1134],slice_via_kei:[40,41],slide:[1215,1216,1217,1218,1219,1220,1221,1222,1263,1264,1265,1266,1267,1268,1269,1270],slope:[1207,1209],small:[1228,1229,1230,1231,1232,1233,1246,1277,1278,1289],smaller:[981,995],smallest:[40,41,836,837,838,981,987,994],smallest_norm:[392,836,837],softmax:[190,495,810,1207,1215,1226,1227],softplu:[810,1207],solv:1292,some:[40,41,43,981,984,1080,1082,1083,1085,1087,1088,1089,1094,1215,1223,1246,1263,1271,1289,1292],some_backend:43,some_namespac:43,someth:[43,1292],something_cool:43,somewher:[40,41],sort:[40,41,42,860,1103,1109,1134],sort_by_kei:[40,41],sorting_funct:[859,860],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,388,389,390,391,392,394,395,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,482,483,484,485,832,833,834,835,836,837,838,840,841,842,843,844,845,846,847,848,849,850,852,853,854,855,856,859,860,862,863,864,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,909,910,911,912,913,914,916,917,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1244,1249,1250,1251,1252,1253,1254,1256,1257,1259,1260,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1290,1291,1292],space:[981,984,1016,1036,1037],spars:[1228,1231],sparse_cross_entropi:1228,spawn:[981,1043],special:[840,841],specif:[40,41,43,907,949,981,1000,1007,1008,1009,1043,1130,1131,1132,1133,1134,1190,1196,1246,1275,1276,1288,1289],specifc:[1190,1191],specifi:[40,41,43,832,833,852,853,854,855,856,862,863,864,907,926,927,928,929,930,931,932,933,936,937,941,943,947,950,951,952,957,961,963,981,984,986,987,988,995,998,999,1017,1018,1019,1025,1036,1037,1065,1075,1078,1103,1106,1134,1178,1183,1184,1188,1189,1197,1198,1199,1200,1201,1202,1203,1204,1205],split:[40,41,128,291,434,561,690,907,916,930,931,932,933,949,950,951,981,1038,1134],split_arg:1134,split_factor:[907,916,1134],split_func_cal:[907,1134],split_siz:1134,spread:[907,939,1134],sqrt:[86,215,397,518,646,840,852,854],squar:[840,850,981,1026,1103,1105],squeez:[128,291,434,561,690,981],stabil:[859,860,981,1063,1064],stabl:[859,860,981,1021,1022,1055,1056,1063,1064],stable_divid:981,stable_pow:981,stack:[40,41,291,690,981,1096,1101,1178,1179,1186,1263,1272],stack_imag:[164,346,473,604,764,1096],stacked_dim_s:1134,stage:43,standard:[40,41,836,837,1190,1193,1197,1203,1232,1233,1246,1247,1277,1278],start:[40,41,43,432,433,434,435,457,458,484,907,922,981,984,1036,1037,1134,1246,1289],starting_index:[40,41],starting_split_factor:[907,1134],state:[1134,1215,1225,1234,1235,1236,1240,1246,1249,1250,1251,1252,1253,1254,1256,1257,1259,1260,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288],statement:1289,static_argnam:[434,440,905,906],static_argnum:[434,440,905,906],std:[484,1190,1193],step:[40,41,434,435,907,981,984,1036,1037,1080,1082,1083,1085,1087,1088,1089,1130,1131,1132,1133,1134,1246,1279,1280,1281,1282,1283,1284,1288,1292],stephen:1246,stick:1246,still:[40,41,43],stochast:[1279,1284],stop:[40,41,432,433,434,435,457,458,907,922,951,981,984,1036,1037,1080,1083,1085,1087,1088,1089,1091,1130,1131,1132,1133,1134,1279,1280,1281,1282,1283,1284],stop_gradi:[40,41,341,468,599,758,907,951,1080,1083,1085,1087,1088,1089,1130,1131,1132,1133,1134,1279,1280,1281,1282,1283,1284],stopiter:1134,store:[40,41,981,1016,1061,1080,1094,1275,1276],store_var:[1275,1276],str:[15,16,17,40,41,42,43,388,389,390,391,392,394,395,836,837,838,905,906,907,916,917,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,951,957,962,963,968,969,970,971,972,973,980,981,988,1005,1007,1008,1009,1041,1043,1046,1053,1054,1103,1106,1108,1130,1131,1132,1133,1134,1178,1182,1197,1198,1252,1253,1263,1274,1275,1276],str_to_nod:1134,straight:1289,strength:[1246,1292],stride:[1215,1216,1217,1218,1219,1220,1221,1222,1263,1264,1265,1266,1267,1268,1269,1270],string:[40,41,43,907,923,925,934,935,940,946,952,953,956,957,961,967,969,970,971,980,981,984,988,1005,1026,1046,1047,1079,1134,1215,1216,1217,1218,1219,1220,1221,1222,1263,1264,1265,1266,1267,1268,1269,1270,1275,1276],structur:[40,41,42,43,981,1000],structural_diff:[40,41],sub:[40,41,907,930,931,936,937,938,939,981,1061,1130,1131,1132,1133,1134],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1134,sub_mod:[1275,1276],sub_modul:[1285,1286],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1246,1247,1277,1278,1285,1286],subsequ:43,subset:43,substr:[40,41],suffici:[1103,1108],suggest:1246,suitabl:[1096,1101],sum:[40,41,434,461,462,852,854,907,936,937,938,939,951,981,1004,1008,1053,1054,1134,1197,1198,1204],summat:[40,41,1197,1198],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,99,100,102,106,109,110,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,165,166,167,169,170,171,175,176,177,178,179,180,182,183,184,185,186,187,188,191,193,194,196,197,198,199,200,201,202,207,208,209,211,212,213,216,217,218,219,220,221,224,225,227,231,234,235,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,342,343,344,345,347,348,349,351,352,353,354,355,357,358,361,362,363,364,366,367,368,369,370,371,372,373,376,378,379,380,381,382,383,384,389,390,391,393,394,395,398,399,400,401,402,403,404,405,406,407,410,411,413,417,420,421,433,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,469,470,471,472,474,475,476,478,479,480,483,485,487,488,489,490,491,492,493,496,497,499,500,501,502,503,504,505,510,511,512,514,515,516,519,520,521,522,523,524,525,526,527,528,531,532,534,538,541,542,550,555,556,557,558,559,560,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,600,601,602,603,605,606,607,609,610,611,612,616,617,618,619,621,622,623,624,625,626,627,631,632,633,638,639,640,642,643,644,647,648,649,650,651,652,653,654,655,656,659,660,662,666,669,670,678,683,684,685,686,687,688,689,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,759,760,761,762,763,765,766,767,769,770,771,772,773,774,775,777,778,780,781,782,783,784,785,786,787,788,789,790,791,792,793,795,796,797,798,799,800,802,803,804,805,806,807,808,811,812,813,814,815,816,817,819,820,822,823,824,825,826,827,828,833,834,835,837,838,841,842,843,844,845,846,847,848,849,850,852,853,854,856,860,863,864,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,906,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1112,1113,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1131,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1233,1235,1236,1238,1239,1241,1245,1246,1250,1251,1253,1255,1256,1257,1258,1259,1260,1261,1262,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289,1291,1292],supports_inplac:981,suppos:1292,sure:43,svd:[350,608,768,1103],swap:[40,41,981,1067],swapax:[40,41,561,690,981,1292],symmetr:[1103,1110],syntax:[432,434,468,473,477,481,482,484],tab:1246,take:[43,981,1035],taken:[1197,1199,1200,1201,1203,1205],tan:[779,1114,1118],tangent:[1114,1118,1119,1120,1128,1129,1207,1214],tanh:[779,810,1114,1207],target:[40,41,907,923,926,927,928,929,930,931,932,933,936,937,938,939,952,1134,1246],target_dict:[40,41],task:[43,1130,1131,1132,1133],team:[43,1292],templat:1246,temporari:[981,1058,1069],tensor:[40,41,43,434,461,462,859,860,907,925,957,967,981,984,986,987,992,1036,1037,1040,1042,1045,1046,1047,1051,1053,1054,1061,1079,1134,1190,1191,1192,1215,1223,1225,1246,1263,1271,1273,1279,1280,1281,1282,1283,1284,1288,1289],tensorflow:[43,1103,1108,1215,1217,1219,1221,1246,1263,1265,1267,1269,1289,1292],term:[40,41,1215,1225,1246,1263,1273],termcolor:[40,41,42],termin:[40,41,42,1134],test:[43,840,845,862,863,864,957,972,973],test_array_api:43,tf_concat:1246,than:[40,41,836,837,852,854,855,856,907,951,981,984,994,995,1014,1033,1040,1062,1065,1080,1086,1134,1190,1194,1246,1289],thei:[40,41,43,1114,1119,1130,1131,1132,1190,1191,1246,1285,1286,1289],them:[1246,1292],themselv:[1178,1179],therefor:43,thi:[40,41,42,43,907,929,933,939,946,951,956,981,984,1016,1049,1051,1057,1080,1083,1085,1086,1087,1088,1089,1094,1103,1106,1134,1178,1182,1187,1197,1199,1200,1201,1202,1203,1204,1205,1215,1224,1246,1275,1276,1279,1280,1281,1282,1283,1284,1288,1289,1292],thing:[43,1246],those:[40,41,981,995,1080,1094,1103,1109,1134],though:43,threshold:[981,1040,1042],through:[40,41],tickbox:43,tile:[291,561,690,981],time:[981,1068,1080,1083,1087,1130,1131,1132,1133,1134,1190,1191,1215,1225,1263,1274,1275,1276,1292],time_chronolog:[1234,1235,1240],time_infer:[1234,1235],timeout:[40,41,42,907,916,917,981,1049,1057,1134],timestep:[1215,1225,1263,1272],timing_fnam:[1234,1235],titl:1246,tmp_dir:981,tmp_dr:[981,1058],to_appli:[40,41],to_clon:[907,1134],to_dev:[40,41,121,285,432,554,682,907],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[907,1134],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1246],to_ivy_modul:[192,818,1246,1252],to_json:[40,41],to_kv_fn:[1215,1226],to_kv_v:[1215,1226],to_list:[40,41,434,690,981],to_multi_dev:[40,41],to_mut:[1178,1180,1187],to_n:[15,40,41,1246],to_nod:1134,to_numpi:[40,41,434,690,981,1246,1288],to_out_fn:[1215,1226],to_out_v:[1215,1226],to_q_fn:[1215,1226],to_q_v:[1215,1226],to_raw:[40,41],to_scalar:[434,690,981],todo:[43,1134],togeth:[40,41,1285,1286],tool:[1246,1289],top_mod:[1275,1276],topic:1292,torch:[43,905,906,1246,1288,1289,1292],torch_concat:1246,torchfcmodel:1288,total:[40,41,42,907,953,1134],total_mem_on_dev:907,total_mem_on_nod:1134,tpu:[907,954,1134],tpu_is_avail:[432,554,682,907,1134],tpye:[957,968],trace:[40,41,981,1033],track:[43,907,1134,1178,1187,1275,1276],track_submod_call_ord:[1275,1276],track_submod_ret:[1275,1276],trail:[1277,1278],train:[1080,1082,1083,1087,1246,1247],trainabl:[1080,1086,1246,1247,1252,1253,1275,1276,1285],trainer:1246,tran:1292,transform:[1215,1223,1224],transpos:[40,41,128,291,434,690,907,938,981,1134,1215,1217,1219,1221,1263,1265,1267,1269],travers:[15,18,19,40,41,1178,1187],treat:[40,41,905,906],tree_depth:1244,tree_height:1240,tri:[40,41],trigonometr:[840,843,1114,1115,1118,1126],trim_kei:[40,41],trust:[1080,1087,1279,1281],truth:[840,847,849,866,885,981,1010,1111,1112,1113],try_else_non:981,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[907,1134],tune_dev_alloc:907,tune_dev_split:907,tune_node_alloc:1134,tune_node_split:1134,tune_step:[907,1134],tupl:[15,16,17,18,19,40,41,43,388,389,390,391,832,833,834,835,852,854,855,856,862,863,864,905,906,981,999,1016,1017,1060,1078,1134,1178,1179,1180,1181,1183,1184,1185,1186,1187,1188,1189,1190,1192,1197,1199,1200,1201,1202,1203,1204,1205],tutori:43,two:[40,41,981,984,989,1002,1039,1067,1103,1106,1109],type:[15,18,40,41,42,43,59,394,395,432,433,832,833,834,835,837,838,840,841,842,845,847,850,852,854,855,856,862,863,864,866,885,891,907,919,920,921,922,934,935,939,951,957,961,962,963,967,968,969,970,971,972,973,980,981,982,984,988,994,998,1000,1010,1014,1015,1017,1026,1033,1045,1046,1047,1052,1066,1076,1079,1080,1086,1091,1114,1122,1134,1240,1244,1246,1254,1256,1257,1259,1260,1262,1275,1276,1289],types_to_iteratively_nest:[40,41,42],uint8:[1096,1098,1102],uint8_img_to_float_img:1096,unchang:[15,16,17,18,19],uncom:43,underli:[840,842],underwai:43,unif:1134,unifi:[40,41,907,936,937,938,939,951,1134,1246],uniform:[40,41,1190,1191,1193,1194,1254,1256,1257,1260,1261],uniformli:[1190,1192,1194],unify_arrai:1134,unify_it:1134,unify_nest:1134,uniniti:[832,833],union:[15,18,19,40,41,43,388,389,390,391,392,394,395,832,833,834,835,836,837,838,840,841,842,843,844,845,846,847,848,849,850,852,854,855,856,859,860,862,863,864,866,885,891,905,906,907,925,930,931,932,933,951,952,957,961,962,963,967,968,969,970,971,972,973,980,981,982,983,984,986,987,988,989,990,992,994,995,996,997,998,999,1001,1002,1003,1004,1007,1008,1009,1010,1012,1013,1014,1015,1016,1017,1018,1019,1023,1025,1026,1027,1034,1035,1036,1037,1039,1040,1041,1042,1045,1046,1047,1050,1051,1052,1053,1054,1059,1060,1061,1062,1065,1067,1068,1070,1071,1072,1073,1075,1076,1077,1078,1079,1134,1178,1179,1180,1186,1187],uniqu:[907,916,917,1130,1131,1132,1133,1134,1178,1182],unique_kwarg:1134,unit:[43,907,1114,1115,1117,1134,1207,1208,1209,1210],unitari:[1103,1109],unless:[981,1045,1047,1079],unlik:[907,1134],unnorm:[1190,1191],unpack:[981,1075],unrol:[1215,1225],unset:1289,unset_debug_mod:44,unset_default_devic:907,unset_default_dtyp:957,unset_default_float_dtyp:957,unset_default_int_dtyp:957,unset_framework:[59,1289],unset_with_grad:1080,unstack:[40,41,128,291,434,561,690,981],until:43,unus:[905,906],updat:[40,41,434,461,462,907,916,981,1031,1053,1054,1080,1082,1083,1085,1087,1088,1089,1130,1131,1132,1134,1178,1183,1184,1188,1189,1215,1225,1246,1247,1252,1253,1279,1280,1281,1282,1283,1284,1289,1292],update_backend:[40,41],update_config:[40,41],update_inference_tim:1240,upper:[40,41,1190,1194],upper_depth:[1275,1276],upstream:43,usabl:[1246,1292],usag:[907,951,1134],use:[40,41,42,43,484,907,916,917,942,954,981,1050,1063,1064,1103,1108,1134,1215,1226,1232,1233,1246,1277,1278,1289,1292],used:[40,41,43,484,907,916,946,949,950,956,957,968,981,1021,1022,1038,1047,1053,1054,1055,1056,1079,1080,1087,1088,1103,1106,1130,1131,1132,1133,1134,1178,1187,1263,1274,1279,1281,1282,1288,1289],used_dev:[907,916],used_mem_on_dev:907,used_mem_on_nod:1134,used_node_str:1134,used_node_strs_dict:1134,useful:[40,41,907,951,1134,1215,1224,1246,1289],user:[1246,1263,1274,1275,1276,1289,1292],uses:1246,using:[40,41,1080,1082,1083,1178,1181,1185,1197,1198,1215,1223,1227,1246,1263,1271,1288,1289,1292],util:[907,940,1134],utility_funct:[862,863,864],v_with_top_v_key_chain:[1275,1276],val:[40,41,434,452,453,454,866,901,981,1029,1030,1031,1055,1056,1244],valid:[862,863,864,957,962,981,1063,1064,1215,1216,1217,1218,1219,1220,1221,1222,1263,1264,1265,1266,1267,1268,1269,1270],valid_dtyp:957,valu:[40,41,434,840,846,847,849,852,854,859,860,866,885,907,919,950,951,981,982,984,986,987,995,996,997,999,1000,1006,1010,1016,1017,1018,1019,1034,1036,1037,1040,1042,1049,1050,1051,1052,1053,1054,1055,1056,1057,1073,1076,1077,1078,1080,1084,1087,1096,1102,1103,1109,1111,1112,1113,1114,1123,1124,1125,1130,1131,1132,1134,1178,1182,1183,1184,1188,1189,1190,1193,1194,1197,1199,1201,1215,1226,1227,1232,1233,1240,1263,1274,1277,1278,1279,1281],value_is_nan:981,vanilla:[1130,1132],var_shap:1254,variabl:[15,16,17,18,19,40,41,341,468,599,758,981,991,1029,1030,1031,1032,1033,1066,1080,1083,1084,1085,1086,1087,1088,1089,1091,1094,1130,1131,1132,1133,1215,1226,1232,1233,1252,1253,1254,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286],variable_data:[468,758,1080],varianc:[40,41,1197,1205,1292],varieti:1289,variou:[43,1246],vector:[40,41,477,480,852,854,981,997,1002,1103,1109,1110,1215,1224,1263,1273],vector_norm:[40,41,98,223,409,530,658,852],vector_to_skew_symmetric_matrix:[168,350,477,608,768,1103],verbos:1291,veri:[43,1246],verifi:43,version:43,via:[1178,1179,1186,1289],view:[1096,1101],vision:1246,visual:1289,volum:[1215,1220],vw_tm1:[1080,1083,1087],wai:[1289,1292],wait:[40,41,42],want:[1246,1289,1292],warn:[59,66,67,68,69,70],warp:[473,474,1096,1097],watch:1288,weight:[1080,1082,1083,1085,1087,1088,1089,1215,1224,1225,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1275,1276,1279,1281,1282],weight_initi:[1263,1264,1265,1266,1267,1268,1269,1270,1272,1273],weights_path:[1275,1276],well:[40,41,981,1025],were:[40,41,1134],what:[43,1246],when:[40,41,42,43,907,981,993,1064,1077,1103,1109,1134,1246,1275,1276,1289,1292],where:[40,41,43,291,434,690,840,846,862,863,864,866,891,981,984,992,995,999,1012,1027,1034,1045,1078,1103,1109,1178,1179,1186,1190,1191],wherea:43,wherebi:[1178,1187],whether:[15,18,19,40,41,42,862,863,864,905,906,907,925,938,942,946,951,954,956,957,967,971,972,973,980,981,983,989,990,1003,1006,1011,1016,1023,1025,1028,1032,1033,1038,1059,1066,1075,1076,1080,1083,1084,1085,1086,1087,1088,1089,1091,1130,1131,1132,1133,1134,1178,1179,1180,1182,1186,1187,1190,1191,1207,1208,1215,1223,1246,1252,1253,1263,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284],which:[40,41,42,43,484,832,833,834,835,836,837,838,852,853,854,855,856,862,863,864,905,906,907,916,917,925,930,931,932,933,936,937,938,939,941,943,947,949,950,951,957,962,967,971,980,981,984,988,998,1000,1002,1003,1004,1006,1013,1017,1018,1019,1020,1026,1027,1035,1036,1037,1044,1045,1046,1047,1048,1050,1053,1054,1061,1065,1075,1077,1079,1080,1083,1084,1085,1087,1088,1089,1091,1093,1094,1096,1098,1103,1106,1114,1119,1134,1178,1182,1183,1184,1188,1189,1190,1191,1192,1193,1194,1197,1199,1200,1201,1202,1203,1204,1205,1207,1212,1215,1226,1227,1246,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1285,1286,1288,1289],whitespac:[40,41,42],whose:[43,840,841,855,856,866,891,981,988,993,1197,1198,1199,1200,1201,1203,1205],why:[1246,1247],width:[1096,1101],wiki:1292,wikipedia:1292,window:[1096,1101,1215,1216,1217,1218,1219,1220,1221,1222,1263,1264,1265,1266,1267,1268,1269,1270],wise:[40,41,43,840,842,843,847,849,866,885,891,981,994,995,1010,1014,1015,1040,1042,1052,1080,1083,1085,1087,1089,1111,1112,1113,1114,1115,1117,1118,1119,1122,1123,1124,1125,1126,1128,1207,1208,1209,1210,1211,1212,1213,1214],wish:1289,with_arg_label:[1234,1236,1240,1275,1276],with_array_cach:[1234,1235,1236,1240],with_bia:[1263,1273],with_cal:[981,1006],with_default_key_color:[40,41],with_edge_label:[1234,1236,1240,1275,1276],with_entries_as_list:[40,41],with_grad:[1080,1090,1275,1276],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1134,with_output_label:[1234,1236,1240,1275,1276],with_partial_v:[1275,1276],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,434,463,981,1061,1134],with_to_kv_fn:[1263,1274],with_to_out_fn:[1263,1274],with_to_q_fn:[1263,1274],within:[15,18,19,981,984,1103,1109,1190,1194],without:[40,41,43,981,1049,1051,1057,1178,1180,1289],wonder:1246,word:[15,16,17,981,984,1190,1194,1252,1253],work:[43,1288],worker:[907,916,917,1134],worker_class:[907,916,917,1134],worker_kwarg:1134,would:[43,859,860,1207,1212,1246,1289,1292],wrap:[15,40,41,42,43,432,434,468,473,477,481,482,484,981,993,1080,1094,1246],wrapper:43,write:[40,41,43,1246,1247,1292],written:[43,1246,1292],ws_new:[1080,1083,1085,1087,1088,1089],x1_i:[840,842,847,981,1010,1114,1122],x2_i:[840,842,847,981,1010,1114,1122],x_feat_dim:[1215,1226],x_i:[840,841,845,850],x_in:[1246,1288],x_inv:[1103,1105],x_max:[434,981,995],x_min:[434,981,995],x_sub:1134,xkk:1292,xkkm1:1292,xkm1km1:1292,xs0:1134,xs_t:1134,year:[1246,1292],yet:[1178,1187,1292],yield:[981,1077],you:[43,1246,1288,1289,1292],your:[1246,1247,1288,1289,1292],your_awesome_project:1289,yourself:[43,1246],yourslef:43,youtub:43,zero:[40,41,77,206,388,509,637,832,833,852,854,862,863,864,981,999,1045,1047,1053,1054,1078,1079,1080,1082,1083,1087,1088,1215,1223,1246,1254,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273,1279,1280,1281,1282],zero_pad:[291,434,561,690,981],zeros_lik:[128,291,434,561,690,981],zip:1134,zk_e:1292},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1006,"function":[77,81,86,97,101,103,104,105,107,108,206,210,215,222,226,228,229,230,232,233,388,392,397,408,412,414,415,416,418,419,509,513,518,529,533,535,536,537,539,540,637,641,646,657,661,663,664,665,667,668,832,836,840,851,855,857,858,859,861,862],Ones:1259,Using:1289,abs:[292,562,691,982],aco:[780,1115],acosh:[781,1116],activ:[190,375,495,629,810,1207,1249],adam:1280,adam_step:1082,adam_upd:1083,algebra:[98,168,223,350,409,477,530,608,658,768,852],all:[109,234,420,541,669,863],all_equ:983,all_nested_indic:1179,ani:[110,235,421,542,670,864],api:[0,43,75,112,204,237,386,423,507,544,635,672,830],arang:[129,293,435,563,692,984],arg_nam:985,argmax:[130,436,564,693,986],argmin:[131,437,565,694,987],args_to_ivi:16,args_to_n:17,argsort:[106,231,417,538,666,860],arithmet:[1,113,238,424,545,673],arrai:[0,3,43,75,111,112,114,132,204,236,237,239,246,294,386,422,423,425,438,507,543,544,546,566,635,671,672,674,695,830,866,988],array_equ:[295,696,989],arrays_equ:990,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[782,1117],asinh:[87,398,519,647,841],assert_supports_inplac:991,atan2:[784,1119],atan:[783,1118],atanh:[785,1120],attribut:[5,115,240,426,547,675],backend:[43,73],bilinear_resampl:[165,347,474,605,765,1097],binary_cross_entropi:1229,bitwis:[7,116,241,427,548,676],bitwise_and:[88,216,399,520,648,842],broadcast_to:[296,697,992],builder:51,builtin:[111,236,246,422,543,671,866],builtin_ab:[247,867],builtin_add:[248,868],builtin_and:[249,869],builtin_bool:[250,870],builtin_contain:[251,871],builtin_deepcopi:[252,872],builtin_dir:[253,873],builtin_eq:[254,874],builtin_float:[255,875],builtin_floordiv:[256,876],builtin_g:[257,877],builtin_getattr:[258,878],builtin_getattribut:[259,879],builtin_getitem:[260,880],builtin_gt:[261,881],builtin_int:[262,882],builtin_invert:[263,883],builtin_l:[264,884],builtin_lt:[265,550,678,885],builtin_mul:[266,886],builtin_n:[267,887],builtin_neg:[268,888],builtin_or:[269,889],builtin_po:[270,890],builtin_pow:[271,891],builtin_radd:[272,892],builtin_rand:[273,893],builtin_rfloordiv:[274,894],builtin_rmul:[275,895],builtin_ror:[276,896],builtin_rpow:[277,897],builtin_rsub:[278,898],builtin_rtruediv:[279,899],builtin_rxor:[280,900],builtin_setitem:[281,901],builtin_sub:[282,902],builtin_truediv:[283,903],builtin_xor:[284,904],cache_fn:993,cast:[133,297,439,567,698,961],ceil:[298,699,994],choleski:[769,1104],choose_random_framework:61,citat:1246,clear_framework_stack:62,clear_mem_on_dev:[684,923],clip:[299,700,995],clip_matrix_norm:996,clip_vector_norm:997,clone:1149,clone_arrai:1150,clone_it:1151,clone_nest:1152,clonedit:1136,cloneditem:1135,clonednest:1137,closest_valid_dtyp:962,code:1292,comparison:[9,117,242,428,549,677],compil:[300,440,701,905,906,1234],compile_graph:1235,concaten:[134,301,441,568,702,998],constant:[76,205,387,508,636,831],constant_pad:[302,569,703,999],contain:[40,41],container_typ:[704,1000],content:1246,contribut:43,conv1d:[196,378,499,822,1216,1264],conv1d_transpos:[197,379,500,823,1217],conv1dtranspos:1265,conv2d:[198,380,501,631,824,1218,1266],conv2d_transpos:[199,381,502,825,1219],conv2dtranspos:1267,conv3d:[200,382,503,632,826,1220,1268],conv3d_transpos:[201,383,504,827,1221],conv3dtranspos:1269,convers:15,convert:[192,818,1252],convert_dtyp:963,copy_arrai:[705,1001],copy_nest:1180,core:[120,245,431,553,681,865],cos:[89,400,521,649,843],cosh:[90,401,522,650,786,844,1121],cprint:1291,creat:43,creation:[77,206,388,509,637,832],cross:[303,706,1002],cross_entropi:1230,cumprod:[135,304,442,707,1003],cumsum:[708,1004],current_framework:63,current_framework_str:[709,1005],data:[81,85,210,214,392,396,513,517,641,645,836,839],debug_mod:45,debugg:44,default_devic:924,default_dtyp:964,default_float_dtyp:965,default_int_dtyp:966,default_nod:1153,depthwise_conv2d:[202,384,505,633,828,1222],depthwiseconv2d:1270,design:43,dev:[123,287,556,685,925],dev_clon:926,dev_clone_arrai:927,dev_clone_it:928,dev_clone_nest:929,dev_dist:930,dev_dist_arrai:931,dev_dist_it:932,dev_dist_nest:933,dev_from_str:[124,288,557,686,934],dev_to_str:[125,289,558,687,935],dev_unifi:936,dev_unify_arrai:937,dev_unify_it:938,dev_unify_nest:939,dev_util:940,devclonedit:910,devcloneditem:909,devclonednest:911,devdistit:913,devdistitem:912,devdistnest:914,devic:[20,121,285,432,554,682,907],devmapp:916,devmappermultiproc:917,diagon:[99,224,410,531,659,853],distribute_nest:1154,divid:1122,document:1246,dropout:[1223,1271],dtype:[136,305,443,570,710,957,967],dtype_bit:[137,306,444,571,711,968],dtype_from_str:[138,307,445,572,712,969],dtype_to_str:[139,308,446,573,713,970],ecosystem:52,einops_rearrang:1007,einops_reduc:1008,einops_repeat:1009,einsum:[182,366,487,621,802,1198],elementwis:[86,215,397,518,646,840],empti:[78,207,389,510,638,833],equal:[574,714,1010],erf:[483,787,1123],execute_with_gradi:[162,342,469,600,759,1084],exist:1011,exp:[788,1124],expand_dim:[309,715,1012],finfo:[83,212,394,515,643,837],firstlayersiren:1256,flip:[102,227,413,534,662,856,1013],float_img_to_uint8_img:1098,floor:[310,716,1014],floormod:[311,717,1015],fomaml_step:1131,fork:43,fourier_encod:1016,framework:59,full:[140,312,447,575,718,1017],func:72,gather:[141,313,448,576,719,1018],gather_nd:[142,314,449,577,720,1019],geglu:1250,gelu:[376,496,811,1208,1251],gener:[22,128,291,434,561,690,981],get_all_arrays_in_memori:1020,get_all_arrays_on_dev:941,get_framework:64,get_min_bas:1021,get_min_denomin:1022,get_num_dim:[721,1023],get_referrers_recurs:1024,global:1237,glorotuniform:1257,gpu_is_avail:[942,1155],gradient:[24,161,341,468,599,758,1080],gradient_descent_upd:1085,gradient_imag:[166,348,475,606,766,1099],graph:1240,gym:53,handler:59,has_nan:1025,helper:1242,ident:[143,315,450,578,722,1026],iinfo:[84,213,395,516,644,838],imag:[26,164,346,473,604,764,1096],index_nest:1181,indices_wher:[144,316,451,723,1027],initi:1254,inplac:[11,118,243,429,551,679],inplace_arrays_support:1028,inplace_decr:[145,317,452,579,724,1029],inplace_incr:[146,318,453,580,725,1030],inplace_upd:[147,319,454,581,726,1031],inplace_variables_support:1032,inv:[770,1105],invalid_dtyp:971,is_arrai:[148,320,455,582,727,1033],is_float_dtyp:972,is_int_dtyp:973,is_vari:[163,343,470,601,760,1086],isfinit:[91,217,402,523,651,845],isinf:[321,583,728,1034],isnan:[92,218,403,524,652,846],ivi:[43,50,51,52,53,54,55,56,57,58,829,1288,1289,1292],ivymodul:[193,819],jax:74,keep:43,lamb:1281,lamb_upd:1087,lar:1282,lars_upd:1088,layer:[195,377,498,630,821,1215,1263],layer_norm:1233,layernorm:1278,leaky_relu:[812,1209],less:[93,219,404,525,653,847],linalg:[28,1103],linear:[98,168,223,350,409,477,530,608,658,768,852,1224,1273],linear_resampl:[149,322,456,584,729,1035],linspac:[150,323,457,585,730,1036],log2:[94,405,526,654,848],log:[789,1125,1243],log_global_inference_abs_tim:1238,log_global_inference_rel_tim:1239,logic:[30,172,356,481,613,776,1111],logical_and:[357,777,1112],logical_not:[95,220,406,527,655,849],logical_or:[358,778,1113],logspac:[151,324,458,586,731,1037],loss:1228,lstm:1272,lstm_updat:1225,maml_step:1132,manipul:[101,226,412,533,661,855],map:1182,map_nest_at_index:1183,map_nest_at_indic:1184,match_kwarg:1038,math:[32,173,359,482,614,779,1114],matmul:[325,587,732,1039],matrix_norm:[169,351,478,609,771,1106],maximum:[733,1040],mech:54,memori:55,meshgrid:[326,734,1041],meta:[34,1130],method:[97,222,408,529,657,851],minimum:[735,1042],model:56,modul:[1275,1276,1288],multi:1134,multi_head_attent:1226,multi_index_nest:1185,multidevcontain:42,multidevit:920,multidevitem:919,multidevnest:921,multiheadattent:1274,multinodeit:1140,multinodeitem:1139,multinodenest:1141,multinomi:[175,361,485,616,795,1191],multiprocess:[736,1043],mxnet:203,nativ:1288,nest:1178,nested_indices_wher:1186,nested_map:1187,network:1288,next:1246,node:[1134,1156],node_dist:1157,node_dist_arrai:1158,node_dist_it:1159,node_str:1160,node_to_str:1161,node_util:1162,nodedistit:1143,nodedistitem:1142,nodedistnest:1144,nodemapp:1146,nodemappermultiproc:1147,norm:[1232,1277],num_arrays_in_memori:1044,num_arrays_on_dev:943,num_cpu_cor:944,num_gpu:[126,945,1163],numpi:385,nutshel:1246,one_hot:[152,459,588,737,1045],ones:[79,208,390,511,639,834,1046],ones_lik:[153,327,460,589,738,1047],oper:[1,3,7,9,11,13,43,113,114,116,117,118,119,238,239,241,242,243,244,424,425,427,428,429,430,545,546,548,549,551,552,673,674,676,677,679,680],optim:[1279,1283],optimizer_upd:1089,overview:1246,param:1244,percent_used_mem_on_dev:946,percent_used_mem_on_nod:1164,pinv:[352,772,1107],portabl:1292,print_all_arrays_in_memori:1048,print_all_arrays_on_dev:947,profil:[122,286,433,555,683,922,1148],pull:43,queue_timeout:1049,randint:[176,362,617,796,1192],random:[36,174,360,484,615,794,1190],random_crop:1100,random_norm:[177,363,618,797,1193],random_uniform:[178,364,619,798,1194],reduce_max:[183,367,488,622,803,1199],reduce_mean:[184,368,489,623,804,1200],reduce_min:[185,369,490,624,805,1201],reduce_prod:[186,370,491,625,806,1202],reduce_std:[371,1203],reduce_sum:[187,372,492,626,807,1204],reduce_var:[188,373,493,627,808,1205],reduct:[38,181,365,486,620,801,1197],reflect:[13,119,244,430,552,680],relu:[813,1210],repeat:[328,739,1050],reptile_step:1133,request:43,reshap:[740,1051],robot:57,round:[329,741,1052],run:1289,scaled_dot_product_attent:1227,scatter_flat:[154,330,461,590,742,1053],scatter_nd:[155,331,462,591,743,1054],search:[103,228,414,535,663,857],seed:[179,799,1195],sequenti:[1285,1286],set:[104,229,415,536,664,858],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:948,set_default_dtyp:974,set_default_float_dtyp:975,set_default_int_dtyp:976,set_default_nod:1165,set_exception_debug_mod:48,set_framework:65,set_min_bas:1055,set_min_denomin:1056,set_nest_at_index:1188,set_nest_at_indic:1189,set_queue_timeout:1057,set_split_factor:[949,1166],set_tmp_dir:1058,set_with_grad:1090,sgd:1284,shape:[744,1059],shape_to_tupl:1060,show_graph:1236,shuffl:[180,800,1196],sigmoid:[814,1211],signatur:[97,222,408,529,657,851],sin:[790,1126],sinh:[791,1127],siren:1260,softmax:[191,497,815,1212],softplu:[816,1213],sort:[105,230,416,537,665,859],sparse_cross_entropi:1231,split:[156,332,463,592,745,1061],split_factor:[950,1167],split_func_cal:[951,1168],sqrt:[96,221,407,528,656,850],squeez:[157,333,464,593,746,1062],stable_divid:1063,stable_pow:1064,stack:[334,747,1065],stack_imag:[167,349,476,607,767,1101],standard:43,statist:[107,232,418,539,667,861],stop_gradi:[344,471,602,761,1091],str_to_nod:1169,submodul:43,supports_inplac:1066,svd:[354,611,774,1109],swapax:[594,748,1067],tan:[792,1128],tanh:[793,817,1129,1214],tensorflow:506,tile:[335,595,749,1068],tmp_dir:1069,to_dev:[127,290,559,688,952],to_ivi:18,to_ivy_modul:[194,820,1253],to_list:[750,1070],to_n:19,to_nod:1170,to_numpi:[751,1071],to_scalar:[752,1072],torch:634,total_mem_on_dev:953,total_mem_on_nod:1171,tpu_is_avail:[560,689,954,1172],train:1288,trainabl:1288,transpos:[158,336,465,753,1073],tree:1246,try_else_non:1074,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[81,85,210,214,392,396,513,517,641,645,836,839],uint8_img_to_float_img:1102,unifi:1173,unify_arrai:1174,unify_it:1175,unify_nest:1176,unset_debug_mod:49,unset_default_devic:955,unset_default_dtyp:977,unset_default_float_dtyp:978,unset_default_int_dtyp:979,unset_framework:71,unset_with_grad:1092,unstack:[159,337,466,596,754,1075],updat:43,used_mem_on_dev:956,used_mem_on_nod:1177,util:[108,233,419,540,668,862],valid_dtyp:980,value_is_nan:1076,variabl:[345,472,603,762,1093],variable_data:[763,1094],vector_norm:[100,225,411,532,660,854],vector_to_skew_symmetric_matrix:[171,355,480,612,775,1110],verbos:1290,vision:58,where:[338,755,1077,1246],why:1292,with_grad:1095,wrapper:72,write:1289,your:43,zero:[80,209,391,512,640,835,1262],zero_pad:[339,597,756,1078],zeros_lik:[160,340,467,598,757,1079]}})