Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[838,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[389,0,0,"-"],creation_functions:[390,0,0,"-"],data_type_functions:[394,0,0,"-"],data_types:[398,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[391,2,1,""],ones:[392,2,1,""],zeros:[393,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[394,1,1,""],finfo:[396,2,1,""],iinfo:[397,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[394,3,1,""],bits:[394,3,1,""],eps:[394,3,1,""],max:[394,3,1,""],min:[394,3,1,""],smallest_normal:[394,3,1,""]},"ivy.functional.backends.numpy.core":{device:[436,0,0,"-"],general:[438,0,0,"-"],gradients:[472,0,0,"-"],image:[477,0,0,"-"],linear_algebra:[481,0,0,"-"],logic:[485,0,0,"-"],math:[486,0,0,"-"],random:[488,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[437,1,1,""],clear_mem_on_dev:[436,2,1,""],dev:[436,2,1,""],dev_from_str:[436,2,1,""],dev_to_str:[436,2,1,""],gpu_is_available:[436,2,1,""],num_gpus:[436,2,1,""],to_dev:[436,2,1,""],tpu_is_available:[436,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[437,3,1,""],start:[437,3,1,""],stop:[437,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[438,2,1,""],arange:[439,2,1,""],argmax:[440,2,1,""],argmin:[441,2,1,""],array:[442,2,1,""],asarray:[438,2,1,""],astype:[438,2,1,""],cast:[443,2,1,""],clip:[438,2,1,""],compile:[444,2,1,""],concatenate:[445,2,1,""],constant_pad:[438,2,1,""],container_types:[438,2,1,""],copy_array:[438,2,1,""],cumprod:[446,2,1,""],current_framework_str:[438,2,1,""],dtype:[447,2,1,""],dtype_bits:[448,2,1,""],dtype_from_str:[449,2,1,""],dtype_to_str:[450,2,1,""],equal:[438,2,1,""],floor:[438,2,1,""],floormod:[438,2,1,""],full:[451,2,1,""],gather:[452,2,1,""],gather_nd:[453,2,1,""],get_num_dims:[438,2,1,""],identity:[454,2,1,""],indices_where:[455,2,1,""],inplace_arrays_supported:[438,2,1,""],inplace_decrement:[456,2,1,""],inplace_increment:[457,2,1,""],inplace_update:[458,2,1,""],inplace_variables_supported:[438,2,1,""],is_array:[459,2,1,""],linear_resample:[460,2,1,""],linspace:[461,2,1,""],logspace:[462,2,1,""],matmul:[438,2,1,""],meshgrid:[438,2,1,""],multiprocessing:[438,2,1,""],one_hot:[463,2,1,""],ones_like:[464,2,1,""],round:[438,2,1,""],scatter_flat:[465,2,1,""],scatter_nd:[466,2,1,""],shape:[438,2,1,""],split:[467,2,1,""],squeeze:[468,2,1,""],to_list:[438,2,1,""],to_numpy:[438,2,1,""],to_scalar:[438,2,1,""],transpose:[469,2,1,""],unstack:[470,2,1,""],where:[438,2,1,""],zero_pad:[438,2,1,""],zeros_like:[471,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[473,2,1,""],is_variable:[474,2,1,""],stop_gradient:[475,2,1,""],variable:[476,2,1,""],variable_data:[472,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[478,2,1,""],gradient_image:[479,2,1,""],stack_images:[480,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[482,2,1,""],qr:[483,2,1,""],vector_to_skew_symmetric_matrix:[484,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[487,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[489,2,1,""],randint:[488,2,1,""],random_normal:[488,2,1,""],random_uniform:[488,2,1,""],seed:[488,2,1,""],shuffle:[488,2,1,""]},"ivy.functional.ivy":{array_api:[839,0,0,"-"],core:[876,0,0,"-"],nn:[1215,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[840,0,0,"-"],creation_functions:[841,0,0,"-"],data_type_functions:[845,0,0,"-"],data_types:[848,0,0,"-"],elementwise_functions:[849,0,0,"-"],function_and_method_signatures:[862,0,0,"-"],linear_algebra:[863,0,0,"-"],manipulation_functions:[866,0,0,"-"],searching_functions:[868,0,0,"-"],set_functions:[869,0,0,"-"],sorting_functions:[870,0,0,"-"],statistical_functions:[872,0,0,"-"],utility_functions:[873,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[840,4,1,""],nan:[840,4,1,""],pi:[840,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[842,2,1,""],ones:[843,2,1,""],zeros:[844,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[846,2,1,""],iinfo:[847,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[850,2,1,""],bitwise_and:[851,2,1,""],ceil:[852,2,1,""],cos:[853,2,1,""],cosh:[854,2,1,""],isfinite:[855,2,1,""],isnan:[856,2,1,""],less:[857,2,1,""],log1p:[858,2,1,""],log2:[859,2,1,""],logical_not:[860,2,1,""],sqrt:[861,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[864,2,1,""],vector_norm:[865,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[867,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[871,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[874,2,1,""],any:[875,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[877,0,0,"-"],compilation:[916,0,0,"-"],device:[918,0,0,"-"],dtype:[968,0,0,"-"],general:[992,0,0,"-"],gradients:[1089,0,0,"-"],image:[1105,0,0,"-"],linalg:[1112,0,0,"-"],logic:[1120,0,0,"-"],math:[1123,0,0,"-"],meta:[1139,0,0,"-"],multi_node:[1143,0,0,"-"],nest:[1187,0,0,"-"],random:[1199,0,0,"-"],reductions:[1206,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[878,2,1,""],builtin_add:[879,2,1,""],builtin_and:[880,2,1,""],builtin_bool:[881,2,1,""],builtin_contains:[882,2,1,""],builtin_deepcopy:[883,2,1,""],builtin_dir:[884,2,1,""],builtin_eq:[885,2,1,""],builtin_float:[886,2,1,""],builtin_floordiv:[887,2,1,""],builtin_ge:[888,2,1,""],builtin_getattr:[889,2,1,""],builtin_getattribute:[890,2,1,""],builtin_getitem:[891,2,1,""],builtin_gt:[892,2,1,""],builtin_int:[893,2,1,""],builtin_invert:[894,2,1,""],builtin_le:[895,2,1,""],builtin_lt:[896,2,1,""],builtin_mul:[897,2,1,""],builtin_ne:[898,2,1,""],builtin_neg:[899,2,1,""],builtin_or:[900,2,1,""],builtin_pos:[901,2,1,""],builtin_pow:[902,2,1,""],builtin_radd:[903,2,1,""],builtin_rand:[904,2,1,""],builtin_rfloordiv:[905,2,1,""],builtin_rmul:[906,2,1,""],builtin_ror:[907,2,1,""],builtin_rpow:[908,2,1,""],builtin_rsub:[909,2,1,""],builtin_rtruediv:[910,2,1,""],builtin_rxor:[911,2,1,""],builtin_setitem:[912,2,1,""],builtin_sub:[913,2,1,""],builtin_truediv:[914,2,1,""],builtin_xor:[915,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[917,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[918,1,1,""],DevClonedItem:[920,1,1,""],DevClonedIter:[921,1,1,""],DevClonedNest:[922,1,1,""],DevDistItem:[923,1,1,""],DevDistIter:[924,1,1,""],DevDistNest:[925,1,1,""],DevManager:[918,1,1,""],DevMapper:[927,1,1,""],DevMapperMultiProc:[928,1,1,""],MultiDev:[918,1,1,""],MultiDevItem:[930,1,1,""],MultiDevIter:[931,1,1,""],MultiDevNest:[932,1,1,""],Profiler:[933,1,1,""],clear_mem_on_dev:[934,2,1,""],default_device:[935,2,1,""],dev:[936,2,1,""],dev_clone:[937,2,1,""],dev_clone_array:[938,2,1,""],dev_clone_iter:[939,2,1,""],dev_clone_nest:[940,2,1,""],dev_dist:[941,2,1,""],dev_dist_array:[942,2,1,""],dev_dist_iter:[943,2,1,""],dev_dist_nest:[944,2,1,""],dev_from_str:[945,2,1,""],dev_to_str:[946,2,1,""],dev_unify:[947,2,1,""],dev_unify_array:[948,2,1,""],dev_unify_iter:[949,2,1,""],dev_unify_nest:[950,2,1,""],dev_util:[951,2,1,""],get_all_arrays_on_dev:[952,2,1,""],gpu_is_available:[953,2,1,""],num_arrays_on_dev:[954,2,1,""],num_cpu_cores:[955,2,1,""],num_gpus:[956,2,1,""],percent_used_mem_on_dev:[957,2,1,""],print_all_arrays_on_dev:[958,2,1,""],set_default_device:[959,2,1,""],set_split_factor:[960,2,1,""],split_factor:[961,2,1,""],split_func_call:[962,2,1,""],to_dev:[963,2,1,""],total_mem_on_dev:[964,2,1,""],tpu_is_available:[965,2,1,""],unset_default_device:[966,2,1,""],used_mem_on_dev:[967,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[918,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[918,3,1,""],da_tune_step:[918,3,1,""],dim_size:[918,3,1,""],ds_tune_step:[918,3,1,""],map:[918,3,1,""],repeated_config_check:[918,3,1,""],tune_step:[918,3,1,""],tuned:[918,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[927,3,1,""],map:[927,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[928,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[918,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[930,3,1,""],items:[930,3,1,""],keys:[930,3,1,""],shape:[930,3,1,""],values:[930,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[931,3,1,""],at_dev:[931,3,1,""],at_devs:[931,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[932,3,1,""],at_dev:[932,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[933,3,1,""],start:[933,3,1,""],stop:[933,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[968,1,1,""],DefaultFloatDtype:[968,1,1,""],DefaultIntDtype:[968,1,1,""],astype:[968,2,1,""],cast:[972,2,1,""],closest_valid_dtype:[973,2,1,""],convert_dtype:[974,2,1,""],default_dtype:[975,2,1,""],default_float_dtype:[976,2,1,""],default_int_dtype:[977,2,1,""],dtype:[978,2,1,""],dtype_bits:[979,2,1,""],dtype_from_str:[980,2,1,""],dtype_to_str:[981,2,1,""],invalid_dtype:[982,2,1,""],is_float_dtype:[983,2,1,""],is_int_dtype:[984,2,1,""],set_default_dtype:[985,2,1,""],set_default_float_dtype:[986,2,1,""],set_default_int_dtype:[987,2,1,""],unset_default_dtype:[988,2,1,""],unset_default_float_dtype:[989,2,1,""],unset_default_int_dtype:[990,2,1,""],valid_dtype:[991,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[968,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[968,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[968,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1016,2,1,""],abs:[993,2,1,""],all_equal:[994,2,1,""],arange:[995,2,1,""],arg_names:[996,2,1,""],argmax:[997,2,1,""],argmin:[998,2,1,""],array:[999,2,1,""],array_equal:[1000,2,1,""],arrays_equal:[1001,2,1,""],asarray:[992,2,1,""],assert_supports_inplace:[1002,2,1,""],broadcast_to:[1003,2,1,""],cache_fn:[1004,2,1,""],clip:[1005,2,1,""],clip_matrix_norm:[1006,2,1,""],clip_vector_norm:[1007,2,1,""],concatenate:[1008,2,1,""],constant_pad:[1009,2,1,""],container_types:[1010,2,1,""],copy_array:[1011,2,1,""],cross:[1012,2,1,""],cumprod:[1013,2,1,""],cumsum:[1014,2,1,""],current_framework_str:[1015,2,1,""],einops_rearrange:[1017,2,1,""],einops_reduce:[1018,2,1,""],einops_repeat:[1019,2,1,""],equal:[1020,2,1,""],exists:[1021,2,1,""],expand_dims:[1022,2,1,""],floor:[1023,2,1,""],floormod:[1024,2,1,""],fourier_encode:[1025,2,1,""],full:[1026,2,1,""],gather:[1027,2,1,""],gather_nd:[1028,2,1,""],get_all_arrays_in_memory:[1029,2,1,""],get_min_base:[1030,2,1,""],get_min_denominator:[1031,2,1,""],get_num_dims:[1032,2,1,""],get_referrers_recursive:[1033,2,1,""],has_nans:[1034,2,1,""],identity:[1035,2,1,""],indices_where:[1036,2,1,""],inplace_arrays_supported:[1037,2,1,""],inplace_decrement:[1038,2,1,""],inplace_increment:[1039,2,1,""],inplace_update:[1040,2,1,""],inplace_variables_supported:[1041,2,1,""],is_array:[1042,2,1,""],isinf:[1043,2,1,""],linear_resample:[1044,2,1,""],linspace:[1045,2,1,""],logspace:[1046,2,1,""],match_kwargs:[1047,2,1,""],matmul:[1048,2,1,""],maximum:[1049,2,1,""],meshgrid:[1050,2,1,""],minimum:[1051,2,1,""],multiprocessing:[1052,2,1,""],num_arrays_in_memory:[1053,2,1,""],one_hot:[1054,2,1,""],ones:[1055,2,1,""],ones_like:[1056,2,1,""],print_all_arrays_in_memory:[1057,2,1,""],queue_timeout:[1058,2,1,""],repeat:[1059,2,1,""],reshape:[1060,2,1,""],round:[1061,2,1,""],scatter_flat:[1062,2,1,""],scatter_nd:[1063,2,1,""],set_min_base:[1064,2,1,""],set_min_denominator:[1065,2,1,""],set_queue_timeout:[1066,2,1,""],set_tmp_dir:[1067,2,1,""],shape:[1068,2,1,""],shape_to_tuple:[1069,2,1,""],split:[1070,2,1,""],squeeze:[1071,2,1,""],stable_divide:[1072,2,1,""],stable_pow:[1073,2,1,""],stack:[1074,2,1,""],supports_inplace:[1075,2,1,""],swapaxes:[1076,2,1,""],tile:[1077,2,1,""],tmp_dir:[1078,2,1,""],to_list:[1079,2,1,""],to_numpy:[1080,2,1,""],to_scalar:[1081,2,1,""],transpose:[1082,2,1,""],try_else_none:[1083,2,1,""],unstack:[1084,2,1,""],value_is_nan:[1085,2,1,""],where:[1086,2,1,""],zero_pad:[1087,2,1,""],zeros_like:[1088,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1089,1,1,""],adam_step:[1091,2,1,""],adam_update:[1092,2,1,""],execute_with_gradients:[1093,2,1,""],gradient_descent_update:[1094,2,1,""],is_variable:[1095,2,1,""],lamb_update:[1096,2,1,""],lars_update:[1097,2,1,""],optimizer_update:[1098,2,1,""],set_with_grads:[1099,2,1,""],stop_gradient:[1100,2,1,""],unset_with_grads:[1101,2,1,""],variable:[1102,2,1,""],variable_data:[1103,2,1,""],with_grads:[1104,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1089,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1106,2,1,""],float_img_to_uint8_img:[1107,2,1,""],gradient_image:[1108,2,1,""],random_crop:[1109,2,1,""],stack_images:[1110,2,1,""],uint8_img_to_float_img:[1111,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1113,2,1,""],inv:[1114,2,1,""],matrix_norm:[1115,2,1,""],pinv:[1116,2,1,""],qr:[1117,2,1,""],svd:[1118,2,1,""],vector_to_skew_symmetric_matrix:[1119,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1121,2,1,""],logical_or:[1122,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1124,2,1,""],acosh:[1125,2,1,""],asin:[1126,2,1,""],atan2:[1128,2,1,""],atan:[1127,2,1,""],atanh:[1129,2,1,""],cosh:[1130,2,1,""],divide:[1131,2,1,""],erf:[1132,2,1,""],exp:[1133,2,1,""],log:[1134,2,1,""],sin:[1135,2,1,""],sinh:[1136,2,1,""],tan:[1137,2,1,""],tanh:[1138,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1140,2,1,""],maml_step:[1141,2,1,""],reptile_step:[1142,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1143,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1188,2,1,""],copy_nest:[1189,2,1,""],index_nest:[1190,2,1,""],map:[1191,2,1,""],map_nest_at_index:[1192,2,1,""],map_nest_at_indices:[1193,2,1,""],multi_index_nest:[1194,2,1,""],nested_indices_where:[1195,2,1,""],nested_map:[1196,2,1,""],set_nest_at_index:[1197,2,1,""],set_nest_at_indices:[1198,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1200,2,1,""],randint:[1201,2,1,""],random_normal:[1202,2,1,""],random_uniform:[1203,2,1,""],seed:[1204,2,1,""],shuffle:[1205,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1207,2,1,""],reduce_max:[1208,2,1,""],reduce_mean:[1209,2,1,""],reduce_min:[1210,2,1,""],reduce_prod:[1211,2,1,""],reduce_std:[1212,2,1,""],reduce_sum:[1213,2,1,""],reduce_var:[1214,2,1,""]},"ivy.functional.ivy.nn":{activations:[1216,0,0,"-"],layers:[1224,0,0,"-"],losses:[1237,0,0,"-"],norms:[1241,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1217,2,1,""],leaky_relu:[1218,2,1,""],relu:[1219,2,1,""],sigmoid:[1220,2,1,""],softmax:[1221,2,1,""],softplus:[1222,2,1,""],tanh:[1223,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1225,2,1,""],conv1d_transpose:[1226,2,1,""],conv2d:[1227,2,1,""],conv2d_transpose:[1228,2,1,""],conv3d:[1229,2,1,""],conv3d_transpose:[1230,2,1,""],depthwise_conv2d:[1231,2,1,""],dropout:[1232,2,1,""],linear:[1233,2,1,""],lstm_update:[1234,2,1,""],multi_head_attention:[1235,2,1,""],scaled_dot_product_attention:[1236,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1238,2,1,""],cross_entropy:[1239,2,1,""],sparse_cross_entropy:[1240,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1242,2,1,""]},"ivy.stateful":{activations:[1246,0,0,"-"],converters:[1249,0,0,"-"],initializers:[1251,0,0,"-"],layers:[1260,0,0,"-"],module:[1272,0,0,"-"],norms:[1274,0,0,"-"],optimizers:[1276,0,0,"-"],sequential:[1282,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1247,1,1,""],GELU:[1248,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1247,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1248,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1250,2,1,""]},"ivy.stateful.initializers":{Constant:[1251,1,1,""],FirstLayerSiren:[1253,1,1,""],GlorotUniform:[1254,1,1,""],KaimingNormal:[1251,1,1,""],Ones:[1256,1,1,""],Siren:[1257,1,1,""],Uniform:[1251,1,1,""],Zeros:[1259,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1251,3,1,""],create_variables:[1251,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1253,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1254,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1251,3,1,""],create_variables:[1251,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1256,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1257,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1251,3,1,""],create_variables:[1251,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1259,3,1,""]},"ivy.stateful.layers":{Conv1D:[1261,1,1,""],Conv1DTranspose:[1262,1,1,""],Conv2D:[1263,1,1,""],Conv2DTranspose:[1264,1,1,""],Conv3D:[1265,1,1,""],Conv3DTranspose:[1266,1,1,""],DepthwiseConv2D:[1267,1,1,""],Dropout:[1268,1,1,""],LSTM:[1269,1,1,""],Linear:[1270,1,1,""],MultiHeadAttention:[1271,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1261,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1262,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1263,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1264,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1265,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1266,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1267,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1268,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1269,3,1,""],get_initial_state:[1269,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1270,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1271,3,1,""]},"ivy.stateful.module":{Module:[1273,1,1,""]},"ivy.stateful.module.Module":{__init__:[1273,3,1,""],build:[1273,3,1,""],build_mode:[1273,3,1,""],built:[1273,3,1,""],check_submod_rets:[1273,3,1,""],get_mod_key:[1273,3,1,""],mod_depth:[1273,3,1,""],mod_height:[1273,3,1,""],mod_with_top_mod_key_chain:[1273,3,1,""],save_weights:[1273,3,1,""],show_mod_in_top_mod:[1273,3,1,""],show_structure:[1273,3,1,""],show_v_in_top_v:[1273,3,1,""],sub_mods:[1273,3,1,""],track_submod_call_order:[1273,3,1,""],track_submod_rets:[1273,3,1,""],v_with_top_v_key_chains:[1273,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1275,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1275,3,1,""]},"ivy.stateful.optimizers":{Adam:[1277,1,1,""],LAMB:[1278,1,1,""],LARS:[1279,1,1,""],Optimizer:[1280,1,1,""],SGD:[1281,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1277,3,1,""],set_state:[1277,3,1,""],state:[1277,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1278,3,1,""],set_state:[1278,3,1,""],state:[1278,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1279,3,1,""],set_state:[1279,3,1,""],state:[1279,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1280,3,1,""],set_state:[1280,3,1,""],step:[1280,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1281,3,1,""],set_state:[1281,3,1,""],state:[1281,3,1,""]},"ivy.stateful.sequential":{Sequential:[1283,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1283,3,1,""]},"ivy.verbosity":{cprint:[1288,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1287,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1276,1277,1278],"02886":1243,"100":[1143,1243,1285],"141592653589793":840,"2021":1243,"2102":1243,"360":[1123,1135,1137],"718281828459045":840,"754":[840,845,846,849,861],"999":[1089,1091,1092,1096,1276,1277,1278],"abstract":[918,933,1243,1276,1280],"boolean":[40,41,849,851,860,918,953,965,968,982,991,992,994,1000,1001,1034,1036,1037,1041,1042,1043,1075,1085,1089,1095,1120,1121,1122,1139,1140,1141,1143],"break":43,"case":[15,18,19,40,41,42,43,849,850,852,853,854,859,861,918,957,964,967,992,995,1060,1062,1063,1112,1115,1117,1143,1187,1190,1194,1243,1260,1271,1272,1273,1276,1280,1289],"catch":[992,1016],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,394,436,437,845,847,918,920,921,922,923,924,925,927,928,930,931,932,933,945,946,968,992,996,1047,1089,1103,1143,1187,1189,1196,1237,1239,1240,1243,1246,1247,1248,1249,1250,1251,1253,1254,1256,1257,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1289],"default":[15,18,19,40,41,42,43,841,842,843,844,863,864,865,866,867,870,871,873,874,875,916,917,918,927,928,935,936,940,941,942,943,944,947,948,949,950,957,960,961,962,967,968,975,976,977,978,992,994,995,997,998,1006,1007,1008,1009,1012,1013,1014,1025,1026,1027,1032,1034,1035,1044,1046,1047,1050,1052,1055,1058,1059,1062,1063,1066,1068,1070,1072,1073,1082,1084,1085,1089,1092,1094,1095,1096,1097,1098,1100,1104,1112,1115,1117,1139,1140,1141,1142,1143,1187,1188,1189,1191,1195,1196,1199,1200,1202,1203,1206,1208,1209,1210,1211,1212,1213,1214,1216,1217,1221,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283],"final":[40,41,43,992,1025,1045,1046,1143,1260,1271,1286],"float":[40,41,42,43,840,841,842,843,844,845,846,849,850,852,853,854,859,861,863,865,877,896,902,918,927,928,951,957,960,964,967,968,976,983,992,995,1006,1007,1009,1025,1026,1030,1031,1046,1064,1065,1066,1072,1073,1089,1091,1092,1094,1096,1097,1098,1105,1107,1111,1123,1131,1139,1140,1141,1142,1143,1199,1202,1203,1216,1218,1224,1232,1235,1236,1237,1238,1239,1240,1241,1242,1260,1268,1271,1274,1275,1276,1277,1278,1279,1280,1281],"function":[15,40,41,43,391,392,393,396,397,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,840,842,843,844,846,847,850,851,852,853,854,855,856,857,858,859,860,861,863,864,865,867,871,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,920,921,922,923,924,925,927,928,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1246,1247,1248,1276,1279,1280,1281,1285,1286,1289],"import":[43,1243,1286,1289],"int":[40,41,42,43,390,391,392,393,488,841,842,843,844,845,846,847,863,864,865,866,867,870,871,873,874,875,877,896,902,916,917,918,940,941,942,943,944,947,948,949,950,955,956,962,968,977,979,984,992,997,998,1003,1008,1009,1013,1014,1017,1018,1019,1022,1025,1026,1027,1032,1035,1044,1045,1046,1054,1055,1059,1060,1062,1063,1068,1069,1070,1071,1074,1076,1077,1082,1084,1087,1089,1091,1092,1096,1105,1109,1110,1112,1115,1139,1140,1141,1142,1143,1187,1196,1199,1200,1201,1203,1204,1206,1208,1209,1210,1211,1212,1213,1214,1216,1221,1224,1225,1226,1227,1228,1229,1230,1231,1235,1237,1239,1240,1241,1242,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1274,1275],"long":[43,1224,1234],"new":[40,41,43,488,841,842,843,844,849,858,968,972,992,993,1003,1017,1018,1019,1022,1025,1026,1027,1028,1055,1060,1062,1063,1064,1065,1072,1073,1074,1089,1092,1094,1096,1097,1098,1105,1107,1109,1111,1123,1125,1129,1130,1136,1138,1143,1187,1197,1198,1199,1200,1241,1242,1243,1249,1250,1260,1270,1274,1275,1276,1277,1278,1279,1280,1281,1286,1289],"public":[992,1010],"return":[15,16,17,18,19,40,41,42,43,488,841,842,843,844,849,850,851,852,853,854,855,856,857,859,860,861,863,864,865,870,871,873,874,875,877,896,902,916,917,918,927,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,953,954,956,957,961,962,963,964,965,967,968,972,973,974,975,976,977,978,979,980,981,982,983,984,991,992,993,994,995,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1032,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1059,1060,1061,1062,1063,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1091,1092,1093,1094,1095,1096,1097,1098,1100,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1187,1188,1189,1191,1195,1196,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1249,1250,1260,1269,1270,1276,1280,1285,1286,1289],"short":[43,1224,1234,1243,1289],"static":[40,41,916,917],"super":1143,"true":[40,41,42,438,444,472,475,488,489,849,855,856,860,863,865,870,871,873,874,875,916,917,918,992,994,1002,1004,1021,1025,1034,1036,1085,1086,1089,1092,1094,1095,1096,1097,1098,1100,1112,1115,1139,1140,1141,1142,1143,1187,1188,1195,1199,1200,1206,1208,1209,1210,1211,1212,1213,1214,1216,1217,1224,1232,1237,1238,1239,1240,1260,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281],"try":[40,41,992,1083,1143],"var":[40,41,1139,1140,1141,1289],"while":[40,41,42,849,860,1143],AND:[849,851,873,874,1120,1121],But:1289,For:[43,849,850,852,853,854,859,861,992,995,1005,1074,1089,1095,1103,1112,1117,1123,1124,1243,1249,1250,1286,1289],Its:[1123,1127],NOT:[849,860],Not:840,One:[40,41,43,992,1018,1060,1199,1201,1289],Ones:[1243,1251],PRs:43,Such:[992,1010],That:1286,The:[15,16,17,18,19,40,41,42,43,849,850,851,852,853,854,855,856,857,859,860,861,863,864,865,866,867,870,871,873,874,875,877,896,902,916,917,918,927,928,934,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,957,960,961,962,963,964,967,968,972,973,974,979,980,981,982,991,992,995,999,1000,1003,1004,1006,1007,1008,1009,1011,1012,1015,1016,1020,1025,1027,1028,1035,1038,1039,1040,1042,1044,1046,1048,1050,1052,1055,1056,1059,1060,1062,1063,1064,1065,1066,1069,1070,1071,1072,1073,1074,1077,1085,1088,1089,1091,1092,1094,1096,1097,1098,1100,1103,1105,1107,1109,1111,1112,1115,1117,1118,1123,1124,1126,1127,1131,1132,1133,1134,1135,1137,1139,1140,1141,1142,1143,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1243,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1286,1289],There:[43,1243,1286],These:[43,1243],Use:43,Used:[1187,1188,1195,1272,1273],Using:[1243,1244,1289],With:[40,41,1112,1115,1206,1208,1209,1210,1211,1212,1213,1214,1243,1285,1289],__array__:[992,999],__call__:[1260,1271,1272,1273],__del__:1143,__dict__:[1143,1286],__enter__:1143,__exit__:1143,__getitem__:1143,__getstate__:1143,__init__:[40,41,42,43,59,60,82,213,394,395,436,437,519,650,918,919,926,927,928,929,930,931,932,933,968,969,970,971,1089,1090,1143,1147,1154,1243,1246,1247,1248,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1289],__iter__:1143,__len__:1143,__next__:1143,__pow__:43,__repr__:1143,_assign_vari:1285,_axi:1143,_base:[1187,1188,1195],_compute_node_da_ratio:1143,_compute_node_strs_da:1143,_concat_unify_arrai:1143,_counter:1143,_cur_framework:[43,1143],_da_direct:1143,_da_directions_flip:1143,_da_step_tim:1143,_da_tim:1143,_da_tune_count:1143,_data:1143,_delta_da_dim_s:1143,_delta_sf:1143,_dict:1143,_dim_siz:1143,_first_da_tune_step:1143,_first_ns_tune_step:1143,_fn:1143,_forward:[1243,1285],_get_kalman_param:1289,_get_prior:1289,_get_some_model:1289,_handle_flat_arrays_in_out:43,_index:[1187,1188,1195],_input_queu:1143,_length:1143,_max_depth:1143,_max_node_dim_step_ratio:1143,_max_node_dim_step_s:1143,_max_split_factor_step_s:1143,_mean_unify_arrai:1143,_min_bas:[992,1073,1241,1242,1274,1275],_min_denomin:[992,1072],_min_node_dim_s:1143,_min_sf_tune_step:1143,_min_unit_node_tune_step:1143,_model:1289,_native_wrapp:43,_node_mapp:1143,_node_percent_mem:1143,_node_str:1143,_node_str_da_ratio:1143,_node_strs_da:1143,_node_strs_kei:1143,_node_strs_n:1143,_node_util:1143,_ns_step_tim:1143,_ns_time:1143,_ns_tune_count:1143,_num_nod:1143,_num_work:1143,_observed_config:1143,_output_queu:1143,_paramet:1285,_percent_mem_inc_per_sf:1143,_percent_mem_inc_per_unit_da_dim:1143,_percent_util_inc_per_unit_da_dim:1143,_ret_fn:1143,_safety_factor:1143,_save_dir:1143,_shift_da_split:1143,_shift_n:1143,_slice:1143,_step:[1276,1280],_sum_unify_arrai:1143,_timeout:1143,_tune:1143,_tune_da:1143,_tune_n:1143,_tune_step:1143,_unit_da_tune_count:1143,_unroll_step:1289,_with_node_mappig:1143,_worker:1143,_worker_class:1143,_worker_fn:1143,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,918,927,933,1143,1272,1273,1276,1280],abil:1243,abl:[40,41],about:[845,846,847],abov:[43,863,864,1199,1201],above_height:[40,41],abs:[294,438,568,700,863,865,992,1143],absolut:[40,41,992,993],abstractmethod:1143,accept:[15,43,849,860,1243],access:[40,41,43,1286],accord:[40,41,845,846,992,1009,1027,1062,1063,1082,1087],accordingli:[863,865,873,874,875],accur:[59,394,436,437,918,930,931,932,933,968,1089,1251,1253,1254,1256,1257,1259],aco:[788,1123],acosh:[788,1123],across:[40,41,918,927,928,937,938,940,941,942,943,944,950,960,961,992,997,998,1000,1001,1143,1187,1191],act:43,activ:[1217,1218,1219,1220,1221,1222,1223,1243,1247,1248],actual:1286,adam:[1089,1091,1092,1096,1243,1276,1278,1285],adam_step:1089,adam_upd:1089,adapt:[1089,1097,1276,1279],add:[40,41,43,1143,1237,1238,1239,1240,1241,1242,1243,1274,1275,1286],added:[43,992,1072,1073,1282,1283],adding:[43,992,1003],addit:[40,41,43,992,1017,1018,1019,1241,1242,1260,1270],addition:43,address:43,adher:43,adjac:[992,995],adopt:[43,992,1010],affect:[992,995],affin:[1274,1275],after:[849,861,992,1044,1089,1092,1093,1094,1096,1097,1098,1105,1106,1241,1242,1276,1277,1278,1279,1280,1281,1289],after_1:[992,1009,1087],after_n:[992,1009,1087],again:43,against:[40,41,1112,1115,1206,1208,1209,1210,1211,1212,1213,1214],agnost:[43,1243,1285,1286],aim:1289,algebra:1112,algorithm:[1224,1225,1226,1227,1228,1229,1230,1231,1260,1261,1262,1263,1264,1265,1266,1267,1289],align:[40,41,43,992,1003],aliv:[918,952,954,958,992,1029,1053,1057],all:[15,16,17,18,19,40,41,43,110,236,423,547,678,863,865,866,867,873,916,917,918,927,952,958,992,993,994,1000,1001,1010,1029,1035,1057,1071,1112,1117,1139,1140,1141,1142,1143,1187,1188,1189,1195,1196,1199,1200,1203,1206,1208,1209,1210,1211,1212,1213,1214,1224,1234,1243,1286,1289],all_depth:[40,41],all_equ:992,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1187,all_tru:[40,41],alloc:[43,918,1143],allow:[992,1045,1046,1047,1272,1273],allow_dupl:[992,1047],alon:[918,957,967,1143,1243],along:[40,41,43,488,863,865,866,867,870,871,873,874,875,918,941,942,943,944,947,948,949,950,962,992,1008,1013,1014,1027,1044,1045,1046,1059,1070,1074,1077,1084,1112,1115,1139,1140,1141,1142,1143,1199,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214],alongsid:[1285,1286],alpha:[1216,1218],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,849,852,918,1143],also:[40,41,43,992,995,1089,1092,1139,1140,1141,1142,1187,1188,1189,1195,1196,1224,1233,1243,1260,1270,1285],altern:1285,alwai:[40,41,43,1089,1095,1100],among:[40,41],amount:[918,964,1143,1243],angl:[849,854,1123,1124,1128],ani:[15,16,17,18,19,40,41,43,110,236,423,547,678,873,916,917,918,920,923,927,928,930,939,940,943,944,949,992,994,995,999,1016,1017,1018,1019,1020,1021,1034,1042,1047,1072,1073,1089,1093,1143,1187,1188,1191,1195,1196,1197,1198,1199,1203,1243,1249,1250,1272,1273,1285,1286,1289],anoth:[40,41,43,968,974,1243],another_backend:43,anyth:[43,1289],anywai:43,apart:43,api:[1243,1244],appear:[43,992,1022],append:[40,41,863,864,1143],appli:[15,18,19,40,41,992,1017,1018,1019,1089,1096,1097,1112,1118,1120,1121,1122,1139,1140,1141,1187,1191,1194,1196,1216,1217,1218,1219,1220,1221,1222,1223,1224,1233,1235,1236,1241,1242,1243,1246,1247,1248,1274,1275],applic:[1187,1191,1196,1224,1235,1236,1243,1289],approxim:[43,849,850,853,854,858,859,877,902,1216,1217],arang:[130,294,438,488,568,700,992,1045,1046],arbitrari:[40,41,918,947,948,950,1143],arc:[1123,1128],arcco:[1123,1124],arctan:[1123,1127],area:[849,850,1243],arg:[15,16,17,40,41,43,59,63,918,927,940,944,950,962,992,1017,1018,1019,1063,1143,1249,1250,1272,1273],arg_nam:992,arg_stateful_idx:[1272,1273],argmax:[130,438,568,700,992],argmin:[130,438,568,700,992],args_clon:1143,args_dist:1143,args_to_ivi:[15,1243],args_to_n:[15,1243],args_uni:1143,argsort:[107,233,420,544,675,870],argument:[15,16,17,18,19,40,41,42,43,59,63,916,917,918,927,928,940,944,950,992,995,996,1004,1016,1047,1063,1123,1124,1143,1187,1191,1249,1250,1272,1273],aris:[1243,1289],arithmet:[43,1206,1209,1212,1214],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:488,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,130,294,438,488,568,700,841,842,843,844,845,846,847,849,850,851,852,853,854,855,856,857,858,859,860,861,863,864,865,866,867,870,871,873,874,875,896,902,918,936,937,938,941,942,943,944,947,948,949,950,952,954,958,962,963,968,972,978,983,984,992,993,994,995,997,998,1000,1001,1002,1003,1005,1006,1007,1008,1009,1011,1012,1013,1014,1017,1018,1019,1020,1022,1023,1024,1025,1026,1027,1028,1029,1032,1034,1035,1036,1037,1038,1039,1040,1042,1043,1044,1045,1046,1048,1049,1050,1051,1053,1054,1055,1056,1057,1059,1060,1061,1062,1063,1068,1070,1071,1074,1075,1076,1077,1079,1080,1081,1082,1084,1085,1086,1087,1088,1089,1091,1092,1095,1096,1100,1102,1103,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1143,1187,1189,1196,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1260,1268,1269,1271,1276,1280,1285,1286],arrang:[992,1017],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,390,391,392,393,394,396,397,840,841,842,843,844,845,846,847,849,850,851,852,853,854,855,856,857,858,859,860,861,863,864,865,866,867,870,871,873,874,875],array_api_methods_to_test:43,array_builtin:[43,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915],array_equ:[294,700,992],array_lik:[488,992,999],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,992],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1243],arraywithgener:[22,1243],arraywithgradi:[24,1243],arraywithimag:[26,1243],arraywithlinalg:[28,1243],arraywithlog:[30,1243],arraywithmath:[32,1243],arraywithmeta:[34,1243],arraywithrandom:[36,1243],arraywithreduct:[38,1243],arriv:[40,41,42],articl:1243,arxiv:1243,as_arrai:[40,41,992,1032,1068],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[436,438,447,918,936,968,975,976,977,978],as_tensor:438,as_vari:[40,41],as_zero:[40,41],asarrai:[438,992],ascend:[870,871],asin:[788,1123],asinh:[86,399,523,654,849],aspect:[1105,1110],assert:[40,41,992,1002,1143],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:992,associ:[43,1112,1119],assum:[849,853,1286,1289],astyp:[438,968],asynchron:[40,41,42],at_dev:[40,42,918,931,932],at_kei:[40,41],at_key_chain:[40,41],at_nod:1143,atan2:[788,1123],atan:[788,1123],atanh:[788,1123],attent:[43,1224,1235,1236,1260,1271],attribut:[0,6,40,41,845,846,847,992,1056,1088],audienc:[1243,1286],author:1243,automat:43,avail:[40,41,43,918,953,955,956,965,992,1018,1143],averag:[1089,1091,1092,1096,1139,1140,1141,1206,1209],average_across_step:[1139,1140,1141],avoid:[43,918,1143,1286],axes:[40,41,43,438,469,481,482,863,865,866,867,873,874,875,918,962,992,997,998,1009,1022,1076,1082,1087,1112,1115,1143,1206,1208,1209,1210,1211,1212,1213,1214],axes_length:[40,41,992,1017,1018,1019],axi:[40,41,438,440,441,445,446,452,460,461,462,467,468,470,863,864,865,866,867,870,871,873,874,875,918,920,923,930,941,942,943,944,947,948,949,950,962,992,997,998,1008,1009,1012,1013,1014,1022,1027,1044,1045,1046,1059,1070,1071,1074,1076,1077,1084,1087,1143,1199,1205,1206,1208,1209,1210,1211,1212,1213,1214,1216,1221,1237,1239,1240],axis0:[40,41,992,1076],axis1:[40,41,863,864,992,1076],axis2:[863,864],back:[43,1272,1273,1276,1280],backend:[15,17,19,40,41,390,391,392,393,394,396,397,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,486,487,488,489,918,953,956,965,968,974,982,991,992,1037,1041,1089,1092,1094,1096,1097,1098,1103,1143,1243,1244,1249,1250,1276,1277,1278,1279,1280,1281,1285,1286,1289],backend_nam:43,background:[1243,1286],backprop:1289,backward:[873,874,875,1285],band:[992,1025],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,394,436,437,438,462,849,858,859,877,902,918,920,921,922,923,924,925,927,928,930,931,932,933,968,992,1030,1046,1064,1073,1089,1143,1206,1207,1243,1246,1247,1248,1251,1253,1254,1256,1257,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1289],basi:43,batch:[40,41,863,865,918,960,961,992,1025,1035,1105,1109,1112,1118,1139,1140,1141,1142,1143,1224,1233,1241,1242,1274,1275],batch_shap:[438,454,992,1035,1054,1105,1106,1107,1108,1109,1110,1111,1112,1119,1199,1200,1224,1234,1235,1236,1260,1269],batch_siz:[488,489,1143,1199,1200,1224,1225,1226,1227,1228,1229,1230,1231],bayesian:1289,becaus:[43,992,995],becom:[43,992,1005,1123,1128,1289],been:[992,1017,1018,1019,1199,1200],befor:[40,41,43,918,962,1139,1140,1141,1143,1187,1196,1206,1208,1209,1210,1211,1212,1213,1214,1224,1235,1236,1289],before_1:[992,1009,1087],before_n:[992,1009,1087],begin:[1187,1188,1195,1286],behaviour:[43,1289],behind:[1089,1092,1094,1096,1097,1098,1243],being:[40,41,43,992,995,1058,1066,1143],believ:43,belong:[40,41],below:[43,863,864,1243,1286,1289],below_depth:[40,41],benefit:1243,bernoul:[1224,1232,1260,1268],best:[43,992,1047,1243],beta1:[1089,1091,1092,1096,1276,1277,1278],beta2:[1089,1091,1092,1096,1276,1277,1278],beta:[1241,1242],between:[40,41,42,845,846,992,995,1112,1117,1187,1191,1199,1201,1237,1239,1240,1276,1278],bia:[1224,1233,1234,1260,1261,1262,1263,1264,1265,1266,1267,1270],bias_initi:[1260,1261,1262,1263,1264,1265,1266,1267,1270],bilinear:[1105,1106],bilinear_resampl:[166,348,477,611,773,1105],bilinearli:[1105,1106],binari:[849,851,1237,1238],binary_cross_entropi:1237,bit:[394,845,846,847,968,979,1105,1107,1111,1243],bitwis:[849,851],bitwise_and:[86,217,399,523,654,849],bitwise_oper:[0,7,8],block:[1243,1286],bool:[15,18,19,40,41,42,43,849,855,856,857,860,863,865,870,871,873,874,875,877,896,916,917,918,936,949,953,957,962,965,967,968,978,992,994,1000,1001,1013,1016,1020,1021,1025,1032,1034,1042,1047,1068,1070,1084,1085,1086,1089,1092,1093,1094,1095,1096,1097,1098,1100,1112,1115,1139,1140,1141,1142,1143,1187,1188,1189,1191,1195,1196,1199,1200,1206,1208,1209,1210,1211,1212,1213,1214,1216,1217,1224,1232,1249,1250,1260,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281],both:[43,992,1012],bottom:1243,boundari:[40,41,1199,1203],branch:[43,916,917],brittl:43,broadcast:[40,41,43,849,851,857,863,865,873,874,875,877,896,902,992,1003,1020,1049,1050,1051,1059,1112,1115,1123,1128,1131,1206,1208,1209,1210,1211,1212,1213,1214],broadcast_to:[294,700,992],build:[1143,1243,1260,1271,1272,1273],build_mod:[1260,1271,1272,1273],builder:[43,1243],built:[918,992,995,1143,1260,1271,1272,1273],builtin:43,builtin_ab:[249,877],builtin_add:[249,877],builtin_and:[249,877],builtin_bool:[249,877],builtin_contain:[249,877],builtin_deepcopi:[249,877],builtin_dir:[249,877],builtin_eq:[249,877],builtin_float:[249,877],builtin_floordiv:[249,877],builtin_g:[249,877],builtin_getattr:[249,877],builtin_getattribut:[249,877],builtin_getitem:[249,877],builtin_gt:[249,877],builtin_int:[249,877],builtin_invert:[249,877],builtin_l:[249,877],builtin_lt:[249,556,687,877],builtin_mul:[249,877],builtin_n:[249,877],builtin_neg:[249,877],builtin_or:[249,877],builtin_po:[249,877],builtin_pow:[43,249,877],builtin_radd:[249,877],builtin_rand:[249,877],builtin_rfloordiv:[249,877],builtin_rmul:[249,877],builtin_ror:[249,877],builtin_rpow:[249,877],builtin_rsub:[249,877],builtin_rtruediv:[249,877],builtin_rxor:[249,877],builtin_setitem:[249,877],builtin_some_op:43,builtin_sub:[249,877],builtin_truediv:[249,877],builtin_xor:[249,877],busi:43,bypass:1286,cach:[918,934,992,1004],cache_fn:992,calcul:[40,41,42,43,849,850,853,854,858,859,861,877,902,1123,1131],call:[43,918,962,992,1058,1066,1083,1089,1093,1143,1187,1188,1191,1195,1260,1271,1272,1273,1276,1280,1286,1289],callabl:[40,41,916,917,918,927,928,962,992,1004,1016,1018,1047,1083,1139,1140,1141,1142,1143,1187,1191,1192,1193,1195,1196,1224,1235],can:[43,918,960,961,962,992,1060,1105,1107,1143,1243,1285,1286,1289],cancel_join_thread:1143,cannot:43,captur:1243,cast:[40,41,130,294,438,568,700,968,992,1008,1105,1107,1111],catch_except:[992,1016],categori:43,caus:43,ceil:[86,217,399,523,654,849,992,995],cell:[1224,1234,1260,1269],certain:[40,41,992,995,1045,1046],chain:[40,41,1139,1140,1141,1282,1283],chang:[43,918,992,1060,1143,1187,1189,1196,1243,1285],channel:[992,1025,1105,1107,1108,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270],check:[15,16,17,18,19,40,41,43,918,957,967,968,973,982,991,992,1002,1021,1034,1042,1075,1085,1089,1095,1143,1187,1188,1195,1243,1286],check_nest:[1187,1195],check_shap:[40,41],check_submod_ret:[1272,1273],check_typ:[40,41],choic:[1243,1286],choleski:[777,1112],choos:[849,860,992,1086,1112,1117,1123,1128,1243],choose_random_framework:59,chosen:[40,41,992,995,1086],chunk:[918,960,961,962,1143],chunk_siz:[918,962,1143],circl:[1123,1124,1126],clark:1243,clear:[43,918,934,1143],clear_framework_stack:59,clear_mem_on_dev:[436,692,918],click:1243,clip:[40,41,294,438,700,992,1006,1007,1049,1051,1243],clip_matrix_norm:992,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,992],clipped_delta:1143,clone:[40,41,918,937,938,939,940,1143],clone_arrai:1143,clone_it:1143,clone_nest:1143,clonedit:1143,cloneditem:1143,clonednest:1143,close:[43,1105,1110,1123,1126,1143,1289],closest:[849,852,968,973],closest_valid_dtyp:968,code:[40,41,42,43,488,1243,1244,1285,1286],codebas:[918,960,961,1143,1243,1286,1289],codomain:[849,850,853,854,859,861],colab:1243,collect:[15,40,41,436,438,472,477,481,485,486,488,877,916,918,968,992,1089,1105,1112,1120,1123,1143,1187,1199,1206,1216,1224,1237,1241,1246,1260,1274,1276],color:[40,41,42,1287,1288],column:[992,1035],combin:[40,41,42,1105,1110,1243,1289],combined_batch_s:1143,come:1286,command:1243,comment:43,commit:1289,common:[40,41,43,1123,1128],common_key_chain:[40,41],commun:[43,1243,1286],communuti:43,compar:[40,41,870,871,992,994,1000,1001],comparison_oper:[0,9,10],compat:[43,849,851,857,863,865,873,874,875,877,896,902,992,1020,1060,1123,1131,1243,1289],compil:[294,438,700,1272,1273,1276,1277,1278,1279,1280,1281],compile_on_next_step:[1272,1273,1276,1277,1278,1279,1280,1281],complet:[40,41,43,1112,1117,1143],complex:[1286,1289],compliant:[849,860],compon:[992,1012],composit:43,comput:[40,41,849,851,857,860,863,865,877,896,918,962,992,1006,1007,1013,1014,1020,1048,1089,1091,1092,1093,1094,1096,1097,1098,1100,1102,1105,1108,1112,1113,1114,1115,1116,1117,1120,1121,1122,1123,1124,1126,1127,1128,1132,1133,1134,1135,1137,1187,1191,1206,1207,1208,1209,1210,1211,1212,1213,1214,1224,1225,1226,1227,1228,1229,1230,1231,1233,1235,1237,1238,1239,1240],concat:[40,41,918,947,948,949,950,962,992,1025,1143],concaten:[40,41,130,294,438,568,700,992,1025,1143,1243],concatten:[40,41,918,947,948,949,950,962,1143],condit:[438,916,917,992,1086,1187,1195],conditon:[1187,1195],config:[40,41,1143],config_list:1143,configur:[40,41],conflict:43,conform:43,conjunct:1286,connect:[1260,1270,1271],consid:[40,41,849,860,1112,1117,1285,1289],consist:[40,41,918,950,1143,1206,1207,1272,1273,1286],constant:[918,927,928,992,1009,1143,1187,1191,1237,1238,1239,1240,1241,1242,1251,1252,1256,1259,1272,1273,1274,1275,1286],constant_kwarg:1143,constant_pad:[294,438,568,700,992],constitu:[40,41],construct:[992,1077,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285],constructor:[40,41,42,992,996,1282,1283],consum:[918,1143],cont_feat_dim:[1224,1235],contaienr:[40,41],contain:[15,18,19,42,43,841,843,844,849,850,851,852,853,854,855,856,857,858,859,860,861,863,864,865,873,874,875,877,896,902,918,937,941,962,968,972,992,993,997,998,1005,1006,1007,1010,1020,1034,1049,1051,1061,1072,1073,1089,1091,1092,1094,1096,1097,1098,1123,1131,1139,1140,1141,1142,1143,1199,1200,1206,1208,1209,1210,1212,1214,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[438,700,992],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[438,992,1052,1224,1235,1260,1271],context_dim:[1260,1271],contextmanag:[59,60],continu:[43,1143,1286],contract:[40,41,1206,1207],contribut:[1243,1244],contributor:[43,1243],control:1243,conv1d:[197,379,502,830,1224,1243,1260],conv1d_transpos:[197,379,502,830,1224],conv1dtranspos:[1243,1260],conv2d:[197,379,502,637,830,1224,1243,1260],conv2d_transpos:[197,379,502,830,1224],conv2dtranspos:[1243,1260],conv3d:[197,379,502,637,830,1224,1243,1260],conv3d_transpos:[197,379,502,830,1224],conv3dtranspos:[1243,1260],convent:[40,41,1206,1207],conver:[918,934,945,957,964,967,1143],convers:[16,17,18,19,40,41,1143,1243],convert:[15,16,17,18,19,40,41,43,918,945,946,968,974,980,981,992,1069,1080,1081,1105,1107,1111,1112,1119,1143,1187,1189,1196,1243,1250],convert_dtyp:968,convolut:[1224,1225,1226,1227,1228,1229,1230,1231,1260,1261,1262,1263,1264,1265,1266,1267],cool:43,cooler:43,coordin:[992,1050,1123,1124,1126,1128],copi:[40,41,43,488,992,1011,1143,1187,1189],copy_arrai:[438,700,992],copy_nest:1187,core:[436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,486,487,488,489,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,920,921,922,923,924,925,927,928,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1243],corner:43,correct:[43,1243,1286],correctli:[40,41,43,1112,1115,1123,1128,1206,1208,1209,1210,1211,1212,1213,1214],correspond:[40,41,43,877,902,992,1008,1199,1200],cos:[86,399,523,654,849,992,1025,1123,1124,1137,1286],cosh:[86,399,523,654,788,849,1123],cosin:[849,853,854,1123,1124,1125,1130],cost:[1089,1091,1092,1094,1096,1097,1098,1139,1140,1141,1142],cost_fn:[1139,1142],could:1289,count:[40,41,866,867,873,874,875,1143,1206,1211,1213],cours:43,cprint:1287,cpu:[40,41,43,918,955,957,963,964,967,992,995,999,1027,1028,1035,1045,1046,1054,1055,1056,1062,1063,1088,1143,1199,1200,1201,1202,1203,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1282,1283,1285,1286],creat:[40,41,841,842,843,844,918,927,928,992,995,999,1026,1027,1028,1035,1045,1046,1054,1055,1056,1062,1063,1079,1088,1089,1102,1143,1199,1200,1201,1202,1203,1243,1244,1249,1250,1251,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1289],create_if_abs:[40,41],create_vari:1251,creation:[40,41,42,43],creation_funct:[390,391,392,393,841,842,843,844],crop:[1105,1109],crop_siz:[1105,1109],cross:[294,700,992,1237,1238,1239,1240],cross_entropi:1237,cuda:[40,41,918,927,946,963,992,995,999,1027,1028,1035,1045,1046,1054,1055,1056,1062,1063,1088,1143,1199,1200,1201,1202,1203,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1282,1283],cumprod:[130,294,438,700,992],cumsum:[700,992],cumul:[992,1013,1014],current:[40,41,42,43,918,927,951,952,954,958,968,974,982,991,992,1015,1029,1037,1041,1053,1057,1143,1187,1188,1195,1243,1289],current_framework:59,current_framework_str:[438,700,992,1143],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1224,1225,1226,1227,1228,1229,1230],d_out:[1224,1225,1226,1227,1228,1229,1230],da_can_termin:1143,da_dim_s:[918,1143],da_direct:1143,da_tune_step:[918,1143],dai:1289,daniel:1243,data:[40,41,42,43,841,842,843,844,846,847,849,850,851,852,853,854,855,856,857,859,860,861,863,864,865,866,867,870,871,873,874,875,877,896,902,918,920,921,922,923,924,925,930,931,932,946,968,972,973,974,978,979,980,981,982,983,984,991,992,995,999,1020,1026,1035,1042,1055,1056,1060,1071,1075,1088,1089,1095,1103,1123,1131,1143,1224,1233,1243],data_format:[1224,1225,1226,1227,1228,1229,1230,1231,1260,1261,1262,1263,1264,1265,1266,1267],data_type_funct:[394,396,397,845,846,847],dataset:[40,41],datatyp:[40,41,968,973,983,984],dcdw:[1089,1091,1092,1094,1096,1097],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1089,1096,1097,1276,1278,1279],decay_lambda:[1089,1096,1097,1276,1278,1279],decid:[40,41,1289],decompos:[1112,1113,1117],decomposit:[1112,1113,1117,1118],decor:43,decrement:[992,1038],dedic:[1089,1103,1249,1250],deep:[40,41,1243],deep_copi:[40,41],deeper:[918,940,944,950,1143,1187,1196,1243],deepli:[1187,1189],def:[43,60,82,213,395,519,650,919,926,929,969,970,971,1090,1143,1147,1154,1243,1252,1255,1258,1285,1286,1289],default_dev:43,default_devic:918,default_dtyp:[43,968],default_float_dtyp:968,default_int_dtyp:968,default_key_color:[40,41,42],default_nod:1143,default_rng:488,default_v:[992,1016],defaultdevic:[918,919],defaultdtyp:[968,969],defaultfloatdtyp:[968,970],defaultintdtyp:[968,971],defer:43,defin:[43,992,1012,1054,1056,1088,1199,1201],definit:43,degre:[1123,1135,1137],del:1143,delai:43,delet:43,delta:[1089,1091,1143],delta_dim_s:1143,delta_percent_mem:1143,delta_sf:1143,delta_util:1143,demo:1243,denomin:[992,1024,1031,1065,1072,1073,1241,1242,1274,1275],denot:43,dens:[1260,1270],depend:[43,849,850,853,854,858,859,870,871,877,902,992,1086,1112,1118,1243],depth:[40,41,438,463,918,940,944,950,992,1033,1054,1143,1187,1196,1272,1273],depth_cutoff:[40,41],depthwis:[1224,1231,1260,1267],depthwise_conv2d:[197,379,502,637,830,1224],depthwiseconv2d:[1243,1260],deriv:[1089,1091,1092,1094,1096,1097,1098,1187,1189,1196,1243,1272,1276,1280,1282],descend:[870,871,1112,1118],descent:[1089,1094,1276,1281],describ:[40,41,1206,1207],descript:[863,865],design:[1243,1244],desir:[40,41,918,963,968,972,992,995,999,1035,1036,1055,1056,1088,1105,1110,1143,1206,1208,1209,1210,1212,1214],desired_aspect_ratio:[477,480,1105,1110],desired_percent_increas:1143,detail:1289,detect:[40,41,1187,1188,1195],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,849,850,851,853,854,855,856,859,861,863,864,865,873,874,875,877,902,918,953,955,956,965,968,972,973,979,982,983,984,991,992,994,995,999,1000,1001,1034,1037,1041,1042,1075,1085,1089,1095,1123,1131,1139,1140,1141,1142,1143,1224,1235],dev:[40,41,42,43,123,288,436,438,439,442,452,453,454,461,462,463,464,465,466,471,488,489,561,692,918,921,922,924,925,927,928,931,932,934,935,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,954,957,958,959,960,961,962,963,964,967,992,995,999,1027,1028,1035,1045,1046,1054,1055,1056,1062,1063,1088,1089,1104,1199,1200,1201,1202,1203,1249,1250,1251,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1282,1283],dev_clon:[40,41,918],dev_clone_arrai:918,dev_clone_it:918,dev_clone_nest:918,dev_dist:[40,41,918],dev_dist_arrai:918,dev_dist_it:918,dev_dist_nest:918,dev_from_str:[43,123,288,436,561,692,918],dev_mapp:918,dev_str:[40,41],dev_to_str:[123,288,436,561,692,918],dev_unifi:918,dev_unify_arrai:918,dev_unify_it:918,dev_unify_nest:918,dev_util:918,devclonedit:918,devcloneditem:918,devclonednest:918,devdistit:918,devdistitem:918,devdistnest:918,develop:[43,1243,1286,1289],deviat:[40,41,1199,1202,1206,1212,1241,1242,1274,1275],devic:[21,40,41,43,390,391,392,393,437,438,451,841,842,843,844,920,921,922,923,924,925,927,928,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,992,995,999,1026,1027,1028,1035,1045,1046,1054,1055,1056,1062,1063,1088,1089,1104,1199,1200,1201,1202,1203,1243,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1282,1283],devmanag:[918,926],devmapp:[918,928],devmappermultiproc:918,diag:[1112,1118],diagon:[100,226,413,537,668,863,992,1035],dict:[15,16,17,18,19,40,41,42,918,920,923,927,928,930,940,941,942,943,944,992,1017,1018,1019,1047,1139,1140,1141,1143,1187,1189,1190,1191,1194,1196,1249,1250],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,845,846,918,937,938,941,942,1112,1117,1143,1224,1233,1243,1286,1289],differenti:[1243,1286],dilat:[1224,1225,1226,1227,1228,1229,1230,1231,1260,1261,1262,1263,1264,1265,1266,1267],dim:[40,41,43,992,1054,1105,1106,1110,1112,1118,1143,1260,1271],dim_siz:[40,41,918,1143],dimens:[40,41,42,863,864,865,866,867,873,874,875,918,949,992,1003,1008,1012,1017,1018,1019,1022,1025,1032,1044,1054,1059,1060,1070,1071,1074,1082,1084,1105,1109,1112,1115,1118,1139,1140,1141,1142,1143,1199,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1221,1224,1225,1226,1227,1228,1229,1230,1231,1234,1237,1239,1240,1260,1261,1262,1263,1264,1265,1266,1267,1270,1271],dimension:[40,41,488,863,865,873,874,875,992,1070,1071,1112,1118],direct:1143,directli:[43,1187,1196,1286,1289],directori:[992,1067,1078],discord:43,discret:[1237,1239],discuss:43,disk:[40,41,1105,1107],distanc:[992,995],distribut:[40,41,918,937,941,942,943,944,1143,1199,1200,1201,1202,1203,1224,1232,1260,1268,1272,1273],distribute_nest:1143,distributedarrai:[40,41],distrubt:[1237,1239],dive:[1243,1286],divid:[40,41,992,1070,1072,1123],dividend:[1123,1131],divis:[992,1024,1031,1065,1072,1073,1089,1091,1092,1096,1123,1131,1276,1277,1278],divisor:[1089,1091,1092,1096,1123,1131,1276,1277,1278],doc:1243,docstr:43,document:43,doe:[40,41,43,992,995,1070,1285],doesn:[1112,1117,1243],doing:43,domain:[849,850,853,854,859,861,1123,1124],don:[43,1243],done:43,door:1289,dot:[1112,1114,1224,1235,1236,1260,1271],down:1285,downscal:[992,1006,1007],drag:[1243,1289],draw:[1199,1200,1202,1203],drawn:[1199,1200,1201,1202,1203],drop:[1243,1289],dropout:[1224,1243,1260,1271],dropout_r:[1260,1271],ds_tune_step:918,dtype:[40,41,43,130,294,390,391,392,393,394,396,397,438,439,442,443,451,454,464,471,568,700,841,842,843,844,845,846,847,972,973,974,975,976,977,979,980,981,982,983,984,985,986,987,988,989,990,991,992,995,999,1026,1035,1054,1055,1056,1088],dtype_bit:[130,294,438,568,700,968],dtype_from_str:[43,130,294,438,568,700,968],dtype_in:[438,448,449,450,968,974,979,980,981,982,983,984,991],dtype_to_str:[130,294,438,568,700,968],duplic:[40,41,43],dure:[40,41,43,916,917,992,1083,1089,1091,1092,1096,1139,1140,1141,1142,1272,1273,1276,1277,1278,1280],dynam:[43,438,444,916,917],each:[40,41,42,43,849,850,851,852,853,854,855,856,857,858,859,860,861,877,896,902,918,927,928,937,938,939,940,941,942,943,949,961,962,992,993,994,1009,1020,1059,1070,1074,1077,1087,1089,1092,1094,1096,1097,1098,1105,1108,1112,1118,1123,1126,1131,1133,1134,1143,1187,1191,1199,1200,1206,1207,1224,1225,1226,1227,1228,1229,1230,1231,1232,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1271,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1286],eager:1286,easi:1289,easili:1243,econom:1289,ecosystem:1243,edg:[992,1005,1009,1087],effect:[1089,1098],effective_grad:[1089,1098],effici:1289,einop:[40,41,992,1017,1018,1019],einops_rearrang:[40,41,992],einops_reduc:[40,41,992],einops_repeat:[40,41,992],einstein:[40,41,1206,1207],einsum:[40,41,183,367,490,627,810,1206],either:[40,41,43,849,859,992,1016,1047,1050,1052,1139,1140,1141,1142,1143,1260,1271,1272,1273,1286],eleg:1143,element:[40,41,43,488,849,850,851,852,853,854,855,856,857,858,859,860,861,866,867,873,874,875,877,896,902,918,939,943,949,968,972,992,993,995,997,998,1000,1001,1005,1006,1007,1013,1014,1020,1023,1024,1035,1036,1049,1051,1059,1061,1070,1081,1086,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1143,1206,1207,1209,1211,1213,1216,1217,1218,1219,1220,1221,1222,1223,1224,1232,1260,1268],elementwis:[40,41],elementwise_affin:[1274,1275],elementwise_funct:[849,850,851,852,853,854,855,856,857,858,859,860,861],elemtn:[1199,1200],elif:1143,els:[43,992,1002,1016,1021,1143],elsewher:[992,1086],emphas:1243,empti:[40,41,77,208,390,513,644,841,873,874,875,1112,1117,1143],enabl:[40,41,42,43,1243],encapsul:[845,847],encod:[992,1025,1105,1107],end:[992,995,1243,1286],engag:43,ensur:43,entir:[40,41,873,874,875,918,962,1143,1243,1260,1269],entri:[40,41,992,1045,1046,1070,1071],entropi:[1237,1238,1239,1240],enumer:1143,environ:1243,eps:[394,845,846],epsilon:[1089,1091,1092,1096,1237,1238,1239,1240,1241,1242,1274,1275,1276,1277,1278],equal:[40,41,438,568,700,849,855,863,864,870,871,992,994,1000,1001,1009,1070,1087,1123,1135,1137,1199,1203],equality_matrix:[992,994],equat:[40,41,1206,1207],equival:[849,860,863,865,992,995,1123,1137],erf:[486,788,1123],error:[40,41,43,918,992,1071,1123,1132,1143,1216,1217,1272,1273,1276,1280],essenti:43,etc:[40,41,43,918,963,992,995,999,1027,1028,1035,1045,1046,1054,1055,1056,1062,1063,1088,1143,1199,1200,1201,1202,1203,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1282,1283,1289],euclidean:[863,865],euler:840,evalu:[40,41,849,858,859,873,874,875,992,1050,1187,1188,1195],even:[43,1289],evenli:[40,41,992,995,1045,1046,1070],everi:[43,992,994,1289],exact:[40,41],exampl:[43,916,917,992,1005,1074,1112,1117,1243,1285,1286,1289],example_input:[438,444,916,917],exc_tb:1143,exc_typ:1143,exc_val:1143,exce:[992,1051],except:[40,41,44,47,873,874,875,992,995,1002,1008,1016,1083,1143],excess_s:1143,excit:[1243,1286],exclud:[59,61,992,995,1199,1203],exclus:[40,41,438,446,459,472,474,992,1013,1042,1089,1095,1199,1201],execut:[43,992,1083,1286],execute_with_gradi:[163,343,472,606,767,1089,1243,1285],exist:[40,41,992,1016,1143,1243,1276,1280,1289],exp:[788,1123],expand:[40,41,992,1022,1025],expand_dim:[40,41,294,700,992,1143],expect:[992,996],explain:[43,1286],explicitli:[43,1260,1269,1271,1272,1273,1286],expon:[43,877,902,992,1073],exponenti:[43,877,902,1123,1132,1133],expos:[992,999,1010],express:[849,853,992,1050],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1089,1093],eye:[1112,1114],fabian:1243,fabio:1243,factor:[918,927,960,961,962,1089,1091,1092,1096,1097,1112,1118,1143,1224,1225,1226,1227,1228,1229,1230,1231,1260,1261,1262,1263,1264,1265,1266,1267,1276,1277,1278,1279],fail:43,falck:1243,fall:[1272,1273,1276,1280],fallback_to_non_compil:[1272,1273,1276,1280],fals:[15,18,19,40,41,42,59,66,67,68,69,70,436,438,446,447,459,467,470,472,473,474,481,482,849,855,856,860,863,865,870,871,873,874,875,918,936,949,957,962,967,968,975,976,977,978,992,994,1013,1016,1021,1025,1032,1042,1047,1068,1070,1084,1086,1089,1092,1093,1094,1095,1096,1097,1098,1112,1115,1139,1140,1141,1142,1143,1187,1188,1189,1191,1195,1196,1206,1208,1209,1210,1211,1212,1213,1214,1249,1250,1272,1273,1276,1277,1278,1279,1280,1281],fan_in:1251,fan_mod:1251,fan_out:1251,far:[1187,1188,1195,1285],faster:[916,917],favourit:[1243,1285],feasibl:1289,feat_dim:[1224,1235,1236],fed:[918,962,1143],feed:[918,962,1143],few:43,field:1289,file:[40,41,43,992,1067,1078,1272,1273],filepath:[40,41],fill:[40,41,841,842,843,844,992,1026,1055,1199,1201],fill_valu:[438,451,992,1026],filter:[1224,1225,1226,1227,1228,1229,1230,1231,1260,1261,1262,1263,1264,1265,1266,1267,1289],filter_s:[1260,1261,1262],filter_shap:[1260,1263,1264,1265,1266,1267],find:[40,41,43,1289],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[81,82,212,213,394,395,518,519,649,650,845],finish:[1243,1289],finit:[849,855],first:[40,41,43,488,849,851,857,863,864,916,917,918,949,992,1000,1008,1012,1020,1045,1046,1074,1076,1089,1093,1112,1118,1139,1140,1141,1142,1143,1187,1188,1195,1199,1205,1206,1211,1213,1260,1271,1272,1273,1276,1280,1286,1289],firstlayersiren:[1243,1251],firstli:[1286,1289],fist:[918,962,1143],fit:[40,41,436,438,472,477,481,485,486,488,992,1059,1105,1110],fix:43,fkt:1289,flag:[40,41,43,1089,1095],flat:[40,41,43,992,1059,1062],flat_list:[40,41],flatten:[40,41,863,865,992,1025,1059,1206,1208,1209,1210,1212,1214],flatten_key_chain:[40,41,1272,1273],flexibl:[1243,1286],flip:[40,41,103,229,416,540,671,866],float32:[43,438,454,968,972,980,981,992,995,999,1035,1055,1056,1088],float_dtyp:[968,976,986],float_img_to_uint8_img:1105,floor:[294,438,700,992,1024,1143],floormod:[294,438,700,992],fluid:1289,folder:[43,1243],follow:[40,41,43,845,847,863,865,918,962,992,1038,1039,1040,1072,1073,1089,1092,1094,1096,1097,1098,1143,1187,1191,1196,1224,1235,1236,1243,1260,1270,1276,1280],followng:[845,846],fomaml_step:1139,forget:[1089,1091,1092,1096,1276,1277,1278],fork:[992,1052,1243,1244],forkserv:[992,1052,1143],form:[15,16,17,18,19,40,41,863,864,992,999,1089,1092,1094,1096,1097,1098,1187,1189,1196,1224],format:[40,41,43,918,936,968,972,974,978,992,995,999,1035,1055,1056,1088,1143,1206,1207,1243,1285,1286],format_fn:[40,41],format_key_chain:[40,41],forward:[1272,1273,1276,1280,1285],found:[40,41,42],fourier:[992,1025],fourier_encod:992,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,108,111,112,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,230,234,237,238,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,349,350,351,353,354,355,356,357,359,360,363,364,365,366,368,369,370,371,372,373,374,375,378,380,381,382,383,384,385,386,391,392,393,395,396,397,400,401,402,403,404,405,406,407,408,409,410,411,414,415,417,421,424,425,437,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,473,474,475,476,478,479,480,482,483,484,487,489,491,492,493,494,495,496,497,500,501,503,504,505,506,507,508,509,514,515,516,517,519,520,521,524,525,526,527,528,529,530,531,532,533,534,535,538,539,541,545,548,549,557,562,563,564,565,566,567,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,607,608,609,610,612,613,614,616,617,618,619,623,624,625,626,628,629,630,631,632,633,634,638,639,640,645,646,647,648,650,651,652,655,656,657,658,659,660,661,662,663,664,665,666,669,670,672,676,679,680,688,693,694,695,696,697,698,699,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,768,769,770,771,772,774,775,776,778,779,780,781,782,783,784,786,787,789,790,791,792,793,794,795,796,797,798,799,800,801,802,804,805,806,807,808,809,811,812,813,814,815,816,817,820,821,822,823,824,825,826,828,829,831,832,833,834,835,836,837,842,843,844,846,847,850,851,852,853,854,855,856,857,858,859,860,861,864,865,867,871,874,875,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1217,1218,1219,1220,1221,1222,1223,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1242,1243,1247,1248,1249,1250,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1288,1289],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1143,framewrk:[992,1052],free:43,freed:43,freeli:43,frequenc:[992,1025],from:[40,41,42,43,849,861,863,864,866,867,873,874,875,918,927,928,962,968,974,992,1016,1027,1028,1035,1060,1071,1079,1086,1089,1092,1096,1105,1109,1112,1117,1139,1140,1141,1142,1143,1187,1189,1196,1199,1200,1201,1202,1203,1206,1211,1213,1224,1232,1235,1243,1249,1250,1260,1268,1271,1276,1280,1285,1286],from_cal:[1272,1273],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,130,294,438,568,700,845,846,992,1112,1117,1243],full_matric:[1112,1118],fulli:[43,1243,1260,1270,1271,1285],func:[40,41,438,444,472,473,916,917,918,962,992,1004,1089,1093,1143],further:[43,1289],furthermor:1289,futur:1289,gain:1251,gamma:[1241,1242],gather:[40,41,130,294,438,568,700,992,1028],gather_nd:[40,41,130,294,438,568,700,992],gauss:[1123,1132],gaussian:[1216,1217],geglu:[1243,1246],gelu:[377,499,819,1216,1243,1246],gener:[23,40,41,43,436,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,488,916,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1095,1199,1201,1203,1204,1243,1276,1280],geometr:[992,1025],get:[40,41,43,845,846,847,918,927,928,936,951,952,957,961,964,967,968,978,979,992,996,1029,1030,1031,1058,1143,1243,1260,1269,1289],get_all_arrays_in_memori:992,get_all_arrays_on_dev:918,get_framework:59,get_initial_st:[1260,1269],get_min_bas:992,get_min_denomin:992,get_mod_kei:[1272,1273],get_num_dim:[438,700,992],get_referrers_recurs:992,getfullargspec:1143,gist:1243,give:[43,992,1060,1286],given:[40,41,43,841,842,843,844,866,867,918,951,957,960,961,962,964,967,968,972,992,995,999,1005,1013,1014,1028,1045,1046,1055,1056,1059,1062,1063,1070,1077,1082,1084,1088,1089,1091,1092,1094,1096,1097,1098,1112,1114,1119,1123,1124,1143,1187,1192,1193,1199,1202,1203,1205,1206,1209,1211,1212,1213,1214,1224,1225,1226,1227,1228,1229,1230,1231,1249,1250,1289],global:[40,41,42,918,927,928,935,960,961,962,968,975,976,977,992,1015,1030,1031,1058,1064,1065,1066,1072,1073,1089,1104,1143,1241,1242,1274,1275],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1243,1251,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270],good:43,googl:1243,got:[43,1243],gpu0:43,gpu2:43,gpu:[918,953,956,1143],gpu_is_avail:[436,918,1143],grad:[1243,1276,1280,1285],gradient:[25,40,41,473,474,475,476,918,962,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1108,1139,1140,1141,1142,1243,1276,1277,1278,1279,1280,1281,1285,1289],gradient_descent_upd:[1089,1139,1140,1141,1142],gradient_imag:[166,348,477,611,773,1105],gradienttrack:[1089,1090],graph:[1089,1092,1094,1096,1097,1098,1272,1273],greater:[40,41,992,995,1023,1071,1199,1203],green:[40,41,42,1287,1288],grid:[992,1050],group:[1105,1110],guid:[43,1243,1244,1289],gym:1243,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1289,half:[992,995,1143,1199,1203],hand:1243,handl:[40,41,42,43,916,917,918,934,936,945,946,957,964,967,1089,1092,1094,1096,1097,1098,1143,1276,1277,1278,1279,1280,1281],happen:43,has:[40,41,43,992,1074,1112,1117,1123,1127],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,992],hasattr:1143,have:[40,41,43,841,842,845,846,849,850,851,852,853,854,855,856,857,859,860,861,863,864,865,866,867,870,871,873,874,875,877,896,902,992,1008,1012,1017,1018,1019,1020,1026,1074,1089,1095,1103,1112,1118,1123,1131,1143,1243,1285,1286],haven:43,hdf5:[40,41,1272,1273],head:[1224,1235,1260,1271],head_dim:[1260,1271],height:[1105,1110],height_cutoff:[40,41],help:[43,59,394,436,437,918,930,931,932,933,968,1089,1243,1251,1253,1254,1256,1257,1259],here:[43,1243],hidden:[1224,1234,1260,1269],hierarch:[992,1010],hierarchi:[40,41],high:[40,41,488,1199,1201,1203],higher:[1089,1092,1094,1096,1097,1098,1112,1118],highest:[1199,1201],highest_util:1143,highest_util_nod:1143,highli:1243,highlight:1289,hint:43,hkt:1289,hold:[968,972,992,995,999,1062,1063],host:1243,hot:[992,1054],hour:43,how:[1243,1260,1271,1272,1273,1286,1289],howev:[43,1286],http:1289,hyperbol:[849,850,854,1123,1125,1129,1130,1136,1138,1216,1223],hypothet:[43,1289],icon:1243,idea:1243,ident:[40,41,43,130,294,438,568,700,992],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[840,845,846,849,861],if_exist:[40,41],ignor:[40,41,1276,1280],ignore_key_error:[40,41],ignore_miss:[1276,1280],ignore_non:[40,41],iii:43,iinfo:[81,212,394,518,649,845],imag:[27,478,479,480,992,1044,1106,1107,1108,1109,1110,1111,1224,1225,1226,1227,1228,1230,1231,1243,1289],image_dim:[1105,1109],imkkhk:1289,immedi:[1243,1286,1289],implement:[43,849,850,853,854,858,859,870,871,877,902,1243,1286,1289],in_featur:[1224,1233],inadvert:43,includ:[40,41,43,863,865,873,874,875,992,995,1034,1072,1073,1085,1187,1188,1199,1203,1260,1270,1271,1274,1275,1285],include_deriv:[1187,1189,1196],include_empti:[40,41],include_inf:[40,41,992,1034,1085],include_nest:[1187,1188],include_self:[40,41],inclus:[43,1199,1201],incom:[1224,1233],increas:[918,940,944,950,992,1009,1022,1087,1143,1187,1196],increasingli:1289,increment:[992,1039,1143],inde:1243,indent:[40,41,42],independ:[1199,1200],index:[40,41,438,488,870,871,992,997,998,1027,1028,1050,1071,1074,1187,1190,1192,1193,1194,1197],index_nest:1187,indic:[40,41,438,452,453,463,465,466,863,865,870,871,992,997,998,1027,1028,1036,1054,1062,1063,1187,1188,1190,1192,1193,1194,1195,1197,1198,1199,1200,1216,1221,1224,1225,1226,1227,1228,1229,1230,1231,1241,1242,1260,1261,1262,1263,1264,1265,1266,1267,1272,1273],indices_wher:[130,294,438,700,992],indistinguish:[849,861],inevit:1289,inf:[40,41,863,865,992,1034,1043,1085,1123,1127],infer:[916,917,992,1032,1035,1060,1068,1105,1109,1112,1117,1286,1289],infin:[849,850,852,853,854,855,859,861,863,865,873,874,875,992,1043],infinit:[849,861],inform:[845,846,847,1089,1100],init_c:[1224,1234],init_h:[1224,1234],init_on_first_step:[1276,1280],initi:[40,41,42,43,59,394,436,437,918,930,931,932,933,968,1089,1143,1224,1234,1243,1253,1254,1256,1257,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1276,1280],initialz:[1272,1273],inner:[1139,1140,1141,1142],inner_batch_fn:[1139,1140,1141],inner_batch_shap:[1224,1233],inner_cost_fn:[1139,1140,1141],inner_grad_step:[1139,1140,1141,1142],inner_learning_r:[1139,1140,1141,1142],inner_optimization_step:[1139,1140,1141,1142],inner_v:[1139,1140,1141],innermost:[863,864],inp:1143,inplac:[40,41,992,1002,1037,1041,1075,1089,1092,1094,1096,1097,1098,1249,1250,1276,1277,1278,1279,1280,1281],inplace_arrays_support:[438,992],inplace_decr:[130,294,438,568,700,992],inplace_incr:[130,294,438,568,700,992],inplace_oper:[0,11,12],inplace_upd:[40,41,130,294,438,568,700,992,1249,1250],inplace_variables_support:[438,992],input:[15,18,19,40,41,42,43,849,850,851,852,853,854,855,856,857,858,859,860,861,863,864,865,866,867,870,871,873,874,875,916,917,918,927,928,935,936,937,940,941,944,950,962,963,968,972,973,975,976,977,978,979,983,984,992,993,994,997,998,1000,1001,1002,1003,1005,1006,1007,1008,1009,1011,1013,1014,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1032,1034,1035,1036,1038,1039,1040,1042,1043,1044,1048,1049,1050,1051,1059,1061,1068,1069,1071,1074,1075,1076,1077,1079,1080,1081,1082,1084,1085,1087,1089,1093,1095,1100,1104,1105,1106,1107,1108,1109,1111,1112,1115,1117,1118,1120,1121,1122,1123,1125,1127,1129,1130,1131,1135,1136,1137,1138,1139,1140,1141,1142,1143,1199,1200,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1241,1242,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1274,1275,1286],input_ax:[918,962,1143],input_channel:[1260,1261,1262,1263,1264,1265,1266,1269,1270],input_queu:1143,inputs_split:1143,insert:[992,1022],insid:43,inspect:1143,inspir:1289,instal:1243,instanc:[15,16,17,18,19,40,41,43,488,877,896,902,918,927,1143,1249,1250,1282,1283],instead:[40,41,43,488,1206,1208,1209,1210,1211,1212,1213,1214,1289],int32:43,int64:[968,972,992,995,999,1035,1055,1056,1088],int_dtyp:[968,977,987],integ:[40,41,488,845,847,849,851,852,863,865,873,874,875,968,984,992,995,1023,1061,1070,1199,1201,1204],integr:1243,intend:43,inter:1243,interact:1243,interchang:[40,41,992,1076],interest:1243,interfac:[992,999,1286],intermedi:[40,41],intern:[40,41,918,1089,1103,1143,1187,1188,1195,1196,1251,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1282,1283],interpol:[992,1044],intersect:[1123,1124],interv:[40,41,873,874,875,992,995,1005,1045,1046,1123,1126,1199,1203],introduc:1289,inv:[777,1112,1289],invalid:[873,874,875],invalid_dtyp:968,invers:[849,850,1112,1114,1116,1123,1124,1125,1126,1127,1129,1289],invert:[1112,1114,1116],invest:1289,investig:43,invoc:[916,917],irrespect:1243,is_al:1143,is_arrai:[130,294,438,568,700,992,1143],is_float_dtyp:968,is_int_dtyp:968,is_mean:1143,is_sum:1143,is_vari:[163,343,472,606,767,1089],isfinit:[86,217,399,523,654,849],isinf:[294,568,700,992],isinst:1143,isnan:[86,217,399,523,654,849],isnumer:1143,issu:[1243,1244],issue_numb:43,item:[15,19,40,41,877,889,890,918,927,928,930,937,939,941,943,949,968,975,992,1010,1033,1072,1073,1143,1187,1191,1192,1193,1196,1197,1198,1243,1272,1273,1285],iter:[15,16,17,18,19,40,41,42,916,917,918,921,922,924,925,927,928,931,932,939,941,942,943,944,949,962,992,994,1003,1008,1009,1035,1050,1055,1059,1060,1063,1068,1070,1074,1077,1082,1087,1143,1187,1188,1189,1191,1195,1196],iterbal:[918,939,943,949,1143],its:[488,918,962,992,1035,1060,1076,1082,1143,1243],itself:[43,1187,1196],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,390,391,392,393,394,396,397,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,840,841,842,843,844,845,846,847,849,850,851,852,853,854,855,856,857,858,859,860,861,863,864,865,866,867,870,871,873,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,920,921,922,923,924,925,927,928,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1253,1254,1256,1257,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1287,1288],ivy_backend:[40,41],ivy_bay:1289,ivy_test:43,ivyfcmodel:1285,ivyh:[40,41,42],ivymodul:[194,827],jame:1243,jax:[43,1089,1095,1243,1289],jax_concat:1243,jnp:1243,join:[40,41,992,1008,1074,1143],journal:1243,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1243,1260,1269,1289],kaimingnorm:[1251,1255],kalman:1289,kalman_filt:1289,kalman_filter_step:1289,kalman_filter_upd:1289,keep:[40,41,918,963,992,1084,1143,1243,1244,1289],keep_inner_v:[1139,1140,1141],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1139,1140,1141],keepdim:[40,41,438,470,481,482,863,865,873,874,875,992,1084,1112,1115,1206,1208,1209,1210,1211,1212,1213,1214],kei:[15,16,17,40,41,42,43,877,882,918,930,992,1010,1139,1140,1141,1143,1187,1190,1194,1224,1235,1236,1243,1249,1250,1260,1271,1276,1280],kept:[40,41,42,1139,1140,1141],kera:1289,kernel:[1224,1234],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,918,927,928,940,944,950,992,996,1017,1018,1019,1047,1143,1187,1191,1272,1273],keyword_color_dict:[40,41,42],kind:[845,846,847,1289],kwarg:[15,16,17,40,41,42,59,63,918,927,940,944,950,992,1047,1143,1249,1250,1272,1273],kwarg_stateful_idx:[1272,1273],kwargs_clon:1143,kwargs_dist:1143,kwargs_uni:1143,label:[43,1237,1238,1239,1240],lamb:[1089,1096,1243,1276],lamb_upd:1089,lambda:[1143,1276,1279,1281,1285],lar:[1089,1096,1097,1243,1276],larger:[845,846,992,1005],largest:[40,41,845,846,847,992,997,1023],lars_upd:1089,last:[40,41,863,864,866,867,870,871,873,874,875,992,995,1012,1044,1070,1074,1112,1115,1118,1206,1211,1213,1216,1221,1224,1234,1260,1270],later:[40,41,992,1004],latest:[1260,1269],layer:[1089,1092,1094,1096,1098,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1241,1242,1243,1251,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1282,1283,1289],layer_norm:1241,layernorm:[1243,1274],layerwis:[1089,1097,1276,1279],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1187,1188,1195],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1216,1217,1218],leaky_relu:[819,1216],learn:[1089,1092,1094,1096,1097,1098,1112,1117,1139,1140,1141,1142,1199,1205,1243,1276,1277,1278,1279,1280,1281,1286,1289],learnabl:[1241,1242,1274,1275],least:43,leav:[15,18,19,40,41,1187,1188,1189,1195,1196],left:[40,41,43,1112,1115,1206,1208,1209,1210,1211,1212,1213,1214,1243],leftmost:[40,41],len:1143,length:[40,41,42,992,995,1060,1071,1082],lenton2021ivi:1243,lenton:1243,less:[40,41,43,86,217,399,523,654,849,852,859,861,863,865,1143,1199,1203],less_util_node_str:1143,let:[1286,1289],level:1243,librari:[849,860,1243,1285,1289],lightweight:1243,like:[43,1089,1095,1199,1203,1243,1285,1286,1289],likewis:43,limit:[40,41,42,43,845,846,847,992,1005,1006,1007],linalg:[29,1113,1114,1115,1116,1117,1118,1119,1243],line:43,linear0:[1243,1285],linear1:1243,linear2:1285,linear:[992,1025,1044,1112,1216,1217,1218,1219,1224,1232,1243,1260,1261,1262,1263,1264,1265,1266,1267,1285],linear_algebra:[481,482,483,484,863,864,865],linear_resampl:[130,294,438,568,700,992],linearli:[992,1025],link:[43,1243],linspac:[130,294,438,568,700,992,995],list:[15,18,19,40,41,390,391,392,393,841,842,843,844,866,867,873,874,875,918,927,928,937,938,940,941,942,944,947,948,962,992,995,999,1001,1050,1069,1070,1079,1084,1139,1140,1141,1143,1187,1188,1189,1191,1195,1196,1224,1225,1226,1227,1228,1229,1230,1231,1243,1244,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267],list_join:[40,41,42],list_stack:[40,41],liter:[863,865],littl:1286,load:[40,41],loaded_kwarg:1143,loader:1243,local:43,local_set:[992,1033],locat:[43,992,1043,1199,1200],log1p:[86,399,523,654,849],log2:[86,399,523,654,849],log:[788,849,858,992,1046,1123,1143,1237,1238,1239,1240],logarithm:[849,858,859,1123,1134],logic:[31,849,860,873,874,875,1121,1122,1243],logical_and:[358,785,1120],logical_not:[86,217,399,523,654,849],logical_or:[358,785,1120],logit:[1237,1240],logspac:[130,294,438,568,700,992],look:[43,1286,1289],loop:[1139,1140,1141,1142],loss:[1238,1239,1240,1243,1285],loss_fn:[1243,1285],lot:1286,low:[40,41,488,1199,1201,1203],lower:[40,41,43,992,1049,1199,1203],lower_depth:[1272,1273],lowest:[15,18,19,40,41,1187,1196,1199,1201],lstm:[1224,1234,1243,1260],lstm_updat:[43,1224],machin:[845,846,847,1112,1117,1199,1205,1243,1286,1289],made:43,mai:[849,860,870,871,992,995,1016,1020,1243,1286,1289],main:[863,864,992,1035,1243],mainli:1243,maintain:[43,870,871],make:[43,488,918,1143,1243,1286],maml:[1139,1140,1141],maml_step:1139,manag:[918,1143],manhattan:[863,865],mani:[40,41,43,992,1070,1243],manipulation_funct:[866,867],manner:[15,18,19,40,41,43,1187,1196],manual:[1187,1188,1195,1289],map:[40,41,42,918,927,992,1043,1143,1187,1192,1193,1196,1260,1271,1285],map_cont:[40,41],map_nest_at_index:1187,map_nest_at_indic:1187,map_sequ:[40,41],mapper:[918,927,928,1143],mark:43,mask:[1224,1235,1236],master:43,match:[40,41,992,1047],match_kwarg:992,math:[33,487,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1143,1243],mathbb:[1112,1119],mathbf:[1112,1119],mathemat:[840,863,865],matmul:[43,294,438,568,700,992,1289],matplotlib:1286,matric:[863,864,1224,1233],matrix:[40,41,863,864,992,994,1006,1048,1112,1113,1114,1115,1116,1117,1119,1224,1233,1260,1270],matrix_norm:[40,41,170,352,481,615,777,1112],matter:1243,max:[40,41,394,845,846,847,992,1006,1007,1018,1049,1062,1063,1143,1206,1208,1276,1278],max_batch_s:[40,41],max_chunk_s:[918,962,1143],max_depth:[40,41,918,922,925,932,940,944,950,992,1033,1143,1187,1196],max_dev_dim_step_ratio:918,max_freq:[992,1025],max_length:[40,41],max_node_dim_step_ratio:1143,max_norm:[40,41,992,1006,1007],max_split_factor_step_s:[918,1143],max_trust_ratio:[1089,1096,1276,1278],maxim:[1243,1286,1289],maximis:1243,maximum:[40,41,42,700,918,940,944,950,962,992,997,1005,1006,1007,1025,1089,1096,1143,1187,1196,1206,1208],mayb:[15,18,19],mdi:1143,mean:[40,41,488,918,947,948,949,950,962,992,1018,1139,1140,1141,1142,1143,1187,1191,1199,1202,1206,1209,1212,1214,1251,1285,1289],measur:[1224,1235,1260,1271],mech:1243,mechan:[1243,1289],medic:1289,member:43,memori:[918,934,957,962,964,967,1143,1224,1234,1243],mention:43,merg:43,merge_with_upstream:43,meshgrid:[294,438,700,992],messag:[1287,1288],meta:[35,1140,1141,1142,1243],method:[40,41,42,43,488,992,999,1010,1050,1062,1063,1089,1096,1097,1143,1187,1188,1195,1196,1243,1260,1271,1272,1273,1286],might:[992,1016,1289],min:[40,41,394,845,846,847,863,865,992,1018,1051,1062,1063,1072,1112,1117,1143,1206,1210],min_bas:[992,1073],min_denomin:[992,1072],min_dev_dim_s:918,min_node_dim_s:1143,min_sf_tune_step:[918,1143],min_unit_dev_tune_step:918,min_unit_node_tune_step:1143,mind:1243,mini:[1241,1242,1274,1275],minimum:[40,41,700,918,968,972,992,995,998,999,1005,1030,1031,1064,1065,1072,1073,1143,1206,1210],miss:[1276,1280],ml_framework:[992,995,1112,1117],mod:[992,1024],mod_depth:[1272,1273],mod_height:[1272,1273],mod_with_top_mod_key_chain:[1272,1273],mode:[40,41,481,483,916,917,918,947,948,949,950,962,1112,1117,1118,1143,1286],model:[1243,1285],modul:[40,41,42,59,992,1052,1143,1243,1244,1246,1247,1248,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1274,1275,1282,1283,1289],moment:[1089,1091,1092,1096,1276,1277,1278],more:[43,866,867,992,1074,1143,1243,1286,1289],more_util_node_str:1143,most:[40,41,43,1112,1117,1243,1289],move:[40,41,43,918,963,1143],much:[43,1243,1289],multi:[488,992,1052,1224,1235,1260,1271],multi_head_attent:1224,multi_index_nest:1187,multi_map:[40,41],multi_nod:1143,multidev:[918,929,930,931,950],multidevcontain:[40,41],multidevic:[918,927],multidevit:[918,921,924,927,928,932],multidevitem:[918,920,923],multidevnest:[918,922,925],multiheadattent:[1243,1260],multinod:[1143,1147],multinodecontain:1143,multinodeit:1143,multinodeitem:1143,multinodenest:1143,multinomi:[176,362,488,622,803,1199],multipl:[40,41,873,874,875,992,1047,1070,1112,1114,1206,1208,1209,1210,1211,1212,1214,1241,1242,1260,1270,1286],multipli:[40,41,992,1013,1206,1211],multiprocess:[40,41,42,438,700,918,927,992,1143],must:[40,41,42,43,841,842,843,844,849,850,851,852,853,854,855,857,859,860,861,863,864,865,866,867,870,871,873,874,875,877,896,902,918,947,948,949,950,962,992,995,1008,1010,1012,1020,1049,1051,1063,1074,1123,1128,1131,1143,1199,1204,1276,1280],mutabl:[1187,1189,1196],mutlidevic:[918,927],mutlinod:1143,mw_tm1:[1089,1092,1096],mx_concat:1243,mxn:[863,864],mxnet:[43,1243,1289],my_func:43,mymodel:1243,name:[43,916,917,1285],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1286],nan:[40,41,43,840,849,850,852,853,854,855,856,859,861,873,874,875,992,1034,1085],nativ:[15,17,18,19,40,41,43,918,934,936,945,946,957,964,967,968,973,980,981,1143,1243,1244,1249,1250],native_modul:[1249,1250],native_module_class:[1249,1250],nativearrai:[15,18,19,43,845,846,847,849,850,851,852,853,854,855,856,857,858,859,860,861,863,865,866,867,870,871,873,874,875,877,896,902,918,936,962,963,968,972,978,983,984,992,993,994,995,997,998,999,1000,1001,1003,1005,1006,1007,1008,1009,1011,1012,1013,1014,1017,1018,1019,1020,1022,1023,1024,1025,1027,1028,1032,1034,1035,1036,1043,1044,1045,1046,1048,1049,1050,1051,1054,1055,1056,1059,1060,1061,1062,1063,1068,1070,1071,1074,1076,1077,1079,1080,1081,1082,1084,1085,1086,1087,1088,1143,1187,1189,1196],natur:[849,858,1123,1134,1289],ncdhw:[1224,1229,1230,1260,1265,1266],nchw:[1224,1227,1228,1231,1260,1263,1264,1267],ncw:[1224,1225,1226,1260,1261,1262],ndarrai:[43,390,391,392,393,394,396,397,488,992,1080],ndhwc:[1224,1229,1230,1260,1265,1266],nearest:[992,1061],need:[43,992,1006,1007,1224,1226,1228,1230,1243,1260,1262,1264,1266,1289],neg:[40,41,849,855,863,865,866,867,873,874,875,1206,1211,1213,1216,1218],negative_slop:1251,neither:1143,nest:[15,16,17,18,19,40,41,42,918,940,944,950,992,999,1079,1139,1140,1141,1143,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1272,1273,1276,1277,1278,1279,1280,1281],nested_indices_wher:1187,nested_map:[1143,1187],network:[1224,1233,1243,1244,1246,1260,1272,1273,1289],neural:[1224,1243,1246,1260,1285],never:43,new_node_percent_mem:1143,new_node_util:1143,new_node_utils_kei:1143,new_std:[1241,1242,1274,1275],newli:[43,916,917,992,1003,1004],newlin:[40,41,42],newshap:[992,1003,1060],next:[845,846,1143,1272,1273,1276,1277,1278,1279,1280,1281],nhwc:[1224,1227,1228,1231,1260,1263,1264,1267],node:[40,41,1187,1188,1195],node_clon:1143,node_dist:1143,node_dist_arrai:1143,node_dist_it:1143,node_in:1143,node_mapp:1143,node_str:1143,node_to_str:1143,node_util:1143,nodedistit:1143,nodedistitem:1143,nodedistnest:1143,nodemanag:[1143,1154],nodemapp:1143,nodemappermultiproc:1143,noinspect:[43,919,969,970,971,1090,1143],non:[40,41,849,860,863,865,873,874,875,916,917,968,982,1272,1273,1276,1280,1286],none:[40,41,42,43,59,61,64,390,391,392,393,436,438,439,442,444,451,452,453,454,461,462,463,464,465,466,467,468,469,471,481,482,488,489,841,842,843,844,845,846,847,863,865,866,867,873,874,875,916,917,918,927,928,934,935,960,961,962,963,968,975,976,977,992,995,999,1015,1016,1021,1026,1027,1028,1033,1035,1037,1038,1039,1040,1041,1045,1046,1052,1054,1055,1056,1059,1062,1063,1064,1065,1070,1071,1072,1073,1082,1083,1088,1089,1092,1094,1096,1097,1098,1104,1105,1109,1112,1115,1117,1139,1140,1141,1142,1143,1187,1188,1191,1195,1196,1199,1200,1201,1202,1203,1206,1208,1209,1210,1211,1212,1213,1214,1224,1226,1228,1230,1233,1234,1235,1236,1241,1242,1249,1250,1251,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283],norm:[40,41,863,865,992,1006,1007,1112,1115,1242,1243,1275,1276,1278],normal:[1199,1202,1241,1242,1274,1275],normalized_idx:[1241,1242],normalized_shap:[1274,1275],notat:[40,41,1206,1207],note:[43,1112,1117],noth:[40,41,1286],notimplementederror:1143,now:[40,41,43,918,963,992,993,1143,1243,1260,1271,1272,1273,1285,1286,1289],np_concat:1243,np_finfo:394,ns_tune_step:1143,num:[438,461,462,992,1045,1046],num_arrai:[40,41],num_arrays_in_memori:992,num_arrays_on_dev:918,num_band:[992,1025],num_channel:[1260,1267],num_chunk:1143,num_chunks_floor:1143,num_class:[1199,1200],num_cpu_cor:918,num_gpu:[123,436,918,1143],num_head:[1224,1235,1260,1271],num_kei:[1224,1235,1236],num_lay:[1260,1269],num_or_size_split:[40,41,438,467,992,1070],num_output:1143,num_queri:[1224,1235,1236],num_sampl:[438,460,488,489,992,1044,1105,1106,1199,1200],num_task:[1139,1140,1141,1142],number:[40,41,42,840,845,846,847,849,852,873,874,875,916,917,918,954,955,956,968,979,983,984,992,995,1005,1009,1022,1025,1032,1035,1044,1045,1046,1049,1053,1059,1070,1077,1081,1085,1087,1112,1118,1139,1140,1141,1142,1143,1199,1200,1204,1206,1208,1209,1210,1212,1214,1224,1235,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1286,1289],numer:[43,849,852,855,856,857,860,877,896,902,992,1030,1031,1064,1065,1072,1073,1123,1131,1251],numhead:[1224,1235],numpi:[40,41,43,390,391,392,393,394,396,397,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,992,1080,1112,1117,1118,1206,1207,1243,1285,1286,1289],nwc:[1224,1225,1226,1260,1261,1262],obj:[40,41],object:[40,41,42,59,394,845,846,918,968,972,992,995,999,1089,1187,1190,1192,1193,1194,1197,1198,1199,1205,1251,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1272,1273],object_in:[438,442,992,999],observ:1143,obvious:43,occupi:[845,846,847,992,1062,1063],off:[863,864,992,995],offer:1243,offset:[863,864,1241,1242],often:1286,old:[40,41],on_init:[1260,1271,1272,1273],onc:[43,918,962,1143,1199,1200,1243],one:[40,41,43,863,865,866,867,918,947,948,949,950,962,968,974,992,1035,1047,1054,1062,1063,1071,1074,1112,1115,1143,1206,1207,1208,1209,1210,1211,1212,1213,1214,1243,1286,1289],one_hot:[130,438,568,700,992],onearrai:[992,1022],ones:[40,41,77,208,390,513,644,841,992,1035,1054,1056,1243],ones_lik:[130,294,438,568,700,992],ongo:43,onli:[40,41,43,488,849,860,866,867,918,1112,1117,1143,1187,1188,1189,1195,1276,1277,1278,1279,1280,1281,1285,1286],onlin:[43,1243],onto:[918,947,948,963,1143,1187,1191,1196],oom:[918,1143],open:[992,995,1199,1203,1243,1289],opencv:1286,oper:[40,41,992,1002,1017,1018,1019,1045,1046,1075,1089,1092,1094,1096,1097,1098,1120,1121,1122,1224,1225,1226,1227,1228,1229,1230,1231,1233,1243,1244],operand:[40,41,849,850,852,853,854,859,861,1206,1207],oppos:[992,1025],optim:[918,1089,1092,1094,1096,1097,1098,1139,1140,1141,1142,1143,1243,1277,1278,1279,1281,1285,1289],optimizer_upd:1089,option:[15,18,19,40,41,42,43,390,391,392,393,841,842,843,844,863,865,866,867,873,874,875,916,917,918,927,928,936,940,941,942,943,944,947,948,949,950,957,960,961,962,963,967,968,973,978,982,991,992,994,995,997,998,999,1006,1007,1008,1013,1015,1016,1025,1026,1027,1028,1032,1034,1035,1042,1044,1045,1046,1047,1050,1052,1054,1055,1056,1059,1062,1063,1066,1068,1070,1071,1072,1073,1074,1082,1084,1085,1088,1089,1092,1094,1095,1096,1097,1098,1100,1105,1109,1112,1115,1117,1139,1140,1141,1142,1143,1187,1188,1189,1191,1195,1196,1199,1200,1206,1208,1209,1210,1211,1212,1213,1214,1216,1217,1221,1224,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1286],ord:[863,865,1112,1118],order:[40,41,42,43,863,865,866,867,870,871,1089,1092,1094,1096,1097,1098,1112,1115,1139,1140,1141,1282,1283],ordered_node_util_kei:1143,org:1289,organ:43,origin:[40,41,42,992,1056,1060,1088,1112,1115],other:[40,41,43,877,879,880,885,887,888,892,894,895,896,897,898,900,902,903,904,905,906,907,909,910,911,913,914,915,916,917,992,994,995,1035,1089,1093,1199,1203,1243,1285,1286,1289],other_i:[43,877,896,902],otherwis:[15,16,17,18,19,40,41,849,855,856,863,865,873,874,875,918,935,968,975,976,977,992,1002,1082,1083,1086,1089,1095,1100,1104,1139,1140,1141,1143,1206,1208,1209,1210,1212,1214],our:[43,1243,1289],out:[43,488,845,846,847,849,850,851,852,853,854,855,856,857,858,859,860,861,863,864,865,866,867,870,871,873,874,875,877,896,992,995,1123,1127,1224,1232,1234,1243,1260,1268],out_feat_dim:[1224,1235],out_featur:[1224,1232,1233],out_i:[849,855,856],outdat:1289,outer:[1139,1140,1141,1142],outer_batch_fn:[1139,1140,1141],outer_batch_shap:[1224,1233],outer_cost_fn:[1139,1140,1141],outer_v:[1139,1140,1141],outlin:1286,output:[40,41,43,841,842,843,844,866,867,918,927,928,962,992,995,1004,1026,1035,1059,1077,1089,1093,1123,1128,1143,1199,1201,1202,1203,1224,1226,1228,1230,1232,1234,1235,1236,1243,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271],output_ax:[918,962,1143],output_axi:1143,output_channel:[1260,1261,1262,1263,1264,1265,1266,1269,1270],output_queu:1143,output_shap:[1224,1226,1228,1230,1260,1262,1264,1266],outsid:[992,1005],over:[40,41,863,865,873,874,875,1112,1115,1199,1203,1206,1208,1209,1210,1212,1214,1241,1242,1274,1275],overal:1286,overflow:[992,995],overhead:1286,overrid:[992,1054,1056,1088],overriden:[1276,1280],overwrit:[40,41,918,962,1143],overwrite_at_key_chain:[40,41],own:[1243,1286,1289],packag:[43,1286],pad:[992,1009,1025,1087,1224,1225,1226,1227,1228,1229,1230,1231,1260,1261,1262,1263,1264,1265,1266,1267],pad_width:[438,992,1009,1087],page:1243,pair:[1224,1236],parallel:[918,927,928,1143],parallelis:[918,927,928,1143],param:[40,41,42,438,452,453,841,842,843,844,918,962,992,993,1027,1028,1054,1055,1143,1272,1273,1285],paramet:[15,16,17,18,19,40,41,42,43,841,842,843,844,863,864,877,896,902,916,917,918,927,928,934,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,957,960,961,962,963,964,967,968,972,973,974,978,979,980,981,982,983,984,991,992,994,995,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1011,1012,1013,1014,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1032,1034,1035,1036,1038,1039,1040,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1055,1056,1059,1060,1061,1062,1063,1064,1065,1066,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1091,1092,1093,1094,1095,1096,1097,1098,1100,1102,1103,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285],parameter:[1199,1202,1203],pardo:1243,pars:[992,1010],part:[1089,1092,1094,1096,1097,1098,1123,1127,1243,1272,1273,1286],partial:[40,41,43,1272,1273],particl:1289,particular:[43,1289],pass:[40,41,42,43,918,927,962,968,973,992,1004,1089,1103,1139,1140,1141,1143,1249,1250,1272,1273,1276,1280,1282,1283],pattern:[40,41,992,1017,1018,1019],peopl:43,per:[918,1143,1224,1225,1226,1227,1228,1229,1230,1231,1260,1261,1262,1263,1264,1265,1266,1267],percent_used_mem_on_dev:918,percent_used_mem_on_nod:1143,percentag:[918,957,1143],perf_count:1143,perform:[40,41,43,873,874,875,918,992,997,998,1013,1017,1018,1019,1038,1039,1040,1044,1045,1046,1089,1092,1094,1096,1097,1098,1105,1106,1139,1140,1141,1142,1143,1187,1192,1193,1206,1208,1209,1210,1211,1212,1213,1214,1216,1221,1224,1232,1234],period:43,permissable_step:1143,permit:43,permut:[488,992,1076,1082],perpendicular:[992,1012],person:[43,1243],physci:1289,pickl:[40,41,1143],pickle_filepath:[40,41],pinv:[352,777,1112],pip:1243,pipelin:1285,pkk:1289,pkkm1:1289,pkm1km1:1289,place:[40,41,43,841,842,843,844,918,963,992,1022,1026,1038,1039,1040,1143,1276,1277,1278,1279,1280,1281],placehold:[43,1187,1196],pleas:[43,488,1112,1117],point:[43,840,841,842,843,844,845,846,849,850,852,853,854,859,861,863,865,968,983,992,995,1123,1131],popul:[40,41,1199,1200],popular:1289,population_s:[488,489,1199,1200],portabl:[1243,1244],posit:[15,16,17,845,846,849,855,873,874,875,918,940,944,950,992,993,995,1022,1025,1143,1199,1204,1249,1250],possibi:[40,41],possibl:[43,992,1047,1079,1105,1110,1289],post:[1241,1242],post_shap:[40,41],power:[43,877,902,908,992,1030,1064,1073,1251],practic:1243,pre:[918,1143,1243],pre_shap:[40,41],precis:[845,846,849,861],pred:[1237,1238,1239,1240],predict:[1237,1238,1239,1240,1289],preprint:1243,present:[40,41],preserv:[40,41,42,866,867,1089,1100],preserve_typ:[40,41,472,475,1089,1100],press:1243,prevent:[43,1089,1091,1092,1096,1143,1276,1277,1278],prevet:43,previou:[1089,1092,1096],previous:[992,1004],prime:1243,print:[40,41,42,918,958,992,1057,1243,1285],print_all_arrays_in_memori:992,print_all_arrays_on_dev:918,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1276,1280],prob:[488,489,1199,1200,1224,1232,1260,1268],probabl:[1199,1200,1224,1232,1260,1268],problem:[43,1289],process:[43,918,927,928,957,967,992,1052,1143],process_specif:[918,957,967,1143],prod:[40,41,992,1018],produc:[918,927,928,1143],product:[40,41,992,1012,1013,1048,1206,1207,1224,1235,1236,1260,1271],profil:[123,288,436,561,692,918,1143],progress:43,project:[1243,1285,1286,1289],promot:[43,849,850,851,853,854,859,861,863,865,877,902,1123,1131],prompt:1243,properli:43,properti:[40,41,394,918,930,1143,1272,1273,1276,1277,1278,1279,1281],provid:[40,41,43,866,867,873,874,875,916,917,918,935,968,975,976,977,982,991,992,1016,1054,1056,1063,1088,1089,1092,1094,1096,1097,1098,1104,1143,1243,1260,1269,1276,1277,1278,1279,1280,1281,1286],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1112,1116],pull:[1243,1244],pure:[40,41,1243,1289],purpos:[43,1289],put:1143,pybroadexcept:1143,pyprotectedmemb:1143,pyshadowingbuiltin:43,pyshadowingnam:[919,969,970,971,1090,1143],python:[40,41,918,957,967,992,995,1143,1243],pytorch:[1089,1092,1094,1096,1097,1098,1112,1117,1243,1276,1277,1278,1279,1280,1281,1285,1286,1289],pyunresolvedrefer:1143,quadrant:[1123,1128],qualiti:43,queri:[40,41,877,891,912,918,951,961,1143,1224,1235,1236,1260,1271],query_dim:[1260,1271],query_kei:[40,41],queue:[40,41,42,918,927,928,992,1058,1066,1143],queue_class:[918,927,928,1143],queue_load_s:[40,41,42],queue_timeout:[40,41,42,992,1143],quick:[488,1243],quickli:[43,1285],radian:[849,853,1123,1124,1126,1128,1135,1137],rai:[1123,1124],rais:[40,41,43,873,874,875,877,902,992,1002,1030,1064,1071,1073,1083,1143,1272,1273,1276,1280],ram:[918,957,964,967,1143],randint:[176,362,488,622,803,1199],random:[37,40,41,489,1200,1201,1202,1203,1204,1205,1243],random_crop:1105,random_norm:[176,362,488,622,803,1199],random_uniform:[176,362,488,622,803,1199],randomli:[488,1105,1109,1224,1232,1260,1268],rang:[488,992,995,1045,1046,1123,1128,1143,1243,1285,1289],rank:[863,865,873,874,875,992,1009,1084,1087],rate:[1089,1092,1094,1096,1097,1098,1139,1140,1141,1142,1260,1271,1276,1277,1278,1279,1280,1281],rather:[40,41,43,918,962,992,995,1042,1089,1095,1143],ratio:[918,1089,1096,1105,1110,1143,1276,1278],raw:[40,41,1112,1117],raw_delta:1143,reach:[43,918,940,944,950,1143,1187,1196],read:[40,41],readi:[1143,1285],real:[1123,1124,1127],realiti:1286,rearrang:[40,41,992,1017,1019],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1139,1141],receiv:[43,918,927,928,992,996,1047,1143,1260,1270],receivess:[918,1143],receivng:[1139,1142],recev:[1139,1140,1141],recognit:1289,recommend:[849,860,1243],rectifi:[1216,1218,1219],recurr:[1224,1234],recurrent_bia:[1224,1234],recurrent_kernel:[1224,1234],recurs:[40,41,1187,1188,1189,1195,1196],redefin:43,reduc:[40,41,873,874,875,918,962,992,1018,1112,1117,1143,1206,1208,1209,1210,1211,1212,1213,1214],reduce_max:[40,41,183,367,490,627,810,1206],reduce_mean:[40,41,183,367,490,627,810,1206,1243,1285],reduce_min:[40,41,183,367,490,627,810,1206],reduce_prod:[40,41,183,367,490,627,810,1206],reduce_std:[40,41,367,1206],reduce_sum:[40,41,183,367,490,627,810,1143,1206],reduce_var:[40,41,183,367,490,627,810,1206],reduct:[39,40,41,438,465,466,873,874,875,992,1018,1062,1063,1207,1208,1209,1210,1211,1212,1213,1214,1243],refactor:43,refer:[43,849,858,873,874,875,1089,1091,1092,1112,1119,1260,1270,1289],reflect:43,reflected_oper:[0,13,14],regard:[918,1143],regardless:[40,41,916,917],register_paramet:1285,reimplement:1289,rel:[863,864,866,867,870,871,1089,1092,1094,1096,1097,1098],rel_slice_obj:1143,relat:43,relev:[1276,1277,1278,1279,1280,1281],relu:[819,1216,1217,1218,1243,1285],remain:[43,992,1060,1187,1191],remaind:[40,41,992,1024,1070],remov:[40,41,43,863,864,992,1071,1139,1140,1141],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,866,867],rep:[992,1077],repeat:[40,41,43,294,700,992,1019,1077,1143,1286],repeated_config_check:[918,1143],repeatedli:[1187,1194],repetit:[40,41,992,1059,1077],replac:[40,41,43,488,489,992,1005,1062,1063,1199,1200],repo:[43,1243],repositori:43,repres:[43,849,850,854,968,974,979,1224,1233],represent:[40,41,42,43,840,845,846,847,849,851,918,945,946,968,974,980,981,992,1069,1079,1143],reptil:[1139,1142],reptile_step:1139,request:[1243,1244],requir:[43,849,861,916,917,968,972,992,995,999,1249,1250],resampl:[992,1044],reserv:43,reshap:[40,41,43,488,700,992],reshape_lik:[40,41],respect:[849,851,857,877,896,992,1020,1089,1091,1092,1093,1094,1096,1097,1098,1112,1117,1123,1131,1139,1140,1141,1142],respond:43,respons:[43,1143],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,849,850,851,852,853,854,855,856,857,858,859,860,861,863,864,865,873,874,875,877,896,902,918,927,992,995,1020,1062,1063,1074,1112,1115,1120,1121,1122,1123,1131,1143,1206,1208,1209,1210,1211,1212,1213,1214,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1243],ret:1143,ret_dict:1143,ret_fn:[918,927,928,1143],retain:[1089,1093],retain_grad:[472,473,1089,1093],retreiv:1143,retrn:[992,1069],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1139,1140,1141,1142],return_sequ:[1260,1269],return_st:[1260,1269],rev:[992,1016],revers:[40,41,866,867,992,1016,1082],review:43,right:[40,41,43],rk_e:1289,robot:1243,ronald:1243,root:[43,849,861],round:[294,438,700,849,852,861,992,995,1143],row:[992,1035,1199,1200],rule:[43,877,902,992,995,1123,1131],run:[43,918,927,1089,1091,1092,1096,1139,1140,1141,1142,1143,1243,1244,1260,1271,1272,1273],safe:[918,927,1143],safety_factor:[918,1143],same:[15,16,17,40,41,43,849,852,863,864,866,867,870,871,918,927,928,962,963,968,972,992,993,1008,1023,1024,1027,1028,1054,1056,1061,1062,1063,1074,1088,1089,1095,1100,1112,1118,1123,1127,1139,1140,1141,1143,1206,1207,1224,1225,1226,1227,1228,1229,1230,1231,1243,1260,1261,1262,1263,1264,1265,1266,1267,1285,1289],same_arrai:[40,41],sampl:[992,1044,1105,1106,1199,1200,1202,1203,1224,1232,1243,1260,1268],satisfi:[992,999,1112,1114,1119],save:[40,41,992,1067,1078,1105,1107,1272,1273],save_dir:[436,437,918,933,1143],save_weight:[1272,1273],scalar:[863,865,992,1005,1054,1081,1085],scale:[918,960,961,1089,1097,1143,1224,1232,1235,1236,1241,1242,1260,1268,1271,1276,1279],scaled_dot_product_attent:1224,scatter:[992,1054,1062,1063],scatter_flat:[130,294,438,568,700,992],scatter_nd:[130,294,438,568,700,992],scene:[1089,1092,1094,1096,1097,1098],schemat:1243,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,849,851,857,863,864,918,949,992,1000,1012,1020,1058,1066,1076,1089,1091,1092,1096,1139,1141,1143,1276,1277,1278],secondli:1289,sector:[849,850],see:[43,59,394,436,437,488,849,851,857,863,865,873,874,875,877,896,902,918,930,931,932,933,968,992,995,1045,1046,1089,1123,1131,1243,1251,1253,1254,1256,1257,1259],seed:[40,41,176,488,803,1199],seed_valu:[40,41,488,1199,1204],seem:1243,seen_set:[992,1033],select:[992,999,1071,1286,1289],self:[40,41,43,59,394,436,437,877,896,902,918,930,931,932,933,968,1089,1143,1243,1251,1253,1254,1256,1257,1259,1276,1280,1285,1289],self_i:[877,896],sent:1143,seper:[43,992,1025],seq:[40,41,42,1206,1207,1272,1273],sequenc:[15,16,17,40,41,42,43,488,916,917,918,927,928,937,938,939,940,941,942,943,944,947,948,962,968,972,992,995,999,1001,1003,1008,1009,1035,1047,1050,1055,1059,1060,1063,1070,1074,1077,1082,1087,1089,1093,1105,1109,1110,1112,1115,1143,1187,1198,1199,1201,1203,1206,1208,1209,1210,1211,1212,1213,1214,1224,1225,1226,1227,1228,1229,1230,1231,1241,1242,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267,1269,1272,1273,1274,1275,1276,1280,1282,1283],sequenti:1243,seri:43,set:[15,18,19,40,41,870,871,918,947,948,960,961,962,992,994,1015,1035,1064,1065,1066,1067,1089,1092,1094,1095,1096,1097,1098,1112,1115,1143,1187,1188,1195,1197,1198,1199,1200,1204,1206,1208,1209,1210,1211,1212,1213,1214,1243,1260,1269,1276,1277,1278,1279,1280,1281,1286,1289],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:918,set_default_dtyp:968,set_default_float_dtyp:968,set_default_int_dtyp:968,set_default_nod:1143,set_exception_debug_mod:44,set_framework:[40,41,43,59,1143,1243,1285,1286,1289],set_ivy_backend:[40,41],set_min_bas:992,set_min_denomin:992,set_nest_at_index:1187,set_nest_at_indic:1187,set_queue_timeout:992,set_split_factor:[918,1143],set_stat:[1276,1277,1278,1279,1280,1281],set_tmp_dir:992,set_with_grad:1089,setter:1143,sever:1289,sgd:[1243,1276],shape0:1143,shape:[40,41,43,390,391,392,393,438,451,466,488,700,841,842,843,844,863,864,866,867,870,871,918,930,968,972,992,993,1003,1008,1009,1022,1023,1024,1026,1028,1032,1035,1054,1055,1056,1059,1060,1061,1062,1063,1069,1071,1074,1087,1088,1105,1109,1112,1114,1117,1123,1127,1128,1143,1199,1201,1202,1203,1206,1207,1224,1226,1228,1230,1260,1262,1263,1264,1265,1266,1267,1274,1275],shape_slic:[40,41],shape_to_tupl:992,share:[40,41,1243,1286],shift:1143,should:[40,41,42,43,488,849,850,851,852,853,854,855,856,857,859,860,861,863,864,865,877,896,902,916,917,918,992,1003,1004,1010,1054,1060,1089,1092,1094,1096,1097,1098,1123,1131,1143,1206,1207,1243],show:[40,41,1243,1289],show_mod_in_top_mod:[1272,1273],show_structur:[1272,1273],show_sub_contain:[40,41],show_v:[1272,1273],show_v_in_top_v:[1272,1273],shown:[40,41],shp:1143,shuffl:[40,41,176,488,803,1199],shuffle_h5_fil:[40,41],side:43,sigmoid:[819,1216,1243,1285],signatur:[43,59,394,436,437,438,472,477,481,485,486,488,918,930,931,932,933,968,1089,1251,1253,1254,1256,1257,1259],signific:1289,similar:[43,1224,1235,1260,1271],similarli:[1112,1117],simpl:[43,992,1021,1243,1286,1289],simpler:43,simplest:1286,simpli:[40,41,43,1243,1286,1289],simultan:1243,sin:[788,992,1025,1123,1137,1286],sinco:1286,sine:[849,850,1123,1126,1135,1136],singl:[40,41,916,917,918,927,928,947,948,949,950,992,1071,1081,1085,1105,1110,1143,1199,1202,1203,1206,1208,1209,1210,1211,1212,1213,1214,1243,1286,1289],singleton:[863,865,873,874,875],singular:[1112,1118],sinh:[788,1123],siren:[1243,1251],situat:43,size:[40,41,42,438,465,863,864,873,874,875,918,941,942,943,944,960,961,962,992,995,1003,1045,1046,1062,1070,1105,1109,1112,1115,1118,1143,1199,1200,1202,1203,1206,1208,1209,1210,1211,1212,1213,1214,1260,1261,1262],size_ordered_arrai:[40,41],skew:[1112,1119],skinv:1289,skip:[40,41],slice:[40,41,992,1027,1028,1143,1187,1194],slice_kei:[40,41],slice_obj:[40,41,1143],slice_via_kei:[40,41],slide:[1224,1225,1226,1227,1228,1229,1230,1231,1260,1261,1262,1263,1264,1265,1266,1267],slope:[1216,1218],small:[1237,1238,1239,1240,1241,1242,1243,1274,1275,1286],smaller:[992,1005],smallest:[40,41,845,846,847,849,852,992,998],smallest_norm:[394,845,846],softmax:[192,499,819,1216,1224,1235,1236],softplu:[819,1216],solut:43,solv:1289,some:[40,41,43,992,995,1089,1091,1092,1094,1096,1097,1098,1103,1224,1232,1243,1260,1268,1286,1289],some_backend:43,some_namespac:43,someth:[43,1289],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,871,1112,1118,1143],sort_by_kei:[40,41],sorting_funct:[870,871],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,390,391,392,393,394,396,397,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,486,487,488,489,841,842,843,844,845,846,847,849,850,851,852,853,854,855,856,857,858,859,860,861,863,864,865,866,867,870,871,873,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,920,921,922,923,924,925,927,928,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1246,1247,1248,1249,1250,1251,1253,1254,1256,1257,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1287,1288,1289],space:[992,995,1025,1045,1046],spars:[1237,1240],sparse_cross_entropi:1237,spawn:[992,1052],special:[43,849,850,852,853,854,859,861],specif:[40,41,43,849,860,918,960,992,1010,1017,1018,1019,1052,1139,1140,1141,1142,1143,1199,1205,1243,1272,1273,1285,1286],specifc:[1199,1200],specifi:[40,41,43,841,842,863,864,865,866,867,870,871,873,874,875,918,937,938,939,940,941,942,943,944,947,948,952,954,958,961,962,963,968,972,974,992,995,997,998,999,1005,1008,1009,1026,1027,1028,1034,1045,1046,1074,1084,1087,1112,1115,1143,1187,1192,1193,1197,1198,1206,1207,1208,1209,1210,1211,1212,1213,1214],sphinx:43,split:[40,41,130,294,438,568,700,918,927,941,942,943,944,960,961,962,992,1047,1143],split_arg:1143,split_factor:[918,927,1143],split_func_cal:[918,1143],split_siz:1143,spread:[918,950,1143],sqrt:[86,217,399,523,654,849,863,865],squar:[849,861,992,1035,1112,1114],squeez:[130,294,438,568,700,992],stabil:[870,871,992,1072,1073],stabl:[870,871,992,1030,1031,1064,1065,1072,1073],stable_divid:992,stable_pow:992,stack:[40,41,294,700,863,864,992,1105,1110,1187,1188,1195,1260,1269],stack_imag:[166,348,477,611,773,1105],stacked_dim_s:1143,stage:43,standard:[40,41,845,846,1199,1202,1206,1212,1241,1242,1243,1244,1274,1275],start:[40,41,43,436,437,438,439,461,462,488,918,933,992,995,1045,1046,1143,1243,1286],starting_index:[40,41],starting_split_factor:[918,1143],state:[1143,1224,1234,1243,1246,1247,1248,1249,1250,1251,1253,1254,1256,1257,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285],statement:1286,static_argnam:[438,444,916,917],static_argnum:[438,444,916,917],std:[488,1199,1202],step:[40,41,438,439,918,992,995,1045,1046,1089,1091,1092,1094,1096,1097,1098,1139,1140,1141,1142,1143,1243,1276,1277,1278,1279,1280,1281,1285,1289],stephen:1243,stick:1243,still:[40,41,43],stochast:[1276,1281],stop:[40,41,436,437,438,439,461,462,918,933,962,992,995,1045,1046,1089,1092,1094,1096,1097,1098,1100,1139,1140,1141,1142,1143,1276,1277,1278,1279,1280,1281],stop_gradi:[40,41,343,472,606,767,918,962,1089,1092,1094,1096,1097,1098,1139,1140,1141,1142,1143,1276,1277,1278,1279,1280,1281],stopiter:1143,store:[40,41,992,1025,1070,1089,1103,1272,1273],store_var:[1272,1273],str:[15,16,17,40,41,42,43,390,391,392,393,394,396,397,845,846,847,916,917,918,927,928,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,962,968,973,974,979,980,981,982,983,984,991,992,999,1015,1017,1018,1019,1050,1052,1055,1062,1063,1112,1115,1117,1139,1140,1141,1142,1143,1187,1191,1206,1207,1249,1250,1260,1271,1272,1273],str_to_nod:1143,straight:1286,strength:[1243,1289],stride:[1224,1225,1226,1227,1228,1229,1230,1231,1260,1261,1262,1263,1264,1265,1266,1267],string:[40,41,43,918,934,936,945,946,951,957,963,964,967,968,972,978,980,981,982,991,992,995,999,1015,1035,1055,1056,1088,1143,1224,1225,1226,1227,1228,1229,1230,1231,1260,1261,1262,1263,1264,1265,1266,1267,1272,1273],structur:[40,41,42,43,992,1010],structural_diff:[40,41],style:43,sub:[40,41,43,863,864,918,941,942,947,948,949,950,992,1070,1139,1140,1141,1142,1143],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1143,sub_mod:[1272,1273],sub_modul:[1282,1283],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1243,1244,1274,1275,1282,1283],subsequ:43,subset:43,substr:[40,41],suffici:[1112,1117],suggest:1243,suitabl:[1105,1110],sum:[40,41,438,465,466,863,865,918,947,948,949,950,962,992,1014,1018,1062,1063,1143,1206,1207,1213],summat:[40,41,1206,1207],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,108,111,112,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,230,234,237,238,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,349,350,351,353,354,355,356,357,359,360,363,364,365,366,368,369,370,371,372,373,374,375,378,380,381,382,383,384,385,386,391,392,393,395,396,397,400,401,402,403,404,405,406,407,408,409,410,411,414,415,417,421,424,425,437,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,473,474,475,476,478,479,480,482,483,484,487,489,491,492,493,494,495,496,497,500,501,503,504,505,506,507,508,509,514,515,516,517,519,520,521,524,525,526,527,528,529,530,531,532,533,534,535,538,539,541,545,548,549,557,562,563,564,565,566,567,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,607,608,609,610,612,613,614,616,617,618,619,623,624,625,626,628,629,630,631,632,633,634,638,639,640,645,646,647,648,650,651,652,655,656,657,658,659,660,661,662,663,664,665,666,669,670,672,676,679,680,688,693,694,695,696,697,698,699,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,768,769,770,771,772,774,775,776,778,779,780,781,782,783,784,786,787,789,790,791,792,793,794,795,796,797,798,799,800,801,802,804,805,806,807,808,809,811,812,813,814,815,816,817,820,821,822,823,824,825,826,828,829,831,832,833,834,835,836,837,842,843,844,846,847,849,850,851,852,853,854,855,856,857,858,859,860,861,863,864,865,867,871,874,875,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,917,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1242,1243,1247,1248,1250,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1288,1289],supports_inplac:992,suppos:1289,sure:43,svd:[352,615,777,1112],swap:[40,41,992,1076],swapax:[40,41,568,700,992,1289],symmetr:[1112,1119],syntax:[436,438,472,477,481,485,486,488],tab:1243,take:[43,992,1044],taken:[43,863,864,1206,1208,1209,1210,1212,1214],tan:[788,1123,1127],tangent:[1123,1127,1128,1129,1137,1138,1216,1223],tanh:[788,819,1123,1216],target:[40,41,918,934,937,938,939,940,941,942,943,944,947,948,949,950,963,1143,1243],target_dict:[40,41],task:[43,1139,1140,1141,1142],team:[43,1289],templat:1243,temporari:[992,1067,1078],tensor:[40,41,43,438,465,466,918,936,968,978,992,995,997,998,1003,1045,1046,1049,1051,1054,1055,1056,1060,1062,1063,1070,1088,1143,1199,1200,1201,1224,1232,1234,1243,1260,1268,1270,1276,1277,1278,1279,1280,1281,1285,1286],tensorflow:[43,1112,1117,1224,1226,1228,1230,1243,1260,1262,1264,1266,1286,1289],term:[40,41,43,1224,1234,1243,1260,1270],termcolor:[40,41,42],termin:[40,41,42,1143],test:[43,849,855,856,873,874,875,968,983,984],test_array_api:43,tf_concat:1243,than:[40,41,43,845,846,849,852,859,861,863,865,866,867,918,962,992,995,1005,1023,1042,1049,1071,1074,1089,1095,1143,1199,1203,1243,1286],thei:[40,41,43,1123,1128,1139,1140,1141,1199,1200,1243,1282,1283,1286],them:[1243,1289],themselv:[1187,1188],therefor:43,thi:[40,41,42,43,849,860,918,940,944,950,957,962,967,992,995,1025,1058,1060,1066,1089,1092,1094,1095,1096,1097,1098,1103,1112,1115,1143,1187,1191,1196,1206,1208,1209,1210,1211,1212,1213,1214,1224,1233,1243,1272,1273,1276,1277,1278,1279,1280,1281,1285,1286,1289],thing:[43,1243],those:[40,41,43,992,1005,1089,1103,1112,1118,1143],though:43,thought:43,threshold:[992,1049,1051],through:[40,41,43],tick:43,tickbox:43,tile:[294,568,700,992],time:[43,992,1077,1089,1092,1096,1139,1140,1141,1142,1143,1199,1200,1224,1234,1260,1271,1272,1273,1289],timeout:[40,41,42,918,927,928,992,1058,1066,1143],timestep:[1224,1234,1260,1269],titl:[43,1243],tmp_dir:992,tmp_dr:[992,1067],to_appli:[40,41],to_clon:[918,1143],to_dev:[40,41,123,288,436,561,692,918],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[918,1143],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1243],to_ivy_modul:[194,827,1243,1249],to_json:[40,41],to_kv_fn:[1224,1235],to_kv_v:[1224,1235],to_list:[40,41,438,700,992],to_multi_dev:[40,41],to_mut:[1187,1189,1196],to_n:[15,40,41,1243],to_nod:1143,to_numpi:[40,41,438,700,992,1243,1285],to_out_fn:[1224,1235],to_out_v:[1224,1235],to_q_fn:[1224,1235],to_q_v:[1224,1235],to_raw:[40,41],to_scalar:[438,700,992],todo:[1143,1243,1244],togeth:[40,41,1282,1283],tool:[1243,1286],top_mod:[1272,1273],topic:1289,torch:[43,916,917,1243,1285,1286,1289],torch_concat:1243,torchfcmodel:1285,total:[40,41,42,918,964,1143],total_mem_on_dev:918,total_mem_on_nod:1143,tpu:[918,965,1143],tpu_is_avail:[436,561,692,918,1143],tpye:[968,979],trace:[40,41,992,1042],track:[43,918,1143,1187,1196,1272,1273],track_submod_call_ord:[1272,1273],track_submod_ret:[1272,1273],trail:[1274,1275],train:[1089,1091,1092,1096,1243,1244],trainabl:[1089,1095,1243,1244,1249,1250,1272,1273,1282],trainer:1243,tran:1289,transform:[1224,1232,1233],transpos:[40,41,130,294,438,700,918,949,992,1143,1224,1226,1228,1230,1260,1262,1264,1266],travers:[15,18,19,40,41,1187,1196],treat:[40,41,916,917],tri:[40,41],trigonometr:[1123,1124,1127,1135],tril:[513,644],trim_kei:[40,41],trust:[1089,1096,1276,1278],truth:[849,857,877,896,992,1020,1120,1121,1122],try_else_non:992,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[918,1143],tune_dev_alloc:918,tune_dev_split:918,tune_node_alloc:1143,tune_node_split:1143,tune_step:[918,1143],tupl:[15,16,17,18,19,40,41,43,390,391,392,393,841,842,843,844,863,865,866,867,873,874,875,916,917,992,1009,1025,1026,1069,1087,1143,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1201,1206,1208,1209,1210,1211,1212,1213,1214],tutori:43,two:[40,41,863,864,992,995,1000,1012,1048,1076,1112,1115,1118],type:[15,18,40,41,42,43,59,396,397,436,437,841,842,843,844,846,847,849,850,851,852,853,854,855,856,857,859,860,861,863,864,865,866,867,870,871,873,874,875,877,896,902,918,930,931,932,933,945,946,950,962,968,972,973,974,978,979,980,981,982,983,984,991,992,993,995,999,1008,1010,1020,1023,1024,1026,1035,1042,1054,1055,1056,1061,1075,1085,1088,1089,1095,1100,1123,1131,1143,1243,1251,1253,1254,1256,1257,1259,1272,1273,1286],types_to_iteratively_nest:[40,41,42],uint8:[1105,1107,1111],uint8_img_to_float_img:1105,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[849,851],underwai:43,unecessari:43,unfairli:43,unif:1143,unifi:[40,41,918,947,948,949,950,962,1143,1243],uniform:[40,41,1199,1200,1202,1203,1251,1253,1254,1257,1258],uniformli:[1199,1201,1203],unify_arrai:1143,unify_it:1143,unify_nest:1143,uniniti:[841,842],union:[15,18,19,40,41,43,390,391,392,393,394,396,397,841,842,843,844,845,846,847,849,850,851,852,853,854,855,856,857,858,859,860,861,863,865,866,867,870,871,873,874,875,877,896,902,916,917,918,936,941,942,943,944,962,963,968,972,973,974,978,979,980,981,982,983,984,991,992,993,994,995,997,998,999,1000,1001,1003,1005,1006,1007,1008,1009,1011,1012,1013,1014,1017,1018,1019,1020,1022,1023,1024,1025,1026,1027,1028,1032,1034,1035,1036,1043,1044,1045,1046,1048,1049,1050,1051,1054,1055,1056,1059,1060,1061,1062,1063,1068,1069,1070,1071,1074,1076,1077,1079,1080,1081,1082,1084,1085,1086,1087,1088,1143,1187,1188,1189,1195,1196],uniqu:[918,927,928,1139,1140,1141,1142,1143,1187,1191],unique_kwarg:1143,unit:[43,918,1123,1124,1126,1143,1216,1217,1218,1219],unitari:[1112,1118],unless:[992,1054,1056,1088],unlik:[918,1143],unnorm:[1199,1200],unpack:[992,1084],unrol:[1224,1234],unset:1286,unset_debug_mod:44,unset_default_devic:918,unset_default_dtyp:968,unset_default_float_dtyp:968,unset_default_int_dtyp:968,unset_framework:[59,1286],unset_with_grad:1089,unstack:[40,41,130,294,438,568,700,992],until:43,unus:[916,917],updat:[40,41,438,465,466,918,927,992,1040,1062,1063,1089,1091,1092,1094,1096,1097,1098,1139,1140,1141,1143,1187,1192,1193,1197,1198,1224,1234,1243,1244,1249,1250,1276,1277,1278,1279,1280,1281,1286,1289],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1199,1203],upper_depth:[1272,1273],upstream:43,usabl:[1243,1289],usag:[918,962,1143],use:[40,41,42,43,488,918,927,928,953,965,992,1059,1072,1073,1112,1117,1143,1224,1235,1241,1242,1243,1274,1275,1286,1289],used:[40,41,43,488,863,864,918,927,957,960,961,967,968,979,992,1030,1031,1047,1056,1062,1063,1064,1065,1088,1089,1096,1097,1112,1115,1139,1140,1141,1142,1143,1187,1196,1260,1271,1276,1278,1279,1285,1286],used_dev:[918,927],used_mem_on_dev:918,used_mem_on_nod:1143,used_node_str:1143,used_node_strs_dict:1143,useful:[40,41,918,962,1143,1224,1233,1243,1286],user:[1243,1260,1271,1272,1273,1286,1289],uses:1243,using:[40,41,43,1089,1091,1092,1187,1190,1194,1206,1207,1224,1232,1236,1243,1260,1268,1285,1286,1289],util:[918,951,1143],utility_funct:[873,874,875],v_with_top_v_key_chain:[1272,1273],val:[40,41,438,456,457,458,877,912,992,1038,1039,1040,1064,1065],valid:[873,874,875,968,973,992,1072,1073,1224,1225,1226,1227,1228,1229,1230,1231,1260,1261,1262,1263,1264,1265,1266,1267],valid_dtyp:968,valu:[40,41,438,849,852,857,863,865,870,871,877,896,918,930,961,962,992,993,995,997,998,1005,1006,1007,1009,1010,1016,1020,1025,1026,1027,1028,1043,1045,1046,1049,1051,1058,1059,1060,1061,1062,1063,1064,1065,1066,1082,1085,1086,1087,1089,1093,1096,1105,1111,1112,1118,1120,1121,1122,1123,1132,1133,1134,1139,1140,1141,1143,1187,1191,1192,1193,1197,1198,1199,1202,1203,1206,1208,1210,1224,1235,1236,1241,1242,1260,1271,1274,1275,1276,1278],value_is_nan:992,vanilla:[1139,1141],var_shap:1251,variabl:[15,16,17,18,19,40,41,343,472,606,767,992,1002,1038,1039,1040,1041,1042,1075,1089,1092,1093,1094,1095,1096,1097,1098,1100,1103,1139,1140,1141,1142,1224,1235,1241,1242,1249,1250,1251,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283],variable_data:[472,767,1089],varianc:[40,41,1206,1214,1289],varieti:1286,variou:[43,1243],vector:[40,41,481,484,863,865,992,1007,1012,1112,1118,1119,1224,1233,1260,1270],vector_norm:[40,41,100,226,413,537,668,863],vector_to_skew_symmetric_matrix:[170,352,481,615,777,1112],verbos:1288,veri:[43,1243],verifi:43,version:43,via:[1187,1188,1195,1286],view:[1105,1110],vision:1243,visual:1286,volum:[1224,1229],vw_tm1:[1089,1092,1096],wai:[1286,1289],wait:[40,41,42,43],want:[43,1243,1286,1289],warn:[59,66,67,68,69,70],warp:[477,478,1105,1106],watch:1285,websit:43,weight:[1089,1091,1092,1094,1096,1097,1098,1224,1233,1234,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1272,1273,1276,1278,1279],weight_initi:[1260,1261,1262,1263,1264,1265,1266,1267,1269,1270],weights_path:[1272,1273],well:[40,41,992,1034],were:[40,41,1143],what:[43,1243],when:[40,41,42,43,918,992,1004,1073,1086,1112,1118,1143,1243,1272,1273,1286,1289],where:[40,41,43,294,438,700,849,858,873,874,875,877,902,992,995,1003,1005,1009,1022,1036,1043,1054,1087,1112,1118,1187,1188,1195,1199,1200],wherea:43,wherebi:[1187,1196],whether:[15,18,19,40,41,42,849,856,873,874,875,916,917,918,936,949,953,957,962,965,967,968,978,982,983,984,991,992,994,1000,1001,1013,1016,1021,1025,1032,1034,1037,1041,1042,1047,1068,1075,1084,1085,1089,1092,1093,1094,1095,1096,1097,1098,1100,1139,1140,1141,1142,1143,1187,1188,1189,1191,1195,1196,1199,1200,1216,1217,1224,1232,1243,1249,1250,1260,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281],which:[40,41,42,43,488,841,842,843,844,845,846,847,863,864,865,866,867,870,871,873,874,875,916,917,918,927,928,936,941,942,943,944,947,948,949,950,952,954,958,960,961,962,968,973,978,982,991,992,995,999,1008,1010,1012,1013,1014,1016,1026,1027,1028,1029,1035,1036,1044,1045,1046,1053,1054,1055,1056,1057,1059,1062,1063,1070,1074,1084,1086,1088,1089,1092,1093,1094,1096,1097,1098,1100,1102,1103,1105,1107,1112,1115,1123,1128,1143,1187,1191,1192,1193,1197,1198,1199,1200,1201,1202,1203,1206,1208,1209,1210,1211,1212,1213,1214,1216,1221,1224,1235,1236,1243,1249,1250,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1282,1283,1285,1286],whilst:43,whitespac:[40,41,42],who:43,whose:[43,849,850,853,854,863,864,866,867,877,902,992,999,1004,1206,1207,1208,1209,1210,1212,1214],why:[1243,1244],width:[1105,1110],wiki:1289,wikipedia:1289,window:[1105,1110,1224,1225,1226,1227,1228,1229,1230,1231,1260,1261,1262,1263,1264,1265,1266,1267],wise:[40,41,43,849,851,857,860,877,896,902,992,1005,1020,1023,1024,1049,1051,1061,1089,1092,1094,1096,1098,1120,1121,1122,1123,1124,1126,1127,1128,1131,1132,1133,1134,1135,1137,1216,1217,1218,1219,1220,1221,1222,1223],wish:1286,with_bia:[1260,1270],with_cal:[992,1016],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1089,1099],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1143,with_partial_v:[1272,1273],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,438,467,992,1070,1143],with_to_kv_fn:[1260,1271],with_to_out_fn:[1260,1271],with_to_q_fn:[1260,1271],within:[15,18,19,43,992,995,1112,1118,1199,1203],without:[40,41,43,992,1058,1060,1066,1187,1189,1286],wonder:1243,word:[15,16,17,992,995,1199,1203,1249,1250],work:[43,1285],worker:[918,927,928,1143],worker_class:[918,927,928,1143],worker_kwarg:1143,would:[43,1216,1221,1243,1286,1289],wrap:[15,40,41,42,43,436,438,472,477,481,485,486,488,992,1004,1089,1103,1243],wrapper:43,write:[40,41,43,1243,1244,1289],written:[43,1243,1289],ws_new:[1089,1092,1094,1096,1097,1098],x1_i:[849,851,857,992,1020,1123,1131],x2_i:[849,851,857,992,1020,1123,1131],x_feat_dim:[1224,1235],x_i:[849,850,852,853,854,855,856,859,860,861],x_in:[1243,1285],x_inv:[1112,1114],x_max:[438,992,1005],x_min:[438,992,1005],x_sub:1143,xkk:1289,xkkm1:1289,xkm1km1:1289,xs0:1143,xs_t:1143,year:[1243,1289],yet:[1187,1196,1289],yield:[992,1086],you:[43,1243,1285,1286,1289],your:[1243,1244,1285,1286,1289],your_awesome_project:1286,yourself:[43,1243],yourslef:43,youtub:43,zero:[40,41,77,208,390,513,644,841,842,849,860,863,865,873,874,875,992,1009,1054,1056,1062,1063,1087,1088,1089,1091,1092,1096,1097,1224,1232,1243,1251,1260,1261,1262,1263,1264,1265,1266,1267,1268,1270,1276,1277,1278,1279],zero_pad:[294,438,568,700,992],zeros_lik:[130,294,438,568,700,992],zip:1143,zk_e:1289},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1016,"function":[77,81,86,99,103,105,106,107,109,110,208,212,217,225,229,231,232,233,235,236,390,394,399,412,416,418,419,420,422,423,513,518,523,536,540,542,543,544,546,547,644,649,654,667,671,673,674,675,677,678,841,845,849,862,866,868,869,870,872,873],Ones:1256,Using:1286,abs:[295,569,701,993],aco:[789,1124],acosh:[790,1125],activ:[192,377,499,636,819,1216,1246],adam:1277,adam_step:1091,adam_upd:1092,algebra:[100,170,226,352,413,481,537,615,668,777,863],all:[111,237,424,548,679,874],all_equ:994,all_nested_indic:1188,ani:[112,238,425,549,680,875],api:[0,43,75,114,206,240,388,427,511,551,642,682,839],arang:[131,296,439,570,702,995],arg_nam:996,argmax:[132,440,571,703,997],argmin:[133,441,572,704,998],args_to_ivi:16,args_to_n:17,argsort:[108,234,421,545,676,871],arithmet:[1,115,241,428,552,683],arrai:[0,3,43,75,113,114,116,134,206,239,240,242,249,297,388,426,427,429,442,511,550,551,553,573,642,681,682,684,705,839,877,999],array_equ:[298,706,1000],arrays_equ:1001,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[791,1126],asinh:[87,400,524,655,850],assert_supports_inplac:1002,atan2:[793,1128],atan:[792,1127],atanh:[794,1129],attribut:[5,117,243,430,554,685],backend:[43,73],bilinear_resampl:[167,349,478,612,774,1106],binary_cross_entropi:1238,bitwis:[7,118,244,431,555,686],bitwise_and:[88,218,401,525,656,851],broadcast_to:[299,707,1003],builder:51,builtin:[113,239,249,426,550,681,877],builtin_ab:[250,878],builtin_add:[251,879],builtin_and:[252,880],builtin_bool:[253,881],builtin_contain:[254,882],builtin_deepcopi:[255,883],builtin_dir:[256,884],builtin_eq:[257,885],builtin_float:[258,886],builtin_floordiv:[259,887],builtin_g:[260,888],builtin_getattr:[261,889],builtin_getattribut:[262,890],builtin_getitem:[263,891],builtin_gt:[264,892],builtin_int:[265,893],builtin_invert:[266,894],builtin_l:[267,895],builtin_lt:[268,557,688,896],builtin_mul:[269,897],builtin_n:[270,898],builtin_neg:[271,899],builtin_or:[272,900],builtin_po:[273,901],builtin_pow:[274,902],builtin_radd:[275,903],builtin_rand:[276,904],builtin_rfloordiv:[277,905],builtin_rmul:[278,906],builtin_ror:[279,907],builtin_rpow:[280,908],builtin_rsub:[281,909],builtin_rtruediv:[282,910],builtin_rxor:[283,911],builtin_setitem:[284,912],builtin_sub:[285,913],builtin_truediv:[286,914],builtin_xor:[287,915],cache_fn:1004,cast:[135,300,443,574,708,972],ceil:[89,219,402,526,657,852],choleski:[778,1113],choose_random_framework:61,citat:1243,clear_framework_stack:62,clear_mem_on_dev:[694,934],clip:[301,709,1005],clip_matrix_norm:1006,clip_vector_norm:1007,clone:1158,clone_arrai:1159,clone_it:1160,clone_nest:1161,clonedit:1145,cloneditem:1144,clonednest:1146,closest_valid_dtyp:973,code:1289,comparison:[9,119,245,432,556,687],compil:[302,444,710,916,917],concaten:[136,303,445,575,711,1008],constant:[76,207,389,512,643,840],constant_pad:[304,576,712,1009],contain:[40,41],container_typ:[713,1010],content:1243,contribut:43,conv1d:[198,380,503,831,1225,1261],conv1d_transpos:[199,381,504,832,1226],conv1dtranspos:1262,conv2d:[200,382,505,638,833,1227,1263],conv2d_transpos:[201,383,506,834,1228],conv2dtranspos:1264,conv3d:[202,384,507,639,835,1229,1265],conv3d_transpos:[203,385,508,836,1230],conv3dtranspos:1266,convers:15,convert:[194,827,1249],convert_dtyp:974,copy_arrai:[714,1011],copy_nest:1189,core:[122,248,435,560,691,876],cos:[90,403,527,658,853],cosh:[91,404,528,659,795,854,1130],cprint:1288,creat:43,creation:[77,208,390,513,644,841],cross:[305,715,1012],cross_entropi:1239,cumprod:[137,306,446,716,1013],cumsum:[717,1014],current_framework:63,current_framework_str:[718,1015],data:[81,85,212,216,394,398,518,522,649,653,845,848],debug_mod:45,debugg:44,default_devic:935,default_dtyp:975,default_float_dtyp:976,default_int_dtyp:977,default_nod:1162,depthwise_conv2d:[204,386,509,640,837,1231],depthwiseconv2d:1267,design:43,dev:[125,290,563,695,936],dev_clon:937,dev_clone_arrai:938,dev_clone_it:939,dev_clone_nest:940,dev_dist:941,dev_dist_arrai:942,dev_dist_it:943,dev_dist_nest:944,dev_from_str:[126,291,564,696,945],dev_to_str:[127,292,565,697,946],dev_unifi:947,dev_unify_arrai:948,dev_unify_it:949,dev_unify_nest:950,dev_util:951,devclonedit:921,devcloneditem:920,devclonednest:922,devdistit:924,devdistitem:923,devdistnest:925,devic:[20,123,288,436,561,692,918],devmapp:927,devmappermultiproc:928,diagon:[101,227,414,538,669,864],distribute_nest:1163,divid:1131,document:1243,dropout:[1232,1268],dtype:[138,307,447,577,719,968,978],dtype_bit:[139,308,448,578,720,979],dtype_from_str:[140,309,449,579,721,980],dtype_to_str:[141,310,450,580,722,981],ecosystem:52,einops_rearrang:1017,einops_reduc:1018,einops_repeat:1019,einsum:[184,368,491,628,811,1207],elementwis:[86,217,399,523,654,849],empti:[78,209,391,514,645,842],equal:[581,723,1020],erf:[487,796,1132],execute_with_gradi:[164,344,473,607,768,1093],exist:1021,exp:[797,1133],expand_dim:[311,724,1022],finfo:[83,214,396,520,651,846],firstlayersiren:1253,flip:[104,230,417,541,672,867],float_img_to_uint8_img:1107,floor:[312,725,1023],floormod:[313,726,1024],fomaml_step:1140,fork:43,fourier_encod:1025,framework:59,full:[142,314,451,582,727,1026],func:72,gather:[143,315,452,583,728,1027],gather_nd:[144,316,453,584,729,1028],geglu:1247,gelu:[378,500,820,1217,1248],gener:[22,130,294,438,568,700,992],get_all_arrays_in_memori:1029,get_all_arrays_on_dev:952,get_framework:64,get_min_bas:1030,get_min_denomin:1031,get_num_dim:[730,1032],get_referrers_recurs:1033,glorotuniform:1254,gpu_is_avail:[953,1164],gradient:[24,163,343,472,606,767,1089],gradient_descent_upd:1094,gradient_imag:[168,350,479,613,775,1108],gym:53,handler:59,has_nan:1034,ident:[145,317,454,585,731,1035],iinfo:[84,215,397,521,652,847],imag:[26,166,348,477,611,773,1105],index_nest:1190,indices_wher:[146,318,455,732,1036],initi:1251,inplac:[11,120,246,433,558,689],inplace_arrays_support:1037,inplace_decr:[147,319,456,586,733,1038],inplace_incr:[148,320,457,587,734,1039],inplace_upd:[149,321,458,588,735,1040],inplace_variables_support:1041,inv:[779,1114],invalid_dtyp:982,is_arrai:[150,322,459,589,736,1042],is_float_dtyp:983,is_int_dtyp:984,is_vari:[165,345,474,608,769,1095],isfinit:[92,220,405,529,660,855],isinf:[323,590,737,1043],isnan:[93,221,406,530,661,856],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,838,1285,1286,1289],ivymodul:[195,828],jax:74,keep:43,lamb:1278,lamb_upd:1096,lar:1279,lars_upd:1097,layer:[197,379,502,637,830,1224,1260],layer_norm:1242,layernorm:1275,leaky_relu:[821,1218],less:[94,222,407,531,662,857],linalg:[28,1112],linear:[100,170,226,352,413,481,537,615,668,777,863,1233,1270],linear_resampl:[151,324,460,591,738,1044],linspac:[152,325,461,592,739,1045],list:43,log1p:[95,408,532,663,858],log2:[96,409,533,664,859],log:[798,1134],logic:[30,174,358,485,620,785,1120],logical_and:[359,786,1121],logical_not:[97,223,410,534,665,860],logical_or:[360,787,1122],logspac:[153,326,462,593,740,1046],loss:1237,lstm:1269,lstm_updat:1234,maml_step:1141,manipul:[103,229,416,540,671,866],map:1191,map_nest_at_index:1192,map_nest_at_indic:1193,match_kwarg:1047,math:[32,175,361,486,621,788,1123],matmul:[327,594,741,1048],matrix_norm:[171,353,482,616,780,1115],maximum:[742,1049],mech:54,memori:55,meshgrid:[328,743,1050],meta:[34,1139],method:[99,225,412,536,667,862],minimum:[744,1051],model:56,modul:[1272,1273,1285],multi:1143,multi_head_attent:1235,multi_index_nest:1194,multidevcontain:42,multidevit:931,multidevitem:930,multidevnest:932,multiheadattent:1271,multinodeit:1149,multinodeitem:1148,multinodenest:1150,multinomi:[177,363,489,623,804,1200],multiprocess:[745,1052],mxnet:205,nativ:1285,nest:1187,nested_indices_wher:1195,nested_map:1196,network:1285,next:1243,node:[1143,1165],node_dist:1166,node_dist_arrai:1167,node_dist_it:1168,node_str:1169,node_to_str:1170,node_util:1171,nodedistit:1152,nodedistitem:1151,nodedistnest:1153,nodemapp:1155,nodemappermultiproc:1156,norm:[1241,1274],num_arrays_in_memori:1053,num_arrays_on_dev:954,num_cpu_cor:955,num_gpu:[128,956,1172],numpi:387,nutshel:1243,one_hot:[154,463,595,746,1054],ones:[79,210,392,515,646,843,1055],ones_lik:[155,329,464,596,747,1056],oper:[1,3,7,9,11,13,43,115,116,118,119,120,121,241,242,244,245,246,247,428,429,431,432,433,434,552,553,555,556,558,559,683,684,686,687,689,690],optim:[1276,1280],optimizer_upd:1098,overview:1243,percent_used_mem_on_dev:957,percent_used_mem_on_nod:1173,pinv:[354,781,1116],portabl:1289,print_all_arrays_in_memori:1057,print_all_arrays_on_dev:958,profil:[124,289,437,562,693,933,1157],pull:43,queue_timeout:1058,randint:[178,364,624,805,1201],random:[36,176,362,488,622,803,1199],random_crop:1109,random_norm:[179,365,625,806,1202],random_uniform:[180,366,626,807,1203],reduce_max:[185,369,492,629,812,1208],reduce_mean:[186,370,493,630,813,1209],reduce_min:[187,371,494,631,814,1210],reduce_prod:[188,372,495,632,815,1211],reduce_std:[373,1212],reduce_sum:[189,374,496,633,816,1213],reduce_var:[190,375,497,634,817,1214],reduct:[38,183,367,490,627,810,1206],reflect:[13,121,247,434,559,690],relu:[822,1219],repeat:[330,748,1059],reptile_step:1142,request:43,reshap:[749,1060],robot:57,round:[331,750,1061],run:1286,scaled_dot_product_attent:1236,scatter_flat:[156,332,465,597,751,1062],scatter_nd:[157,333,466,598,752,1063],search:[105,231,418,542,673,868],seed:[181,808,1204],sequenti:[1282,1283],set:[106,232,419,543,674,869],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:959,set_default_dtyp:985,set_default_float_dtyp:986,set_default_int_dtyp:987,set_default_nod:1174,set_exception_debug_mod:48,set_framework:65,set_min_bas:1064,set_min_denomin:1065,set_nest_at_index:1197,set_nest_at_indic:1198,set_queue_timeout:1066,set_split_factor:[960,1175],set_tmp_dir:1067,set_with_grad:1099,sgd:1281,shape:[753,1068],shape_to_tupl:1069,shuffl:[182,809,1205],sigmoid:[823,1220],signatur:[99,225,412,536,667,862],sin:[799,1135],sinh:[800,1136],siren:1257,softmax:[193,501,824,1221],softplu:[825,1222],sort:[107,233,420,544,675,870],sparse_cross_entropi:1240,split:[158,334,467,599,754,1070],split_factor:[961,1176],split_func_cal:[962,1177],sqrt:[98,224,411,535,666,861],squeez:[159,335,468,600,755,1071],stable_divid:1072,stable_pow:1073,stack:[336,756,1074],stack_imag:[169,351,480,614,776,1110],standard:43,statist:[109,235,422,546,677,872],stop_gradi:[346,475,609,770,1100],str_to_nod:1178,submodul:43,supports_inplac:1075,svd:[356,618,783,1118],swapax:[601,757,1076],tan:[801,1137],tanh:[802,826,1138,1223],tensorflow:510,tile:[337,602,758,1077],tmp_dir:1078,to_dev:[129,293,566,698,963],to_ivi:18,to_ivy_modul:[196,829,1250],to_list:[759,1079],to_n:19,to_nod:1179,to_numpi:[760,1080],to_scalar:[761,1081],todo:43,torch:641,total_mem_on_dev:964,total_mem_on_nod:1180,tpu_is_avail:[567,699,965,1181],train:1285,trainabl:1285,transpos:[160,338,469,762,1082],tree:1243,tril:[516,647],try_else_non:1083,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[81,85,212,216,394,398,518,522,649,653,845,848],uint8_img_to_float_img:1111,unifi:1182,unify_arrai:1183,unify_it:1184,unify_nest:1185,unset_debug_mod:49,unset_default_devic:966,unset_default_dtyp:988,unset_default_float_dtyp:989,unset_default_int_dtyp:990,unset_framework:71,unset_with_grad:1101,unstack:[161,339,470,603,763,1084],updat:43,used_mem_on_dev:967,used_mem_on_nod:1186,util:[110,236,423,547,678,873],valid_dtyp:991,value_is_nan:1085,variabl:[347,476,610,771,1102],variable_data:[772,1103],vector_norm:[102,228,415,539,670,865],vector_to_skew_symmetric_matrix:[173,357,484,619,784,1119],verbos:1287,vision:58,where:[340,764,1086,1243],why:1289,with_grad:1104,wrapper:72,write:1286,your:43,zero:[80,211,393,517,648,844,1259],zero_pad:[341,604,765,1087],zeros_lik:[162,342,471,605,766,1088]}})