Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[841,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[391,0,0,"-"],creation_functions:[392,0,0,"-"],data_type_functions:[397,0,0,"-"],data_types:[401,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[393,2,1,""],ones:[394,2,1,""],tril:[395,2,1,""],zeros:[396,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[397,1,1,""],finfo:[399,2,1,""],iinfo:[400,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[397,3,1,""],bits:[397,3,1,""],eps:[397,3,1,""],max:[397,3,1,""],min:[397,3,1,""],smallest_normal:[397,3,1,""]},"ivy.functional.backends.numpy.core":{device:[439,0,0,"-"],general:[441,0,0,"-"],gradients:[475,0,0,"-"],image:[480,0,0,"-"],linear_algebra:[484,0,0,"-"],logic:[488,0,0,"-"],math:[489,0,0,"-"],random:[491,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[440,1,1,""],clear_mem_on_dev:[439,2,1,""],dev:[439,2,1,""],dev_from_str:[439,2,1,""],dev_to_str:[439,2,1,""],gpu_is_available:[439,2,1,""],num_gpus:[439,2,1,""],to_dev:[439,2,1,""],tpu_is_available:[439,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[440,3,1,""],start:[440,3,1,""],stop:[440,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[441,2,1,""],arange:[442,2,1,""],argmax:[443,2,1,""],argmin:[444,2,1,""],array:[445,2,1,""],asarray:[441,2,1,""],astype:[441,2,1,""],cast:[446,2,1,""],clip:[441,2,1,""],compile:[447,2,1,""],concatenate:[448,2,1,""],constant_pad:[441,2,1,""],container_types:[441,2,1,""],copy_array:[441,2,1,""],cumprod:[449,2,1,""],current_framework_str:[441,2,1,""],dtype:[450,2,1,""],dtype_bits:[451,2,1,""],dtype_from_str:[452,2,1,""],dtype_to_str:[453,2,1,""],equal:[441,2,1,""],floor:[441,2,1,""],floormod:[441,2,1,""],full:[454,2,1,""],gather:[455,2,1,""],gather_nd:[456,2,1,""],get_num_dims:[441,2,1,""],identity:[457,2,1,""],indices_where:[458,2,1,""],inplace_arrays_supported:[441,2,1,""],inplace_decrement:[459,2,1,""],inplace_increment:[460,2,1,""],inplace_update:[461,2,1,""],inplace_variables_supported:[441,2,1,""],is_array:[462,2,1,""],linear_resample:[463,2,1,""],linspace:[464,2,1,""],logspace:[465,2,1,""],matmul:[441,2,1,""],meshgrid:[441,2,1,""],multiprocessing:[441,2,1,""],one_hot:[466,2,1,""],ones_like:[467,2,1,""],round:[441,2,1,""],scatter_flat:[468,2,1,""],scatter_nd:[469,2,1,""],shape:[441,2,1,""],split:[470,2,1,""],squeeze:[471,2,1,""],to_list:[441,2,1,""],to_numpy:[441,2,1,""],to_scalar:[441,2,1,""],transpose:[472,2,1,""],unstack:[473,2,1,""],where:[441,2,1,""],zero_pad:[441,2,1,""],zeros_like:[474,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[476,2,1,""],is_variable:[477,2,1,""],stop_gradient:[478,2,1,""],variable:[479,2,1,""],variable_data:[475,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[481,2,1,""],gradient_image:[482,2,1,""],stack_images:[483,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[485,2,1,""],qr:[486,2,1,""],vector_to_skew_symmetric_matrix:[487,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[490,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[492,2,1,""],randint:[491,2,1,""],random_normal:[491,2,1,""],random_uniform:[491,2,1,""],seed:[491,2,1,""],shuffle:[491,2,1,""]},"ivy.functional.ivy":{array_api:[842,0,0,"-"],core:[880,0,0,"-"],nn:[1219,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[843,0,0,"-"],creation_functions:[844,0,0,"-"],data_type_functions:[849,0,0,"-"],data_types:[852,0,0,"-"],elementwise_functions:[853,0,0,"-"],function_and_method_signatures:[866,0,0,"-"],linear_algebra:[867,0,0,"-"],manipulation_functions:[870,0,0,"-"],searching_functions:[872,0,0,"-"],set_functions:[873,0,0,"-"],sorting_functions:[874,0,0,"-"],statistical_functions:[876,0,0,"-"],utility_functions:[877,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[843,4,1,""],nan:[843,4,1,""],pi:[843,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[845,2,1,""],ones:[846,2,1,""],tril:[847,2,1,""],zeros:[848,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[850,2,1,""],iinfo:[851,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[854,2,1,""],bitwise_and:[855,2,1,""],ceil:[856,2,1,""],cos:[857,2,1,""],cosh:[858,2,1,""],isfinite:[859,2,1,""],isnan:[860,2,1,""],less:[861,2,1,""],log1p:[862,2,1,""],log2:[863,2,1,""],logical_not:[864,2,1,""],sqrt:[865,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[868,2,1,""],vector_norm:[869,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[871,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[875,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[878,2,1,""],any:[879,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[881,0,0,"-"],compilation:[920,0,0,"-"],device:[922,0,0,"-"],dtype:[972,0,0,"-"],general:[996,0,0,"-"],gradients:[1093,0,0,"-"],image:[1109,0,0,"-"],linalg:[1116,0,0,"-"],logic:[1124,0,0,"-"],math:[1127,0,0,"-"],meta:[1143,0,0,"-"],multi_node:[1147,0,0,"-"],nest:[1191,0,0,"-"],random:[1203,0,0,"-"],reductions:[1210,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[882,2,1,""],builtin_add:[883,2,1,""],builtin_and:[884,2,1,""],builtin_bool:[885,2,1,""],builtin_contains:[886,2,1,""],builtin_deepcopy:[887,2,1,""],builtin_dir:[888,2,1,""],builtin_eq:[889,2,1,""],builtin_float:[890,2,1,""],builtin_floordiv:[891,2,1,""],builtin_ge:[892,2,1,""],builtin_getattr:[893,2,1,""],builtin_getattribute:[894,2,1,""],builtin_getitem:[895,2,1,""],builtin_gt:[896,2,1,""],builtin_int:[897,2,1,""],builtin_invert:[898,2,1,""],builtin_le:[899,2,1,""],builtin_lt:[900,2,1,""],builtin_mul:[901,2,1,""],builtin_ne:[902,2,1,""],builtin_neg:[903,2,1,""],builtin_or:[904,2,1,""],builtin_pos:[905,2,1,""],builtin_pow:[906,2,1,""],builtin_radd:[907,2,1,""],builtin_rand:[908,2,1,""],builtin_rfloordiv:[909,2,1,""],builtin_rmul:[910,2,1,""],builtin_ror:[911,2,1,""],builtin_rpow:[912,2,1,""],builtin_rsub:[913,2,1,""],builtin_rtruediv:[914,2,1,""],builtin_rxor:[915,2,1,""],builtin_setitem:[916,2,1,""],builtin_sub:[917,2,1,""],builtin_truediv:[918,2,1,""],builtin_xor:[919,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[921,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[922,1,1,""],DevClonedItem:[924,1,1,""],DevClonedIter:[925,1,1,""],DevClonedNest:[926,1,1,""],DevDistItem:[927,1,1,""],DevDistIter:[928,1,1,""],DevDistNest:[929,1,1,""],DevManager:[922,1,1,""],DevMapper:[931,1,1,""],DevMapperMultiProc:[932,1,1,""],MultiDev:[922,1,1,""],MultiDevItem:[934,1,1,""],MultiDevIter:[935,1,1,""],MultiDevNest:[936,1,1,""],Profiler:[937,1,1,""],clear_mem_on_dev:[938,2,1,""],default_device:[939,2,1,""],dev:[940,2,1,""],dev_clone:[941,2,1,""],dev_clone_array:[942,2,1,""],dev_clone_iter:[943,2,1,""],dev_clone_nest:[944,2,1,""],dev_dist:[945,2,1,""],dev_dist_array:[946,2,1,""],dev_dist_iter:[947,2,1,""],dev_dist_nest:[948,2,1,""],dev_from_str:[949,2,1,""],dev_to_str:[950,2,1,""],dev_unify:[951,2,1,""],dev_unify_array:[952,2,1,""],dev_unify_iter:[953,2,1,""],dev_unify_nest:[954,2,1,""],dev_util:[955,2,1,""],get_all_arrays_on_dev:[956,2,1,""],gpu_is_available:[957,2,1,""],num_arrays_on_dev:[958,2,1,""],num_cpu_cores:[959,2,1,""],num_gpus:[960,2,1,""],percent_used_mem_on_dev:[961,2,1,""],print_all_arrays_on_dev:[962,2,1,""],set_default_device:[963,2,1,""],set_split_factor:[964,2,1,""],split_factor:[965,2,1,""],split_func_call:[966,2,1,""],to_dev:[967,2,1,""],total_mem_on_dev:[968,2,1,""],tpu_is_available:[969,2,1,""],unset_default_device:[970,2,1,""],used_mem_on_dev:[971,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[922,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[922,3,1,""],da_tune_step:[922,3,1,""],dim_size:[922,3,1,""],ds_tune_step:[922,3,1,""],map:[922,3,1,""],repeated_config_check:[922,3,1,""],tune_step:[922,3,1,""],tuned:[922,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[931,3,1,""],map:[931,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[932,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[922,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[934,3,1,""],items:[934,3,1,""],keys:[934,3,1,""],shape:[934,3,1,""],values:[934,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[935,3,1,""],at_dev:[935,3,1,""],at_devs:[935,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[936,3,1,""],at_dev:[936,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[937,3,1,""],start:[937,3,1,""],stop:[937,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[972,1,1,""],DefaultFloatDtype:[972,1,1,""],DefaultIntDtype:[972,1,1,""],astype:[972,2,1,""],cast:[976,2,1,""],closest_valid_dtype:[977,2,1,""],convert_dtype:[978,2,1,""],default_dtype:[979,2,1,""],default_float_dtype:[980,2,1,""],default_int_dtype:[981,2,1,""],dtype:[982,2,1,""],dtype_bits:[983,2,1,""],dtype_from_str:[984,2,1,""],dtype_to_str:[985,2,1,""],invalid_dtype:[986,2,1,""],is_float_dtype:[987,2,1,""],is_int_dtype:[988,2,1,""],set_default_dtype:[989,2,1,""],set_default_float_dtype:[990,2,1,""],set_default_int_dtype:[991,2,1,""],unset_default_dtype:[992,2,1,""],unset_default_float_dtype:[993,2,1,""],unset_default_int_dtype:[994,2,1,""],valid_dtype:[995,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[972,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[972,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[972,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1020,2,1,""],abs:[997,2,1,""],all_equal:[998,2,1,""],arange:[999,2,1,""],arg_names:[1000,2,1,""],argmax:[1001,2,1,""],argmin:[1002,2,1,""],array:[1003,2,1,""],array_equal:[1004,2,1,""],arrays_equal:[1005,2,1,""],asarray:[996,2,1,""],assert_supports_inplace:[1006,2,1,""],broadcast_to:[1007,2,1,""],cache_fn:[1008,2,1,""],clip:[1009,2,1,""],clip_matrix_norm:[1010,2,1,""],clip_vector_norm:[1011,2,1,""],concatenate:[1012,2,1,""],constant_pad:[1013,2,1,""],container_types:[1014,2,1,""],copy_array:[1015,2,1,""],cross:[1016,2,1,""],cumprod:[1017,2,1,""],cumsum:[1018,2,1,""],current_framework_str:[1019,2,1,""],einops_rearrange:[1021,2,1,""],einops_reduce:[1022,2,1,""],einops_repeat:[1023,2,1,""],equal:[1024,2,1,""],exists:[1025,2,1,""],expand_dims:[1026,2,1,""],floor:[1027,2,1,""],floormod:[1028,2,1,""],fourier_encode:[1029,2,1,""],full:[1030,2,1,""],gather:[1031,2,1,""],gather_nd:[1032,2,1,""],get_all_arrays_in_memory:[1033,2,1,""],get_min_base:[1034,2,1,""],get_min_denominator:[1035,2,1,""],get_num_dims:[1036,2,1,""],get_referrers_recursive:[1037,2,1,""],has_nans:[1038,2,1,""],identity:[1039,2,1,""],indices_where:[1040,2,1,""],inplace_arrays_supported:[1041,2,1,""],inplace_decrement:[1042,2,1,""],inplace_increment:[1043,2,1,""],inplace_update:[1044,2,1,""],inplace_variables_supported:[1045,2,1,""],is_array:[1046,2,1,""],isinf:[1047,2,1,""],linear_resample:[1048,2,1,""],linspace:[1049,2,1,""],logspace:[1050,2,1,""],match_kwargs:[1051,2,1,""],matmul:[1052,2,1,""],maximum:[1053,2,1,""],meshgrid:[1054,2,1,""],minimum:[1055,2,1,""],multiprocessing:[1056,2,1,""],num_arrays_in_memory:[1057,2,1,""],one_hot:[1058,2,1,""],ones:[1059,2,1,""],ones_like:[1060,2,1,""],print_all_arrays_in_memory:[1061,2,1,""],queue_timeout:[1062,2,1,""],repeat:[1063,2,1,""],reshape:[1064,2,1,""],round:[1065,2,1,""],scatter_flat:[1066,2,1,""],scatter_nd:[1067,2,1,""],set_min_base:[1068,2,1,""],set_min_denominator:[1069,2,1,""],set_queue_timeout:[1070,2,1,""],set_tmp_dir:[1071,2,1,""],shape:[1072,2,1,""],shape_to_tuple:[1073,2,1,""],split:[1074,2,1,""],squeeze:[1075,2,1,""],stable_divide:[1076,2,1,""],stable_pow:[1077,2,1,""],stack:[1078,2,1,""],supports_inplace:[1079,2,1,""],swapaxes:[1080,2,1,""],tile:[1081,2,1,""],tmp_dir:[1082,2,1,""],to_list:[1083,2,1,""],to_numpy:[1084,2,1,""],to_scalar:[1085,2,1,""],transpose:[1086,2,1,""],try_else_none:[1087,2,1,""],unstack:[1088,2,1,""],value_is_nan:[1089,2,1,""],where:[1090,2,1,""],zero_pad:[1091,2,1,""],zeros_like:[1092,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1093,1,1,""],adam_step:[1095,2,1,""],adam_update:[1096,2,1,""],execute_with_gradients:[1097,2,1,""],gradient_descent_update:[1098,2,1,""],is_variable:[1099,2,1,""],lamb_update:[1100,2,1,""],lars_update:[1101,2,1,""],optimizer_update:[1102,2,1,""],set_with_grads:[1103,2,1,""],stop_gradient:[1104,2,1,""],unset_with_grads:[1105,2,1,""],variable:[1106,2,1,""],variable_data:[1107,2,1,""],with_grads:[1108,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1093,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1110,2,1,""],float_img_to_uint8_img:[1111,2,1,""],gradient_image:[1112,2,1,""],random_crop:[1113,2,1,""],stack_images:[1114,2,1,""],uint8_img_to_float_img:[1115,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1117,2,1,""],inv:[1118,2,1,""],matrix_norm:[1119,2,1,""],pinv:[1120,2,1,""],qr:[1121,2,1,""],svd:[1122,2,1,""],vector_to_skew_symmetric_matrix:[1123,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1125,2,1,""],logical_or:[1126,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1128,2,1,""],acosh:[1129,2,1,""],asin:[1130,2,1,""],atan2:[1132,2,1,""],atan:[1131,2,1,""],atanh:[1133,2,1,""],cosh:[1134,2,1,""],divide:[1135,2,1,""],erf:[1136,2,1,""],exp:[1137,2,1,""],log:[1138,2,1,""],sin:[1139,2,1,""],sinh:[1140,2,1,""],tan:[1141,2,1,""],tanh:[1142,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1144,2,1,""],maml_step:[1145,2,1,""],reptile_step:[1146,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1147,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1192,2,1,""],copy_nest:[1193,2,1,""],index_nest:[1194,2,1,""],map:[1195,2,1,""],map_nest_at_index:[1196,2,1,""],map_nest_at_indices:[1197,2,1,""],multi_index_nest:[1198,2,1,""],nested_indices_where:[1199,2,1,""],nested_map:[1200,2,1,""],set_nest_at_index:[1201,2,1,""],set_nest_at_indices:[1202,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1204,2,1,""],randint:[1205,2,1,""],random_normal:[1206,2,1,""],random_uniform:[1207,2,1,""],seed:[1208,2,1,""],shuffle:[1209,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1211,2,1,""],reduce_max:[1212,2,1,""],reduce_mean:[1213,2,1,""],reduce_min:[1214,2,1,""],reduce_prod:[1215,2,1,""],reduce_std:[1216,2,1,""],reduce_sum:[1217,2,1,""],reduce_var:[1218,2,1,""]},"ivy.functional.ivy.nn":{activations:[1220,0,0,"-"],layers:[1228,0,0,"-"],losses:[1241,0,0,"-"],norms:[1245,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1221,2,1,""],leaky_relu:[1222,2,1,""],relu:[1223,2,1,""],sigmoid:[1224,2,1,""],softmax:[1225,2,1,""],softplus:[1226,2,1,""],tanh:[1227,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1229,2,1,""],conv1d_transpose:[1230,2,1,""],conv2d:[1231,2,1,""],conv2d_transpose:[1232,2,1,""],conv3d:[1233,2,1,""],conv3d_transpose:[1234,2,1,""],depthwise_conv2d:[1235,2,1,""],dropout:[1236,2,1,""],linear:[1237,2,1,""],lstm_update:[1238,2,1,""],multi_head_attention:[1239,2,1,""],scaled_dot_product_attention:[1240,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1242,2,1,""],cross_entropy:[1243,2,1,""],sparse_cross_entropy:[1244,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1246,2,1,""]},"ivy.stateful":{activations:[1250,0,0,"-"],converters:[1253,0,0,"-"],initializers:[1255,0,0,"-"],layers:[1264,0,0,"-"],module:[1276,0,0,"-"],norms:[1278,0,0,"-"],optimizers:[1280,0,0,"-"],sequential:[1286,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1251,1,1,""],GELU:[1252,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1251,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1252,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1254,2,1,""]},"ivy.stateful.initializers":{Constant:[1255,1,1,""],FirstLayerSiren:[1257,1,1,""],GlorotUniform:[1258,1,1,""],KaimingNormal:[1255,1,1,""],Ones:[1260,1,1,""],Siren:[1261,1,1,""],Uniform:[1255,1,1,""],Zeros:[1263,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1255,3,1,""],create_variables:[1255,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1257,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1258,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1255,3,1,""],create_variables:[1255,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1260,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1261,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1255,3,1,""],create_variables:[1255,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1263,3,1,""]},"ivy.stateful.layers":{Conv1D:[1265,1,1,""],Conv1DTranspose:[1266,1,1,""],Conv2D:[1267,1,1,""],Conv2DTranspose:[1268,1,1,""],Conv3D:[1269,1,1,""],Conv3DTranspose:[1270,1,1,""],DepthwiseConv2D:[1271,1,1,""],Dropout:[1272,1,1,""],LSTM:[1273,1,1,""],Linear:[1274,1,1,""],MultiHeadAttention:[1275,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1265,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1266,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1267,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1268,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1269,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1270,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1271,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1272,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1273,3,1,""],get_initial_state:[1273,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1274,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1275,3,1,""]},"ivy.stateful.module":{Module:[1277,1,1,""]},"ivy.stateful.module.Module":{__init__:[1277,3,1,""],build:[1277,3,1,""],build_mode:[1277,3,1,""],built:[1277,3,1,""],check_submod_rets:[1277,3,1,""],get_mod_key:[1277,3,1,""],mod_depth:[1277,3,1,""],mod_height:[1277,3,1,""],mod_with_top_mod_key_chain:[1277,3,1,""],save_weights:[1277,3,1,""],show_mod_in_top_mod:[1277,3,1,""],show_structure:[1277,3,1,""],show_v_in_top_v:[1277,3,1,""],sub_mods:[1277,3,1,""],track_submod_call_order:[1277,3,1,""],track_submod_rets:[1277,3,1,""],v_with_top_v_key_chains:[1277,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1279,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1279,3,1,""]},"ivy.stateful.optimizers":{Adam:[1281,1,1,""],LAMB:[1282,1,1,""],LARS:[1283,1,1,""],Optimizer:[1284,1,1,""],SGD:[1285,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1281,3,1,""],set_state:[1281,3,1,""],state:[1281,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1282,3,1,""],set_state:[1282,3,1,""],state:[1282,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1283,3,1,""],set_state:[1283,3,1,""],state:[1283,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1284,3,1,""],set_state:[1284,3,1,""],step:[1284,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1285,3,1,""],set_state:[1285,3,1,""],state:[1285,3,1,""]},"ivy.stateful.sequential":{Sequential:[1287,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1287,3,1,""]},"ivy.verbosity":{cprint:[1292,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1291,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1280,1281,1282],"02886":1247,"100":[1147,1247,1289],"141592653589793":843,"2021":1247,"2102":1247,"360":[853,857,1127,1139,1141],"718281828459045":843,"754":[843,849,850,853,865],"999":[1093,1095,1096,1100,1280,1281,1282],"abstract":[922,937,1247,1280,1284],"boolean":[40,41,853,855,860,864,922,957,969,972,986,995,996,998,1004,1005,1038,1040,1041,1045,1046,1047,1079,1089,1093,1099,1124,1125,1126,1143,1144,1145,1147],"break":43,"case":[15,18,19,40,41,42,43,853,854,922,961,968,971,996,999,1064,1066,1067,1116,1119,1121,1147,1191,1194,1198,1247,1264,1275,1276,1277,1280,1284,1293],"catch":[996,1020],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,397,439,440,849,851,922,924,925,926,927,928,929,931,932,934,935,936,937,949,950,972,996,1000,1051,1093,1107,1147,1191,1193,1200,1241,1243,1244,1247,1250,1251,1252,1253,1254,1255,1257,1258,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289,1293],"default":[15,18,19,40,41,42,43,844,845,846,847,848,867,868,869,870,871,874,875,877,878,879,920,921,922,931,932,939,940,944,945,946,947,948,951,952,953,954,961,964,965,966,971,972,979,980,981,982,996,998,999,1001,1002,1010,1011,1012,1013,1016,1017,1018,1029,1030,1031,1036,1038,1039,1048,1050,1051,1054,1056,1059,1062,1063,1066,1067,1070,1072,1074,1076,1077,1086,1088,1089,1093,1096,1098,1099,1100,1101,1102,1104,1108,1116,1119,1121,1143,1144,1145,1146,1147,1191,1192,1193,1195,1199,1200,1203,1204,1206,1207,1210,1212,1213,1214,1215,1216,1217,1218,1220,1221,1225,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242,1243,1244,1245,1246,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287],"final":[40,41,43,996,1029,1049,1050,1147,1264,1275,1290],"float":[40,41,42,43,843,844,845,846,848,849,850,853,854,865,867,869,881,900,906,922,931,932,955,961,964,968,971,972,980,987,996,999,1010,1011,1013,1029,1030,1034,1035,1050,1068,1069,1070,1076,1077,1093,1095,1096,1098,1100,1101,1102,1109,1111,1115,1127,1135,1143,1144,1145,1146,1147,1203,1206,1207,1220,1222,1228,1236,1239,1240,1241,1242,1243,1244,1245,1246,1264,1272,1275,1278,1279,1280,1281,1282,1283,1284,1285],"function":[15,40,41,43,393,394,395,396,399,400,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,843,845,846,847,848,850,851,854,855,856,857,858,859,860,861,862,863,864,865,867,868,869,871,875,878,879,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,924,925,926,927,928,929,931,932,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1250,1251,1252,1280,1283,1284,1285,1289,1290,1293],"import":[43,1247,1290,1293],"int":[40,41,42,43,392,393,394,395,396,491,844,845,846,847,848,849,850,851,867,868,869,870,871,874,875,877,878,879,881,900,906,920,921,922,944,945,946,947,948,951,952,953,954,959,960,966,972,981,983,988,996,1001,1002,1007,1012,1013,1017,1018,1021,1022,1023,1026,1029,1030,1031,1036,1039,1048,1049,1050,1058,1059,1063,1064,1066,1067,1072,1073,1074,1075,1078,1080,1081,1086,1088,1091,1093,1095,1096,1100,1109,1113,1114,1116,1119,1143,1144,1145,1146,1147,1191,1200,1203,1204,1205,1207,1208,1210,1212,1213,1214,1215,1216,1217,1218,1220,1225,1228,1229,1230,1231,1232,1233,1234,1235,1239,1241,1243,1244,1245,1246,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1278,1279],"long":[43,1228,1238],"new":[40,41,43,491,844,845,846,848,853,858,862,863,972,976,996,997,1007,1021,1022,1023,1026,1029,1030,1031,1032,1059,1064,1066,1067,1068,1069,1076,1077,1078,1093,1096,1098,1100,1101,1102,1109,1111,1113,1115,1127,1129,1133,1134,1140,1142,1147,1191,1201,1202,1203,1204,1245,1246,1247,1253,1254,1264,1274,1278,1279,1280,1281,1282,1283,1284,1285,1290,1293],"public":[996,1014],"return":[15,16,17,18,19,40,41,42,43,491,844,845,846,847,848,849,850,851,853,854,855,856,857,858,859,860,861,862,863,864,865,867,868,869,870,871,874,875,877,878,879,881,900,906,920,921,922,931,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,957,958,960,961,965,966,967,968,969,971,972,976,977,978,979,980,981,982,983,984,985,986,987,988,995,996,997,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1036,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1063,1064,1065,1066,1067,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1095,1096,1097,1098,1099,1100,1101,1102,1104,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1191,1192,1193,1195,1199,1200,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1253,1254,1264,1273,1274,1280,1284,1289,1290,1293],"short":[43,1228,1238,1247,1293],"static":[40,41,920,921],"super":1147,"true":[40,41,42,441,447,475,478,491,492,853,859,867,869,874,875,877,878,879,920,921,922,996,998,1006,1008,1025,1029,1038,1040,1089,1090,1093,1096,1098,1099,1100,1101,1102,1104,1116,1119,1143,1144,1145,1146,1147,1191,1192,1199,1203,1204,1210,1212,1213,1214,1215,1216,1217,1218,1220,1221,1228,1236,1241,1242,1243,1244,1264,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285],"try":[40,41,996,1087,1147],"var":[40,41,1143,1144,1145,1293],"while":[40,41,42,1147],AND:[853,855,877,878,1124,1125],But:1293,For:[43,853,854,996,999,1009,1078,1093,1099,1107,1116,1121,1127,1128,1247,1253,1254,1290,1293],Its:[1127,1131],NOT:[853,864],Not:843,One:[40,41,43,996,1022,1064,1203,1205,1293],Ones:[1247,1255],PRs:43,Such:[996,1014],That:1290,The:[15,16,17,18,19,40,41,42,43,844,847,853,854,855,857,859,861,865,867,869,870,871,874,875,877,878,879,881,900,906,920,921,922,931,932,938,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,961,964,965,966,967,968,971,972,976,977,978,983,984,985,986,995,996,999,1003,1004,1007,1008,1010,1011,1012,1013,1015,1016,1019,1020,1024,1029,1031,1032,1039,1042,1043,1044,1046,1048,1050,1052,1054,1056,1059,1060,1063,1064,1066,1067,1068,1069,1070,1073,1074,1075,1076,1077,1078,1081,1089,1092,1093,1095,1096,1098,1100,1101,1102,1104,1107,1109,1111,1113,1115,1116,1119,1121,1122,1127,1128,1130,1131,1135,1136,1137,1138,1139,1141,1143,1144,1145,1146,1147,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1207,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242,1243,1244,1245,1246,1247,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1290,1293],There:[43,1247,1290],These:[43,1247],Use:43,Used:[1191,1192,1199,1276,1277],Using:[1247,1248,1293],With:[40,41,1116,1119,1210,1212,1213,1214,1215,1216,1217,1218,1247,1289,1293],__array__:[996,1003],__call__:[1264,1275,1276,1277],__del__:1147,__dict__:[1147,1290],__enter__:1147,__exit__:1147,__getitem__:1147,__getstate__:1147,__init__:[40,41,42,43,59,60,83,215,397,398,439,440,522,653,922,923,930,931,932,933,934,935,936,937,972,973,974,975,1093,1094,1147,1151,1158,1247,1250,1251,1252,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289,1293],__iter__:1147,__len__:1147,__next__:1147,__pow__:43,__repr__:1147,_assign_vari:1289,_axi:1147,_base:[1191,1192,1199],_compute_node_da_ratio:1147,_compute_node_strs_da:1147,_concat_unify_arrai:1147,_counter:1147,_cur_framework:[43,1147],_da_direct:1147,_da_directions_flip:1147,_da_step_tim:1147,_da_tim:1147,_da_tune_count:1147,_data:1147,_delta_da_dim_s:1147,_delta_sf:1147,_dict:1147,_dim_siz:1147,_first_da_tune_step:1147,_first_ns_tune_step:1147,_fn:1147,_forward:[1247,1289],_get_kalman_param:1293,_get_prior:1293,_get_some_model:1293,_handle_flat_arrays_in_out:43,_index:[1191,1192,1199],_input_queu:1147,_length:1147,_max_depth:1147,_max_node_dim_step_ratio:1147,_max_node_dim_step_s:1147,_max_split_factor_step_s:1147,_mean_unify_arrai:1147,_min_bas:[996,1077,1245,1246,1278,1279],_min_denomin:[996,1076],_min_node_dim_s:1147,_min_sf_tune_step:1147,_min_unit_node_tune_step:1147,_model:1293,_native_wrapp:43,_node_mapp:1147,_node_percent_mem:1147,_node_str:1147,_node_str_da_ratio:1147,_node_strs_da:1147,_node_strs_kei:1147,_node_strs_n:1147,_node_util:1147,_ns_step_tim:1147,_ns_time:1147,_ns_tune_count:1147,_num_nod:1147,_num_work:1147,_observed_config:1147,_output_queu:1147,_paramet:1289,_percent_mem_inc_per_sf:1147,_percent_mem_inc_per_unit_da_dim:1147,_percent_util_inc_per_unit_da_dim:1147,_ret_fn:1147,_safety_factor:1147,_save_dir:1147,_shift_da_split:1147,_shift_n:1147,_slice:1147,_step:[1280,1284],_sum_unify_arrai:1147,_timeout:1147,_tune:1147,_tune_da:1147,_tune_n:1147,_tune_step:1147,_unit_da_tune_count:1147,_unroll_step:1293,_with_node_mappig:1147,_worker:1147,_worker_class:1147,_worker_fn:1147,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,922,931,937,1147,1276,1277,1280,1284],abil:1247,abl:[40,41],about:[849,850,851],abov:[43,844,847,1203,1205],above_height:[40,41],abs:[296,441,571,703,867,869,996,1147],absolut:[40,41,996,997],abstractmethod:1147,accept:[15,43,1247],access:[40,41,43,1290],accord:[40,41,849,850,996,1013,1031,1066,1067,1086,1091],accordingli:[867,869,877,878,879],accur:[59,397,439,440,922,934,935,936,937,972,1093,1255,1257,1258,1260,1261,1263],aco:[791,1127],acosh:[791,1127],across:[40,41,922,931,932,941,942,944,945,946,947,948,954,964,965,996,1001,1002,1004,1005,1147,1191,1195],act:43,activ:[1221,1222,1223,1224,1225,1226,1227,1247,1251,1252],actual:1290,adam:[1093,1095,1096,1100,1247,1280,1282,1289],adam_step:1093,adam_upd:1093,adapt:[1093,1101,1280,1283],add:[40,41,43,1147,1241,1242,1243,1244,1245,1246,1247,1278,1279,1290],added:[43,996,1076,1077,1286,1287],adding:[996,1007],addit:[40,41,43,996,1021,1022,1023,1245,1246,1264,1274],address:43,adher:43,adjac:[996,999],adopt:[43,996,1014],affect:[996,999],affin:[1278,1279],after:[853,865,996,1048,1093,1096,1097,1098,1100,1101,1102,1109,1110,1245,1246,1280,1281,1282,1283,1284,1285,1293],after_1:[996,1013,1091],after_n:[996,1013,1091],again:43,against:[40,41,1116,1119,1210,1212,1213,1214,1215,1216,1217,1218],agnost:[43,1247,1289,1290],aim:1293,algebra:1116,algorithm:[1228,1229,1230,1231,1232,1233,1234,1235,1264,1265,1266,1267,1268,1269,1270,1271,1293],align:[40,41,43,996,1007],aliv:[922,956,958,962,996,1033,1057,1061],all:[15,16,17,18,19,40,41,43,111,238,426,550,681,844,847,867,869,870,871,877,920,921,922,931,956,962,996,997,998,1004,1005,1014,1033,1039,1061,1075,1116,1121,1143,1144,1145,1146,1147,1191,1192,1193,1199,1200,1203,1204,1207,1210,1212,1213,1214,1215,1216,1217,1218,1228,1238,1247,1290,1293],all_depth:[40,41],all_equ:996,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1191,all_tru:[40,41],alloc:[43,844,847,922,1147],allow:[996,1049,1050,1051,1276,1277],allow_dupl:[996,1051],alon:[922,961,971,1147,1247],along:[40,41,43,491,867,868,869,870,871,874,875,877,878,879,922,945,946,947,948,951,952,953,954,966,996,1012,1017,1018,1031,1048,1049,1050,1063,1074,1078,1081,1088,1116,1119,1143,1144,1145,1146,1147,1203,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218],alongsid:[1289,1290],alpha:[1220,1222],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,922,1147],also:[40,41,43,996,999,1093,1096,1143,1144,1145,1146,1191,1192,1193,1199,1200,1228,1237,1247,1264,1274,1289],altern:1289,alwai:[40,41,43,1093,1099,1104],among:[40,41],amount:[922,968,1147,1247],angl:[1127,1128,1132],ani:[15,16,17,18,19,40,41,43,111,238,426,550,681,877,920,921,922,924,927,931,932,934,943,944,947,948,953,996,998,999,1003,1020,1021,1022,1023,1024,1025,1038,1046,1051,1076,1077,1093,1097,1147,1191,1192,1195,1199,1200,1201,1202,1203,1207,1247,1253,1254,1276,1277,1289,1290,1293],anoth:[40,41,43,972,978,1247],another_backend:43,anyth:[43,1293],anywai:43,apart:43,api:[1247,1248],appear:[43,996,1026],append:[40,41,1147],appli:[15,18,19,40,41,853,864,996,1021,1022,1023,1093,1100,1101,1116,1122,1124,1125,1126,1143,1144,1145,1191,1195,1198,1200,1220,1221,1222,1223,1224,1225,1226,1227,1228,1237,1239,1240,1245,1246,1247,1250,1251,1252,1278,1279],applic:[1191,1195,1200,1228,1239,1240,1247,1293],approxim:[43,853,854,862,863,881,906,1220,1221],arang:[131,296,441,491,571,703,996,1049,1050],arbitrari:[40,41,922,951,952,954,1147],arc:[1127,1132],arcco:[1127,1128],arctan:[1127,1131],area:[853,854,1247],arg:[15,16,17,40,41,43,59,63,922,931,944,948,954,966,996,1021,1022,1023,1067,1147,1253,1254,1276,1277],arg_nam:996,arg_stateful_idx:[1276,1277],argmax:[131,441,571,703,996],argmin:[131,441,571,703,996],args_clon:1147,args_dist:1147,args_to_ivi:[15,1247],args_to_n:[15,1247],args_uni:1147,argsort:[108,235,423,547,678,874],argument:[15,16,17,18,19,40,41,42,43,59,63,920,921,922,931,932,944,948,954,996,999,1000,1008,1020,1051,1067,1127,1128,1147,1191,1195,1253,1254,1276,1277],aris:[1247,1293],arithmet:[43,1210,1213,1216,1218],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:491,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,131,296,441,491,571,703,844,845,846,847,848,849,850,851,853,854,855,856,857,858,859,860,861,862,863,864,865,867,868,869,870,871,874,875,877,878,879,900,906,922,940,941,942,945,946,947,948,951,952,953,954,956,958,962,966,967,972,976,982,987,988,996,997,998,999,1001,1002,1004,1005,1006,1007,1009,1010,1011,1012,1013,1015,1016,1017,1018,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1036,1038,1039,1040,1041,1042,1043,1044,1046,1047,1048,1049,1050,1052,1053,1054,1055,1057,1058,1059,1060,1061,1063,1064,1065,1066,1067,1072,1074,1075,1078,1079,1080,1081,1083,1084,1085,1086,1088,1089,1090,1091,1092,1093,1095,1096,1099,1100,1104,1106,1107,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1147,1191,1193,1200,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1264,1272,1273,1275,1280,1284,1289,1290],arrang:[996,1021],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,392,393,394,395,396,397,399,400,843,844,845,846,847,848,849,850,851,853,854,855,856,857,858,859,860,861,862,863,864,865,867,868,869,870,871,874,875,877,878,879],array_api_methods_to_test:43,array_builtin:[43,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919],array_equ:[296,703,996],array_lik:[491,996,1003],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,996],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1247],arraywithgener:[22,1247],arraywithgradi:[24,1247],arraywithimag:[26,1247],arraywithlinalg:[28,1247],arraywithlog:[30,1247],arraywithmath:[32,1247],arraywithmeta:[34,1247],arraywithrandom:[36,1247],arraywithreduct:[38,1247],arriv:[40,41,42],articl:1247,arxiv:1247,as_arrai:[40,41,996,1036,1072],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[439,441,450,922,940,972,979,980,981,982],as_tensor:441,as_vari:[40,41],as_zero:[40,41],asarrai:[441,996],asin:[791,1127],asinh:[87,402,526,657,853],aspect:[1109,1114],assert:[40,41,996,1006,1147],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:996,associ:[43,1116,1123],assum:[1290,1293],astyp:[441,972],asynchron:[40,41,42],at_dev:[40,42,922,935,936],at_kei:[40,41],at_key_chain:[40,41],at_nod:1147,atan2:[791,1127],atan:[791,1127],atanh:[791,1127],attent:[43,1228,1239,1240,1264,1275],attribut:[0,6,40,41,849,850,851,996,1060,1092],audienc:[1247,1290],author:1247,automat:43,avail:[40,41,43,922,957,959,960,969,996,1022,1147],averag:[1093,1095,1096,1100,1143,1144,1145,1210,1213],average_across_step:[1143,1144,1145],avoid:[43,922,1147,1290],axes:[40,41,43,441,472,484,485,867,869,870,871,877,878,879,922,966,996,1001,1002,1013,1026,1080,1086,1091,1116,1119,1147,1210,1212,1213,1214,1215,1216,1217,1218],axes_length:[40,41,996,1021,1022,1023],axi:[40,41,441,443,444,448,449,455,463,464,465,470,471,473,867,868,869,870,871,874,875,877,878,879,922,924,927,934,945,946,947,948,951,952,953,954,966,996,1001,1002,1012,1013,1016,1017,1018,1026,1031,1048,1049,1050,1063,1074,1075,1078,1080,1081,1088,1091,1147,1203,1209,1210,1212,1213,1214,1215,1216,1217,1218,1220,1225,1241,1243,1244],axis0:[40,41,996,1080],axis1:[40,41,867,868,996,1080],axis2:[867,868],back:[43,1276,1277,1280,1284],backend:[15,17,19,40,41,392,393,394,395,396,397,399,400,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,489,490,491,492,922,957,960,969,972,978,986,995,996,1041,1045,1093,1096,1098,1100,1101,1102,1107,1147,1247,1248,1253,1254,1280,1281,1282,1283,1284,1285,1289,1290,1293],backend_nam:43,background:[1247,1290],backprop:1293,backward:[877,878,879,1289],band:[996,1029],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,397,439,440,441,465,853,862,863,881,906,922,924,925,926,927,928,929,931,932,934,935,936,937,972,996,1034,1050,1068,1077,1093,1147,1210,1211,1247,1250,1251,1252,1255,1257,1258,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1293],basi:43,batch:[40,41,867,869,922,964,965,996,1029,1039,1109,1113,1116,1122,1143,1144,1145,1146,1147,1228,1237,1245,1246,1278,1279],batch_shap:[441,457,996,1039,1058,1109,1110,1111,1112,1113,1114,1115,1116,1123,1203,1204,1228,1238,1239,1240,1264,1273],batch_siz:[491,492,1147,1203,1204,1228,1229,1230,1231,1232,1233,1234,1235],bayesian:1293,becaus:[43,996,999],becom:[43,996,1009,1127,1132,1293],been:[996,1021,1022,1023,1203,1204],befor:[40,41,43,922,966,1143,1144,1145,1147,1191,1200,1210,1212,1213,1214,1215,1216,1217,1218,1228,1239,1240,1293],before_1:[996,1013,1091],before_n:[996,1013,1091],begin:[1191,1192,1199,1290],behaviour:[43,1293],behind:[1093,1096,1098,1100,1101,1102,1247],being:[40,41,43,996,999,1062,1070,1147],believ:43,belong:[40,41],below:[43,844,847,1247,1290,1293],below_depth:[40,41],benefit:1247,bernoul:[1228,1236,1264,1272],best:[43,996,1051,1247],beta1:[1093,1095,1096,1100,1280,1281,1282],beta2:[1093,1095,1096,1100,1280,1281,1282],beta:[1245,1246],between:[40,41,42,849,850,996,999,1116,1121,1191,1195,1203,1205,1241,1243,1244,1280,1282],bia:[1228,1237,1238,1264,1265,1266,1267,1268,1269,1270,1271,1274],bias_initi:[1264,1265,1266,1267,1268,1269,1270,1271,1274],bilinear:[1109,1110],bilinear_resampl:[167,350,480,614,776,1109],bilinearli:[1109,1110],binari:[853,855,1241,1242],binary_cross_entropi:1241,bit:[397,849,850,851,972,983,1109,1111,1115,1247],bitwis:[853,855],bitwise_and:[87,219,402,526,657,853],bitwise_oper:[0,7,8],block:[1247,1290],bool:[15,18,19,40,41,42,43,853,859,861,867,869,874,875,877,878,879,881,900,920,921,922,940,953,957,961,966,969,971,972,982,996,998,1004,1005,1017,1020,1024,1025,1029,1036,1038,1046,1051,1072,1074,1088,1089,1090,1093,1096,1097,1098,1099,1100,1101,1102,1104,1116,1119,1143,1144,1145,1146,1147,1191,1192,1193,1195,1199,1200,1203,1204,1210,1212,1213,1214,1215,1216,1217,1218,1220,1221,1228,1236,1253,1254,1264,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285],both:[43,996,1016],bottom:1247,boundari:[40,41,1203,1207],branch:[43,920,921],brittl:43,broadcast:[40,41,43,853,855,867,869,877,878,879,881,900,906,996,1007,1024,1053,1054,1055,1063,1116,1119,1127,1132,1135,1210,1212,1213,1214,1215,1216,1217,1218],broadcast_to:[296,703,996],build:[1147,1247,1264,1275,1276,1277],build_mod:[1264,1275,1276,1277],builder:1247,built:[922,996,999,1147,1264,1275,1276,1277],builtin:43,builtin_ab:[251,881],builtin_add:[251,881],builtin_and:[251,881],builtin_bool:[251,881],builtin_contain:[251,881],builtin_deepcopi:[251,881],builtin_dir:[251,881],builtin_eq:[251,881],builtin_float:[251,881],builtin_floordiv:[251,881],builtin_g:[251,881],builtin_getattr:[251,881],builtin_getattribut:[251,881],builtin_getitem:[251,881],builtin_gt:[251,881],builtin_int:[251,881],builtin_invert:[251,881],builtin_l:[251,881],builtin_lt:[251,559,690,881],builtin_mul:[251,881],builtin_n:[251,881],builtin_neg:[251,881],builtin_or:[251,881],builtin_po:[251,881],builtin_pow:[43,251,881],builtin_radd:[251,881],builtin_rand:[251,881],builtin_rfloordiv:[251,881],builtin_rmul:[251,881],builtin_ror:[251,881],builtin_rpow:[251,881],builtin_rsub:[251,881],builtin_rtruediv:[251,881],builtin_rxor:[251,881],builtin_setitem:[251,881],builtin_some_op:43,builtin_sub:[251,881],builtin_truediv:[251,881],builtin_xor:[251,881],busi:43,bypass:1290,cach:[922,938,996,1008],cache_fn:996,calcul:[40,41,42,43,853,854,862,863,865,881,906,1127,1135],call:[43,922,966,996,1062,1070,1087,1093,1097,1147,1191,1192,1195,1199,1264,1275,1276,1277,1280,1284,1290,1293],callabl:[40,41,920,921,922,931,932,966,996,1008,1020,1022,1051,1087,1143,1144,1145,1146,1147,1191,1195,1196,1197,1199,1200,1228,1239],can:[43,922,964,965,966,996,1064,1109,1111,1147,1247,1289,1290,1293],cancel_join_thread:1147,cannot:43,captur:1247,cast:[40,41,131,296,441,571,703,972,996,1012,1109,1111,1115],catch_except:[996,1020],categori:43,caus:43,ceil:[87,219,402,526,657,853,996,999],cell:[1228,1238,1264,1273],certain:[40,41,996,999,1049,1050],chain:[40,41,1143,1144,1145,1286,1287],chang:[43,922,996,1064,1147,1191,1193,1200,1247,1289],channel:[996,1029,1109,1111,1112,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274],check:[15,16,17,18,19,40,41,43,922,961,971,972,977,986,995,996,1006,1025,1038,1046,1079,1089,1093,1099,1147,1191,1192,1199,1247,1290],check_nest:[1191,1199],check_shap:[40,41],check_submod_ret:[1276,1277],check_typ:[40,41],choic:[1247,1290],choleski:[780,1116],choos:[996,1090,1116,1121,1127,1132,1247],choose_random_framework:59,chosen:[40,41,996,999,1090],chunk:[922,964,965,966,1147],chunk_siz:[922,966,1147],circl:[1127,1128,1130],clark:1247,clear:[43,922,938,1147],clear_framework_stack:59,clear_mem_on_dev:[439,695,922],click:1247,clip:[40,41,296,441,703,996,1010,1011,1053,1055,1247],clip_matrix_norm:996,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,996],clipped_delta:1147,clone:[40,41,922,941,942,943,944,1147],clone_arrai:1147,clone_it:1147,clone_nest:1147,clonedit:1147,cloneditem:1147,clonednest:1147,close:[43,1109,1114,1127,1130,1147,1293],closest:[972,977],closest_valid_dtyp:972,code:[40,41,42,43,491,1247,1248,1289,1290],codebas:[922,964,965,1147,1247,1290,1293],codomain:[853,854,865],colab:1247,collect:[15,40,41,439,441,475,480,484,488,489,491,881,920,922,972,996,1093,1109,1116,1124,1127,1147,1191,1203,1210,1220,1228,1241,1245,1250,1264,1278,1280],color:[40,41,42,1291,1292],column:[996,1039],combin:[40,41,42,1109,1114,1247,1293],combined_batch_s:1147,come:1290,command:1247,comment:43,commit:1293,common:[40,41,43,1127,1132],common_key_chain:[40,41],commun:[43,1247,1290],communuti:43,compar:[40,41,996,998,1004,1005],comparison_oper:[0,9,10],compat:[43,853,855,867,869,877,878,879,881,900,906,996,1024,1064,1127,1135,1247,1293],compil:[296,441,703,1276,1277,1280,1281,1282,1283,1284,1285],compile_on_next_step:[1276,1277,1280,1281,1282,1283,1284,1285],complet:[40,41,43,1116,1121,1147],complex:[1290,1293],compon:[996,1016],composit:43,comput:[40,41,853,855,857,861,864,867,869,881,900,922,966,996,1010,1011,1017,1018,1024,1052,1093,1095,1096,1097,1098,1100,1101,1102,1104,1106,1109,1112,1116,1117,1118,1119,1120,1121,1124,1125,1126,1127,1128,1130,1131,1132,1136,1137,1138,1139,1141,1191,1195,1210,1211,1212,1213,1214,1215,1216,1217,1218,1228,1229,1230,1231,1232,1233,1234,1235,1237,1239,1241,1242,1243,1244],concat:[40,41,922,951,952,953,954,966,996,1029,1147],concaten:[40,41,131,296,441,571,703,996,1029,1147,1247],concatten:[40,41,922,951,952,953,954,966,1147],condit:[441,920,921,996,1090,1191,1199],conditon:[1191,1199],config:[40,41,1147],config_list:1147,configur:[40,41],conflict:43,conform:43,conjunct:1290,connect:[1264,1274,1275],consid:[40,41,1116,1121,1289,1293],consist:[40,41,922,954,1147,1210,1211,1276,1277,1290],constant:[922,931,932,996,1013,1147,1191,1195,1241,1242,1243,1244,1245,1246,1255,1256,1260,1263,1276,1277,1278,1279,1290],constant_kwarg:1147,constant_pad:[296,441,571,703,996],constitu:[40,41],construct:[996,1081,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289],constructor:[40,41,42,996,1000,1286,1287],consum:[922,1147],cont_feat_dim:[1228,1239],contaienr:[40,41],contain:[15,18,19,42,43,844,846,847,848,853,854,855,859,861,862,863,865,867,869,874,875,877,878,879,881,900,906,922,941,945,966,972,976,996,997,1001,1002,1009,1010,1011,1014,1024,1038,1053,1055,1065,1076,1077,1093,1095,1096,1098,1100,1101,1102,1127,1135,1143,1144,1145,1146,1147,1203,1204,1210,1212,1213,1214,1216,1218,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[441,703,996],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[441,996,1056,1228,1239,1264,1275],context_dim:[1264,1275],contextmanag:[59,60],continu:[43,1147,1290],contract:[40,41,1210,1211],contribut:[1247,1248],contributor:[43,1247],control:1247,conv1d:[198,381,505,833,1228,1247,1264],conv1d_transpos:[198,381,505,833,1228],conv1dtranspos:[1247,1264],conv2d:[198,381,505,640,833,1228,1247,1264],conv2d_transpos:[198,381,505,833,1228],conv2dtranspos:[1247,1264],conv3d:[198,381,505,640,833,1228,1247,1264],conv3d_transpos:[198,381,505,833,1228],conv3dtranspos:[1247,1264],convent:[40,41,1210,1211],conver:[922,938,949,961,968,971,1147],convers:[16,17,18,19,40,41,1147,1247],convert:[15,16,17,18,19,40,41,43,922,949,950,972,978,984,985,996,1073,1084,1085,1109,1111,1115,1116,1123,1147,1191,1193,1200,1247,1254],convert_dtyp:972,convolut:[1228,1229,1230,1231,1232,1233,1234,1235,1264,1265,1266,1267,1268,1269,1270,1271],cool:43,cooler:43,coordin:[996,1054,1127,1128,1130,1132],copi:[40,41,43,491,996,1015,1147,1191,1193],copy_arrai:[441,703,996],copy_nest:1191,core:[439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,489,490,491,492,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,924,925,926,927,928,929,931,932,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1247],corner:43,correct:[43,1247,1290],correctli:[40,41,43,1116,1119,1127,1132,1210,1212,1213,1214,1215,1216,1217,1218],correspond:[40,41,43,881,906,996,1012,1203,1204],cos:[87,402,526,657,853,996,1029,1127,1128,1141,1290],cosh:[87,402,526,657,791,853,1127],cosin:[853,857,858,1127,1128,1129,1134],cost:[1093,1095,1096,1098,1100,1101,1102,1143,1144,1145,1146],cost_fn:[1143,1146],could:1293,count:[40,41,870,871,877,878,879,1147,1210,1215,1217],cours:43,cprint:1291,cpu:[40,41,43,922,959,961,967,968,971,996,999,1003,1031,1032,1039,1049,1050,1058,1059,1060,1066,1067,1092,1147,1203,1204,1205,1206,1207,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1286,1287,1289,1290],creat:[40,41,844,845,846,848,922,931,932,996,999,1003,1030,1031,1032,1039,1049,1050,1058,1059,1060,1066,1067,1083,1092,1093,1106,1147,1203,1204,1205,1206,1207,1247,1248,1253,1254,1255,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289,1293],create_if_abs:[40,41],create_vari:1255,creation:[40,41,42,43],creation_funct:[392,393,394,395,396,844,845,846,847,848],crop:[1109,1113],crop_siz:[1109,1113],cross:[296,703,996,1241,1242,1243,1244],cross_entropi:1241,cuda:[40,41,922,931,950,967,996,999,1003,1031,1032,1039,1049,1050,1058,1059,1060,1066,1067,1092,1147,1203,1204,1205,1206,1207,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1286,1287],cumprod:[131,296,441,703,996],cumsum:[703,996],cumul:[996,1017,1018],current:[40,41,42,43,922,931,955,956,958,962,972,978,986,995,996,1019,1033,1041,1045,1057,1061,1147,1191,1192,1199,1247,1293],current_framework:59,current_framework_str:[441,703,996,1147],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1228,1229,1230,1231,1232,1233,1234],d_out:[1228,1229,1230,1231,1232,1233,1234],da_can_termin:1147,da_dim_s:[922,1147],da_direct:1147,da_tune_step:[922,1147],dai:1293,daniel:1247,data:[40,41,42,43,844,845,846,847,848,850,851,853,854,855,859,861,865,867,869,870,871,877,878,879,881,900,906,922,924,925,926,927,928,929,934,935,936,950,972,976,977,978,982,983,984,985,986,987,988,995,996,999,1003,1024,1030,1039,1046,1059,1060,1064,1075,1079,1092,1093,1099,1107,1127,1135,1147,1228,1237,1247],data_format:[1228,1229,1230,1231,1232,1233,1234,1235,1264,1265,1266,1267,1268,1269,1270,1271],data_type_funct:[397,399,400,849,850,851],dataset:[40,41],datatyp:[40,41,972,977,987,988],dcdw:[1093,1095,1096,1098,1100,1101],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1093,1100,1101,1280,1282,1283],decay_lambda:[1093,1100,1101,1280,1282,1283],decid:[40,41,1293],decompos:[1116,1117,1121],decomposit:[1116,1117,1121,1122],decor:43,decrement:[996,1042],dedic:[1093,1107,1253,1254],deep:[40,41,1247],deep_copi:[40,41],deeper:[922,944,948,954,1147,1191,1200,1247],deepli:[1191,1193],def:[43,60,83,215,398,522,653,923,930,933,973,974,975,1094,1147,1151,1158,1247,1256,1259,1262,1289,1290,1293],default_dev:43,default_devic:922,default_dtyp:[43,972],default_float_dtyp:972,default_int_dtyp:972,default_key_color:[40,41,42],default_nod:1147,default_rng:491,default_v:[996,1020],defaultdevic:[922,923],defaultdtyp:[972,973],defaultfloatdtyp:[972,974],defaultintdtyp:[972,975],defer:43,defin:[43,996,1016,1058,1060,1092,1203,1205],definit:43,degre:[853,857,1127,1139,1141],del:1147,delai:43,delet:43,delta:[1093,1095,1147],delta_dim_s:1147,delta_percent_mem:1147,delta_sf:1147,delta_util:1147,demo:1247,denomin:[996,1028,1035,1069,1076,1077,1245,1246,1278,1279],denot:43,dens:[1264,1274],depend:[43,853,854,862,863,881,906,996,1090,1116,1122,1247],depth:[40,41,441,466,922,944,948,954,996,1037,1058,1147,1191,1200,1276,1277],depth_cutoff:[40,41],depthwis:[1228,1235,1264,1271],depthwise_conv2d:[198,381,505,640,833,1228],depthwiseconv2d:[1247,1264],deriv:[1093,1095,1096,1098,1100,1101,1102,1191,1193,1200,1247,1276,1280,1284,1286],descend:[874,875,1116,1122],descent:[1093,1098,1280,1285],describ:[40,41,1210,1211],descript:[867,869],design:[1247,1248],desir:[40,41,922,967,972,976,996,999,1003,1039,1040,1059,1060,1092,1109,1114,1147,1210,1212,1213,1214,1216,1218],desired_aspect_ratio:[480,483,1109,1114],desired_percent_increas:1147,detail:1293,detect:[40,41,1191,1192,1199],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,853,854,855,859,865,867,869,877,878,879,881,906,922,957,959,960,969,972,976,977,983,986,987,988,995,996,998,999,1003,1004,1005,1038,1041,1045,1046,1079,1089,1093,1099,1127,1135,1143,1144,1145,1146,1147,1228,1239],dev:[40,41,42,43,124,290,439,441,442,445,455,456,457,464,465,466,467,468,469,474,491,492,564,695,922,925,926,928,929,931,932,935,936,938,939,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,958,961,962,963,964,965,966,967,968,971,996,999,1003,1031,1032,1039,1049,1050,1058,1059,1060,1066,1067,1092,1093,1108,1203,1204,1205,1206,1207,1253,1254,1255,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1286,1287],dev_clon:[40,41,922],dev_clone_arrai:922,dev_clone_it:922,dev_clone_nest:922,dev_dist:[40,41,922],dev_dist_arrai:922,dev_dist_it:922,dev_dist_nest:922,dev_from_str:[43,124,290,439,564,695,922],dev_mapp:922,dev_str:[40,41],dev_to_str:[124,290,439,564,695,922],dev_unifi:922,dev_unify_arrai:922,dev_unify_it:922,dev_unify_nest:922,dev_util:922,devclonedit:922,devcloneditem:922,devclonednest:922,devdistit:922,devdistitem:922,devdistnest:922,develop:[43,1247,1290,1293],deviat:[40,41,1203,1206,1210,1216,1245,1246,1278,1279],devic:[21,40,41,43,392,393,394,396,440,441,454,844,845,846,847,848,924,925,926,927,928,929,931,932,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,996,999,1003,1030,1031,1032,1039,1049,1050,1058,1059,1060,1066,1067,1092,1093,1108,1203,1204,1205,1206,1207,1247,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1286,1287],devmanag:[922,930],devmapp:[922,932],devmappermultiproc:922,diag:[1116,1122],diagon:[101,228,416,540,671,844,847,867,996,1039],dict:[15,16,17,18,19,40,41,42,922,924,927,931,932,934,944,945,946,947,948,996,1021,1022,1023,1051,1143,1144,1145,1147,1191,1193,1194,1195,1198,1200,1253,1254],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,849,850,922,941,942,945,946,1116,1121,1147,1228,1237,1247,1290,1293],differenti:[1247,1290],dilat:[1228,1229,1230,1231,1232,1233,1234,1235,1264,1265,1266,1267,1268,1269,1270,1271],dim:[40,41,43,996,1058,1109,1110,1114,1116,1122,1147,1264,1275],dim_siz:[40,41,922,1147],dimens:[40,41,42,844,847,867,868,869,870,871,877,878,879,922,953,996,1007,1012,1016,1021,1022,1023,1026,1029,1036,1048,1058,1063,1064,1074,1075,1078,1086,1088,1109,1113,1116,1119,1122,1143,1144,1145,1146,1147,1203,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1225,1228,1229,1230,1231,1232,1233,1234,1235,1238,1241,1243,1244,1264,1265,1266,1267,1268,1269,1270,1271,1274,1275],dimension:[40,41,491,867,869,877,878,879,996,1074,1075,1116,1122],direct:1147,directli:[43,1191,1200,1290,1293],directori:[996,1071,1082],discord:43,discret:[1241,1243],discuss:43,disk:[40,41,1109,1111],distanc:[996,999],distribut:[40,41,922,941,945,946,947,948,1147,1203,1204,1205,1206,1207,1228,1236,1264,1272,1276,1277],distribute_nest:1147,distributedarrai:[40,41],distrubt:[1241,1243],dive:[1247,1290],divid:[40,41,996,1074,1076,1127],dividend:[1127,1135],divis:[996,1028,1035,1069,1076,1077,1093,1095,1096,1100,1127,1135,1280,1281,1282],divisor:[1093,1095,1096,1100,1127,1135,1280,1281,1282],doc:1247,docstr:43,doe:[40,41,43,996,999,1074,1289],doesn:[1116,1121,1247],doing:43,domain:[853,854,865,1127,1128],don:[43,1247],done:43,door:1293,dot:[1116,1118,1228,1239,1240,1264,1275],down:1289,downscal:[996,1010,1011],drag:[1247,1293],draw:[1203,1204,1206,1207],drawn:[1203,1204,1205,1206,1207],drop:[1247,1293],dropout:[1228,1247,1264,1275],dropout_r:[1264,1275],ds_tune_step:922,dtype:[40,41,43,131,296,392,393,394,396,397,399,400,441,442,445,446,454,457,467,474,571,703,844,845,846,848,849,850,851,976,977,978,979,980,981,983,984,985,986,987,988,989,990,991,992,993,994,995,996,999,1003,1030,1039,1058,1059,1060,1092],dtype_bit:[131,296,441,571,703,972],dtype_from_str:[43,131,296,441,571,703,972],dtype_in:[441,451,452,453,972,978,983,984,985,986,987,988,995],dtype_to_str:[131,296,441,571,703,972],duplic:[40,41],dure:[40,41,43,920,921,996,1087,1093,1095,1096,1100,1143,1144,1145,1146,1276,1277,1280,1281,1282,1284],dynam:[441,447,920,921],each:[40,41,42,43,853,854,855,859,861,862,863,865,874,875,881,900,906,922,931,932,941,942,943,944,945,946,947,953,965,966,996,997,998,1013,1024,1063,1074,1078,1081,1091,1093,1096,1098,1100,1101,1102,1109,1112,1116,1122,1127,1130,1135,1137,1138,1147,1191,1195,1203,1204,1210,1211,1228,1229,1230,1231,1232,1233,1234,1235,1236,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1275,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1290],eager:1290,easi:1293,easili:1247,econom:1293,ecosystem:1247,edg:[996,1009,1013,1091],effect:[1093,1102],effective_grad:[1093,1102],effici:1293,einop:[40,41,996,1021,1022,1023],einops_rearrang:[40,41,996],einops_reduc:[40,41,996],einops_repeat:[40,41,996],einstein:[40,41,1210,1211],einsum:[40,41,184,369,493,630,813,1210],either:[40,41,43,996,1020,1051,1054,1056,1143,1144,1145,1146,1147,1264,1275,1276,1277,1290],eleg:1147,element:[40,41,43,491,844,847,853,854,855,856,857,858,859,861,862,863,864,865,870,871,874,875,877,878,879,881,900,906,922,943,947,953,972,976,996,997,999,1001,1002,1004,1005,1009,1010,1011,1017,1018,1024,1027,1028,1039,1040,1053,1055,1063,1065,1074,1085,1090,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1147,1210,1211,1213,1215,1217,1220,1221,1222,1223,1224,1225,1226,1227,1228,1236,1264,1272],elementwis:[40,41],elementwise_affin:[1278,1279],elementwise_funct:[853,854,855,856,857,858,859,860,861,862,863,864,865],elemtn:[1203,1204],elif:1147,els:[996,1006,1020,1025,1147],elsewher:[996,1090],emphas:1247,empti:[40,41,77,209,392,516,647,844,1116,1121,1147],enabl:[40,41,42,43,1247],encapsul:[849,851],encod:[996,1029,1109,1111],end:[996,999,1247,1290],engag:43,ensur:43,entir:[40,41,877,878,879,922,966,1147,1247,1264,1273],entri:[40,41,996,1049,1050,1074,1075],entropi:[1241,1242,1243,1244],enumer:1147,environ:1247,eps:[397,849,850],epsilon:[1093,1095,1096,1100,1241,1242,1243,1244,1245,1246,1278,1279,1280,1281,1282],equal:[40,41,441,571,703,853,857,859,996,998,1004,1005,1013,1074,1091,1127,1139,1141,1203,1207],equality_matrix:[996,998],equat:[40,41,1210,1211],equival:[867,869,996,999,1127,1141],erf:[489,791,1127],error:[40,41,43,922,996,1075,1127,1136,1147,1220,1221,1276,1277,1280,1284],essenti:43,etc:[40,41,43,922,967,996,999,1003,1031,1032,1039,1049,1050,1058,1059,1060,1066,1067,1092,1147,1203,1204,1205,1206,1207,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1286,1287,1293],euclidean:[867,869],euler:843,evalu:[40,41,853,862,863,877,878,879,996,1054,1191,1192,1199],even:[43,1293],evenli:[40,41,996,999,1049,1050,1074],everi:[43,996,998,1293],exact:[40,41],exampl:[43,920,921,996,1009,1078,1116,1121,1247,1289,1290,1293],example_input:[441,447,920,921],exc_tb:1147,exc_typ:1147,exc_val:1147,exce:[996,1055],except:[40,41,44,47,877,878,879,996,999,1006,1012,1020,1087,1147],excess_s:1147,excit:[1247,1290],exclud:[59,61,996,999,1203,1207],exclus:[40,41,441,449,462,475,477,996,1017,1046,1093,1099,1203,1205],execut:[43,996,1087,1290],execute_with_gradi:[164,345,475,609,770,1093,1247,1289],exist:[40,41,996,1020,1147,1247,1280,1284,1293],exp:[791,1127],expand:[40,41,996,1026,1029],expand_dim:[40,41,296,703,996,1147],expect:[996,1000],explain:[43,1290],explicitli:[43,1264,1273,1275,1276,1277,1290],expon:[43,881,906,996,1077],exponenti:[43,881,906,1127,1136,1137],expos:[996,1003,1014],express:[996,1054],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1093,1097],extract:[867,868],eye:[1116,1118],fabian:1247,fabio:1247,factor:[922,931,964,965,966,1093,1095,1096,1100,1101,1116,1122,1147,1228,1229,1230,1231,1232,1233,1234,1235,1264,1265,1266,1267,1268,1269,1270,1271,1280,1281,1282,1283],fail:43,falck:1247,fall:[1276,1277,1280,1284],fallback_to_non_compil:[1276,1277,1280,1284],fals:[15,18,19,40,41,42,59,66,67,68,69,70,439,441,449,450,462,470,473,475,476,477,484,485,853,859,867,869,874,875,877,878,879,922,940,953,961,966,971,972,979,980,981,982,996,998,1017,1020,1025,1029,1036,1046,1051,1072,1074,1088,1090,1093,1096,1097,1098,1099,1100,1101,1102,1116,1119,1143,1144,1145,1146,1147,1191,1192,1193,1195,1199,1200,1210,1212,1213,1214,1215,1216,1217,1218,1253,1254,1276,1277,1280,1281,1282,1283,1284,1285],fan_in:1255,fan_mod:1255,fan_out:1255,far:[1191,1192,1199,1289],faster:[920,921],favourit:[1247,1289],feasibl:1293,feat_dim:[1228,1239,1240],fed:[922,966,1147],feed:[922,966,1147],few:43,field:1293,file:[40,41,43,996,1071,1082,1276,1277],filepath:[40,41],fill:[40,41,844,845,846,848,996,1030,1059,1203,1205],fill_valu:[441,454,996,1030],filter:[1228,1229,1230,1231,1232,1233,1234,1235,1264,1265,1266,1267,1268,1269,1270,1271,1293],filter_s:[1264,1265,1266],filter_shap:[1264,1267,1268,1269,1270,1271],find:[40,41,43,1293],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[82,83,214,215,397,398,521,522,652,653,849],finish:[1247,1293],finit:[853,859],first:[40,41,43,491,853,855,920,921,922,953,996,1004,1012,1016,1024,1049,1050,1078,1080,1093,1097,1116,1122,1143,1144,1145,1146,1147,1191,1192,1199,1203,1209,1210,1215,1217,1264,1275,1276,1277,1280,1284,1290,1293],firstlayersiren:[1247,1255],firstli:[1290,1293],fist:[922,966,1147],fit:[40,41,439,441,475,480,484,488,489,491,996,1063,1109,1114],fix:43,fkt:1293,flag:[40,41,43,1093,1099],flat:[40,41,43,996,1063,1066],flat_list:[40,41],flatten:[40,41,867,869,996,1029,1063,1210,1212,1213,1214,1216,1218],flatten_key_chain:[40,41,1276,1277],flexibl:[1247,1290],flip:[40,41,104,231,419,543,674,870],float32:[43,441,457,972,976,984,985,996,999,1003,1039,1059,1060,1092],float_dtyp:[972,980,990],float_img_to_uint8_img:1109,floor:[296,441,703,996,1028,1147],floormod:[296,441,703,996],fluid:1293,folder:[43,1247],follow:[40,41,43,849,851,867,869,922,966,996,1042,1043,1044,1076,1077,1093,1096,1098,1100,1101,1102,1147,1191,1195,1200,1228,1239,1240,1247,1264,1274,1280,1284],followng:[849,850],fomaml_step:1143,forget:[1093,1095,1096,1100,1280,1281,1282],fork:[996,1056,1247,1248],forkserv:[996,1056,1147],form:[15,16,17,18,19,40,41,844,847,996,1003,1093,1096,1098,1100,1101,1102,1191,1193,1200,1228],format:[40,41,43,922,940,972,976,978,982,996,999,1003,1039,1059,1060,1092,1147,1210,1211,1247,1289,1290],format_fn:[40,41],format_key_chain:[40,41],forward:[1276,1277,1280,1284,1289],found:[40,41,42],fourier:[996,1029],fourier_encod:996,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,83,84,85,88,89,90,91,92,93,94,95,96,97,98,99,102,103,105,109,112,113,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,168,169,170,172,173,174,178,179,180,181,182,183,185,186,187,188,189,190,191,194,196,197,199,200,201,202,203,204,205,210,211,212,213,215,216,217,220,221,222,223,224,225,226,229,230,232,236,239,240,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,351,352,353,355,356,357,358,359,361,362,365,366,367,368,370,371,372,373,374,375,376,377,380,382,383,384,385,386,387,388,393,394,395,396,398,399,400,403,404,405,406,407,408,409,410,411,412,413,414,417,418,420,424,427,428,440,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,476,477,478,479,481,482,483,485,486,487,490,492,494,495,496,497,498,499,500,503,504,506,507,508,509,510,511,512,517,518,519,520,522,523,524,527,528,529,530,531,532,533,534,535,536,537,538,541,542,544,548,551,552,560,565,566,567,568,569,570,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,610,611,612,613,615,616,617,619,620,621,622,626,627,628,629,631,632,633,634,635,636,637,641,642,643,648,649,650,651,653,654,655,658,659,660,661,662,663,664,665,666,667,668,669,672,673,675,679,682,683,691,696,697,698,699,700,701,702,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,771,772,773,774,775,777,778,779,781,782,783,784,785,786,787,789,790,792,793,794,795,796,797,798,799,800,801,802,803,804,805,807,808,809,810,811,812,814,815,816,817,818,819,820,823,824,825,826,827,828,829,831,832,834,835,836,837,838,839,840,845,846,847,848,850,851,853,854,855,856,857,858,859,860,861,862,863,864,865,867,868,869,871,875,878,879,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1125,1126,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1242,1243,1244,1246,1247,1251,1252,1253,1254,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1292,1293],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1147,framewrk:[996,1056],free:43,freed:43,freeli:43,frequenc:[996,1029],from:[40,41,42,43,853,861,865,867,868,870,871,877,878,879,922,931,932,966,972,978,996,1020,1031,1032,1039,1064,1075,1083,1090,1093,1096,1100,1109,1113,1116,1121,1143,1144,1145,1146,1147,1191,1193,1200,1203,1204,1205,1206,1207,1210,1215,1217,1228,1236,1239,1247,1253,1254,1264,1272,1275,1280,1284,1289,1290],from_cal:[1276,1277],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,131,296,441,571,703,849,850,996,1116,1121,1247],full_matric:[1116,1122],fulli:[43,1247,1264,1274,1275,1289],func:[40,41,441,447,475,476,920,921,922,966,996,1008,1093,1097,1147],further:[43,1293],furthermor:1293,futur:1293,gain:1255,gamma:[1245,1246],gather:[40,41,131,296,441,571,703,996,1032],gather_nd:[40,41,131,296,441,571,703,996],gauss:[1127,1136],gaussian:[1220,1221],geglu:[1247,1250],gelu:[379,502,822,1220,1247,1250],gener:[23,40,41,43,439,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,491,920,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1099,1203,1205,1207,1208,1247,1280,1284],geometr:[996,1029],get:[40,41,43,849,850,851,922,931,932,940,955,956,961,965,968,971,972,982,983,996,1000,1033,1034,1035,1062,1147,1247,1264,1273,1293],get_all_arrays_in_memori:996,get_all_arrays_on_dev:922,get_framework:59,get_initial_st:[1264,1273],get_min_bas:996,get_min_denomin:996,get_mod_kei:[1276,1277],get_num_dim:[441,703,996],get_referrers_recurs:996,getfullargspec:1147,gist:1247,give:[43,874,875,996,1064,1290],given:[40,41,43,844,845,846,848,870,871,874,875,922,955,961,964,965,966,968,971,972,976,996,999,1003,1009,1017,1018,1032,1049,1050,1059,1060,1063,1066,1067,1074,1081,1086,1088,1092,1093,1095,1096,1098,1100,1101,1102,1116,1118,1123,1127,1128,1147,1191,1196,1197,1203,1206,1207,1209,1210,1213,1215,1216,1217,1218,1228,1229,1230,1231,1232,1233,1234,1235,1253,1254,1293],global:[40,41,42,922,931,932,939,964,965,966,972,979,980,981,996,1019,1034,1035,1062,1068,1069,1070,1076,1077,1093,1108,1147,1245,1246,1278,1279],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1247,1255,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274],good:43,googl:1247,got:[43,1247],gpu0:43,gpu2:43,gpu:[922,957,960,1147],gpu_is_avail:[439,922,1147],grad:[1247,1280,1284,1289],gradient:[25,40,41,476,477,478,479,922,966,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1112,1143,1144,1145,1146,1247,1280,1281,1282,1283,1284,1285,1289,1293],gradient_descent_upd:[1093,1143,1144,1145,1146],gradient_imag:[167,350,480,614,776,1109],gradienttrack:[1093,1094],graph:[1093,1096,1098,1100,1101,1102,1276,1277],greater:[40,41,996,999,1027,1075,1203,1207],green:[40,41,42,1291,1292],grid:[996,1054],group:[1109,1114],guid:[43,1247,1248,1293],gym:1247,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1293,half:[996,999,1147,1203,1207],hand:1247,handl:[40,41,42,43,920,921,922,938,940,949,950,961,968,971,1093,1096,1098,1100,1101,1102,1147,1280,1281,1282,1283,1284,1285],happen:43,has:[40,41,43,996,1078,1116,1121,1127,1131],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,996],hasattr:1147,have:[40,41,43,844,845,847,849,850,853,854,855,859,861,865,867,869,870,871,877,878,879,881,900,906,996,1012,1016,1021,1022,1023,1024,1030,1078,1093,1099,1107,1116,1122,1127,1135,1147,1247,1289,1290],haven:43,hdf5:[40,41,1276,1277],head:[1228,1239,1264,1275],head_dim:[1264,1275],height:[1109,1114],height_cutoff:[40,41],help:[43,59,397,439,440,922,934,935,936,937,972,1093,1247,1255,1257,1258,1260,1261,1263],here:[43,1247],hidden:[1228,1238,1264,1273],hierarch:[996,1014],hierarchi:[40,41],high:[40,41,491,1203,1205,1207],higher:[1093,1096,1098,1100,1101,1102,1116,1122],highest:[1203,1205],highest_util:1147,highest_util_nod:1147,highli:1247,highlight:1293,hint:43,hkt:1293,hold:[972,976,996,999,1003,1066,1067],host:1247,hot:[996,1058],hour:43,how:[1247,1264,1275,1276,1277,1290,1293],howev:[43,1290],http:1293,hyperbol:[853,854,858,1127,1129,1133,1134,1140,1142,1220,1227],hypothet:[43,1293],icon:1247,idea:1247,ident:[40,41,43,131,296,441,571,703,996],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[843,849,850,853,865],if_exist:[40,41],ignor:[40,41,1280,1284],ignore_key_error:[40,41],ignore_miss:[1280,1284],ignore_non:[40,41],iii:43,iinfo:[82,214,397,521,652,849],imag:[27,481,482,483,996,1048,1110,1111,1112,1113,1114,1115,1228,1229,1230,1231,1232,1234,1235,1247,1293],image_dim:[1109,1113],imkkhk:1293,immedi:[1247,1290,1293],implement:[43,853,854,862,863,881,906,1247,1290,1293],in_featur:[1228,1237],inadvert:43,includ:[40,41,43,867,869,877,878,879,996,999,1038,1076,1077,1089,1191,1192,1203,1207,1264,1274,1275,1278,1279,1289],include_deriv:[1191,1193,1200],include_empti:[40,41],include_inf:[40,41,996,1038,1089],include_nest:[1191,1192],include_self:[40,41],inclus:[43,1203,1205],incom:[1228,1237],increas:[922,944,948,954,996,1013,1026,1091,1147,1191,1200],increasingli:1293,increment:[996,1043,1147],inde:1247,indent:[40,41,42],independ:[1203,1204],index:[40,41,441,491,996,1001,1002,1031,1032,1054,1075,1078,1191,1194,1196,1197,1198,1201],index_nest:1191,indic:[40,41,441,455,456,466,468,469,867,869,874,875,996,1001,1002,1031,1032,1040,1058,1066,1067,1191,1192,1194,1196,1197,1198,1199,1201,1202,1203,1204,1220,1225,1228,1229,1230,1231,1232,1233,1234,1235,1245,1246,1264,1265,1266,1267,1268,1269,1270,1271,1276,1277],indices_wher:[131,296,441,703,996],indistinguish:[853,865],inevit:1293,inf:[40,41,867,869,996,1038,1047,1089,1127,1131],infer:[853,861,867,868,920,921,996,1036,1039,1064,1072,1109,1113,1116,1121,1290,1293],infin:[853,854,859,865,867,869,996,1047],infinit:[853,865],inform:[849,850,851,1093,1104],init_c:[1228,1238],init_h:[1228,1238],init_on_first_step:[1280,1284],initi:[40,41,42,43,59,397,439,440,922,934,935,936,937,972,1093,1147,1228,1238,1247,1257,1258,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1280,1284],initialz:[1276,1277],inner:[1143,1144,1145,1146],inner_batch_fn:[1143,1144,1145],inner_batch_shap:[1228,1237],inner_cost_fn:[1143,1144,1145],inner_grad_step:[1143,1144,1145,1146],inner_learning_r:[1143,1144,1145,1146],inner_optimization_step:[1143,1144,1145,1146],inner_v:[1143,1144,1145],innermost:[844,847],inp:1147,inplac:[40,41,996,1006,1041,1045,1079,1093,1096,1098,1100,1101,1102,1253,1254,1280,1281,1282,1283,1284,1285],inplace_arrays_support:[441,996],inplace_decr:[131,296,441,571,703,996],inplace_incr:[131,296,441,571,703,996],inplace_oper:[0,11,12],inplace_upd:[40,41,131,296,441,571,703,996,1253,1254],inplace_variables_support:[441,996],input:[15,18,19,40,41,42,43,844,847,853,854,855,856,857,858,859,860,861,862,863,864,865,867,868,869,870,871,874,875,877,878,879,920,921,922,931,932,939,940,941,944,945,948,954,966,967,972,976,977,979,980,981,982,983,987,988,996,997,998,1001,1002,1004,1005,1006,1007,1009,1010,1011,1012,1013,1015,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1036,1038,1039,1040,1042,1043,1044,1046,1047,1048,1052,1053,1054,1055,1063,1065,1072,1073,1075,1078,1079,1080,1081,1083,1084,1085,1086,1088,1089,1091,1093,1097,1099,1104,1108,1109,1110,1111,1112,1113,1115,1116,1119,1121,1122,1124,1125,1126,1127,1129,1131,1133,1134,1135,1139,1140,1141,1142,1143,1144,1145,1146,1147,1203,1204,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1245,1246,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1278,1279,1290],input_ax:[922,966,1147],input_channel:[1264,1265,1266,1267,1268,1269,1270,1273,1274],input_queu:1147,inputs_split:1147,insert:[996,1026],insid:43,inspect:1147,inspir:1293,instal:1247,instanc:[15,16,17,18,19,40,41,43,491,881,900,906,922,931,1147,1253,1254,1286,1287],instead:[40,41,43,491,1210,1212,1213,1214,1215,1216,1217,1218,1293],int32:43,int64:[972,976,996,999,1003,1039,1059,1060,1092],int_dtyp:[972,981,991],integ:[40,41,491,849,851,853,855,856,867,869,877,878,879,972,988,996,999,1027,1065,1074,1203,1205,1208],integr:1247,intend:43,inter:1247,interact:1247,interchang:[40,41,996,1080],interest:1247,interfac:[996,1003,1290],intermedi:[40,41],intern:[40,41,922,1093,1107,1147,1191,1192,1199,1200,1255,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1286,1287],interpol:[996,1048],intersect:[1127,1128],interv:[40,41,877,878,879,996,999,1009,1049,1050,1127,1130,1203,1207],introduc:1293,inv:[780,1116,1293],invalid:[877,878,879],invalid_dtyp:972,invers:[853,854,1116,1118,1120,1127,1128,1129,1130,1131,1133,1293],invert:[1116,1118,1120],invest:1293,investig:43,invoc:[920,921],irrespect:1247,is_al:1147,is_arrai:[131,296,441,571,703,996,1147],is_float_dtyp:972,is_int_dtyp:972,is_mean:1147,is_sum:1147,is_vari:[164,345,475,609,770,1093],isfinit:[87,219,402,526,657,853],isinf:[296,571,703,996],isinst:1147,isnan:[87,219,402,526,657,853],isnumer:1147,issu:[1247,1248],issue_numb:43,item:[15,19,40,41,881,893,894,922,931,932,934,941,943,945,947,953,972,979,996,1014,1037,1076,1077,1147,1191,1195,1196,1197,1200,1201,1202,1247,1276,1277,1289],iter:[15,16,17,18,19,40,41,42,920,921,922,925,926,928,929,931,932,935,936,943,945,946,947,948,953,966,996,998,1007,1012,1013,1039,1054,1059,1063,1064,1067,1072,1074,1078,1081,1086,1091,1147,1191,1192,1193,1195,1199,1200],iterbal:[922,943,947,953,1147],its:[491,874,875,922,966,996,1039,1064,1080,1086,1147,1247],itself:[43,1191,1200],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,392,393,394,395,396,397,399,400,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,843,844,845,846,847,848,849,850,851,853,854,855,856,857,858,859,860,861,862,863,864,865,867,868,869,870,871,874,875,877,878,879,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,924,925,926,927,928,929,931,932,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1250,1251,1252,1253,1254,1255,1257,1258,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1291,1292],ivy_backend:[40,41],ivy_bay:1293,ivy_test:43,ivyfcmodel:1289,ivyh:[40,41,42],ivymodul:[195,830],jame:1247,jax:[43,1093,1099,1247,1293],jax_concat:1247,jnp:1247,join:[40,41,996,1012,1078,1147],journal:1247,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1247,1264,1273,1293],kaimingnorm:[1255,1259],kalman:1293,kalman_filt:1293,kalman_filter_step:1293,kalman_filter_upd:1293,keep:[40,41,922,967,996,1088,1147,1247,1248,1293],keep_inner_v:[1143,1144,1145],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1143,1144,1145],keepdim:[40,41,441,473,484,485,867,869,877,878,879,996,1088,1116,1119,1210,1212,1213,1214,1215,1216,1217,1218],kei:[15,16,17,40,41,42,43,881,886,922,934,996,1014,1143,1144,1145,1147,1191,1194,1198,1228,1239,1240,1247,1253,1254,1264,1275,1280,1284],kept:[40,41,42,1143,1144,1145],kera:1293,kernel:[1228,1238],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,922,931,932,944,948,954,996,1000,1021,1022,1023,1051,1147,1191,1195,1276,1277],keyword_color_dict:[40,41,42],kind:[849,850,851,1293],kwarg:[15,16,17,40,41,42,59,63,922,931,944,948,954,996,1051,1147,1253,1254,1276,1277],kwarg_stateful_idx:[1276,1277],kwargs_clon:1147,kwargs_dist:1147,kwargs_uni:1147,label:[43,1241,1242,1243,1244],lamb:[1093,1100,1247,1280],lamb_upd:1093,lambda:[1147,1280,1283,1285,1289],lar:[1093,1100,1101,1247,1280],larger:[849,850,996,1009],largest:[40,41,849,850,851,996,1001,1027],lars_upd:1093,last:[40,41,870,871,877,878,879,996,999,1016,1048,1074,1078,1116,1119,1122,1210,1215,1217,1220,1225,1228,1238,1264,1274],later:[40,41,996,1008],latest:[1264,1273],layer:[1093,1096,1098,1100,1102,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1245,1246,1247,1255,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1286,1287,1293],layer_norm:1245,layernorm:[1247,1278],layerwis:[1093,1101,1280,1283],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1191,1192,1199],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1220,1221,1222],leaky_relu:[822,1220],learn:[853,861,867,868,1093,1096,1098,1100,1101,1102,1116,1121,1143,1144,1145,1146,1203,1209,1247,1280,1281,1282,1283,1284,1285,1290,1293],learnabl:[1245,1246,1278,1279],least:43,leav:[15,18,19,40,41,1191,1192,1193,1199,1200],left:[40,41,43,1116,1119,1210,1212,1213,1214,1215,1216,1217,1218,1247],leftmost:[40,41],len:1147,length:[40,41,42,996,999,1064,1075,1086],lenton2021ivi:1247,lenton:1247,less:[40,41,43,87,219,402,526,657,853,856,867,869,1147,1203,1207],less_util_node_str:1147,let:[1290,1293],level:1247,librari:[1247,1289,1293],lightweight:1247,like:[43,1093,1099,1203,1207,1247,1289,1290,1293],likewis:43,limit:[40,41,42,43,849,850,851,996,1009,1010,1011],linalg:[29,1117,1118,1119,1120,1121,1122,1123,1247],line:43,linear0:[1247,1289],linear1:1247,linear2:1289,linear:[996,1029,1048,1116,1220,1221,1222,1223,1228,1236,1247,1264,1265,1266,1267,1268,1269,1270,1271,1289],linear_algebra:[484,485,486,487,867,868,869],linear_resampl:[131,296,441,571,703,996],linearli:[996,1029],link:[43,1247],linspac:[131,296,441,571,703,996,999],list:[15,18,19,40,41,392,393,394,396,844,845,846,848,870,871,877,878,879,922,931,932,941,942,944,945,946,948,951,952,966,996,999,1003,1005,1054,1073,1074,1083,1088,1143,1144,1145,1147,1191,1192,1193,1195,1199,1200,1228,1229,1230,1231,1232,1233,1234,1235,1247,1248,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271],list_join:[40,41,42],list_stack:[40,41],liter:[867,869],littl:1290,load:[40,41],loaded_kwarg:1147,loader:1247,local:43,local_set:[996,1037],locat:[43,853,860,996,1047,1203,1204],log1p:[87,402,526,657,853],log2:[87,402,526,657,853],log:[791,853,862,996,1050,1127,1147,1241,1242,1243,1244],logarithm:[853,862,863,1127,1138],logic:[31,853,864,877,878,879,1125,1126,1247],logical_and:[360,788,1124],logical_not:[87,219,402,526,657,853],logical_or:[360,788,1124],logit:[1241,1244],logspac:[131,296,441,571,703,996],look:[43,1290,1293],loop:[1143,1144,1145,1146],loss:[1242,1243,1244,1247,1289],loss_fn:[1247,1289],lot:1290,low:[40,41,491,1203,1205,1207],lower:[40,41,43,844,847,996,1053,1203,1207],lower_depth:[1276,1277],lowest:[15,18,19,40,41,1191,1200,1203,1205],lstm:[1228,1238,1247,1264],lstm_updat:[43,1228],machin:[849,850,851,853,861,867,868,1116,1121,1203,1209,1247,1290,1293],made:43,mai:[996,999,1020,1024,1247,1290,1293],main:[844,847,996,1039,1247],mainli:1247,maintain:43,make:[43,491,922,1147,1247,1290],maml:[1143,1144,1145],maml_step:1143,manag:[922,1147],manhattan:[867,869],mani:[40,41,43,996,1074,1247],manipulation_funct:[870,871],manner:[15,18,19,40,41,43,1191,1200],manual:[1191,1192,1199,1293],map:[40,41,42,853,860,922,931,996,1047,1147,1191,1196,1197,1200,1264,1275,1289],map_cont:[40,41],map_nest_at_index:1191,map_nest_at_indic:1191,map_sequ:[40,41],mapper:[922,931,932,1147],mark:43,mask:[1228,1239,1240],master:43,match:[40,41,996,1051],match_kwarg:996,math:[33,490,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1147,1247],mathbb:[1116,1123],mathbf:[1116,1123],mathemat:[843,867,869],matmul:[43,296,441,571,703,996,1293],matplotlib:1290,matric:[844,847,1228,1237],matrix:[40,41,844,847,867,868,996,998,1010,1052,1116,1117,1118,1119,1120,1121,1123,1228,1237,1264,1274],matrix_norm:[40,41,171,354,484,618,780,1116],matter:1247,max:[40,41,397,849,850,851,996,1010,1011,1022,1053,1066,1067,1147,1210,1212,1280,1282],max_batch_s:[40,41],max_chunk_s:[922,966,1147],max_depth:[40,41,922,926,929,936,944,948,954,996,1037,1147,1191,1200],max_dev_dim_step_ratio:922,max_freq:[996,1029],max_length:[40,41],max_node_dim_step_ratio:1147,max_norm:[40,41,996,1010,1011],max_split_factor_step_s:[922,1147],max_trust_ratio:[1093,1100,1280,1282],maxim:[1247,1290,1293],maximis:1247,maximum:[40,41,42,703,922,944,948,954,966,996,1001,1009,1010,1011,1029,1093,1100,1147,1191,1200,1210,1212],mayb:[15,18,19],mdi:1147,mean:[40,41,491,922,951,952,953,954,966,996,1022,1143,1144,1145,1146,1147,1191,1195,1203,1206,1210,1213,1216,1218,1255,1289,1293],measur:[1228,1239,1264,1275],mech:1247,mechan:[1247,1293],medic:1293,member:43,memori:[922,938,961,966,968,971,1147,1228,1238,1247],mention:43,merg:43,merge_with_upstream:43,meshgrid:[296,441,703,996],messag:[1291,1292],meta:[35,1144,1145,1146,1247],method:[40,41,42,43,491,996,1003,1014,1054,1066,1067,1093,1100,1101,1147,1191,1192,1199,1200,1247,1264,1275,1276,1277,1290],might:[996,1020,1293],min:[40,41,397,849,850,851,867,869,996,1022,1055,1066,1067,1076,1116,1121,1147,1210,1214],min_bas:[996,1077],min_denomin:[996,1076],min_dev_dim_s:922,min_node_dim_s:1147,min_sf_tune_step:[922,1147],min_unit_dev_tune_step:922,min_unit_node_tune_step:1147,mind:1247,mini:[1245,1246,1278,1279],minimum:[40,41,703,922,972,976,996,999,1002,1003,1009,1034,1035,1068,1069,1076,1077,1147,1210,1214],miss:[1280,1284],ml_framework:[996,999,1116,1121],mod:[996,1028],mod_depth:[1276,1277],mod_height:[1276,1277],mod_with_top_mod_key_chain:[1276,1277],mode:[40,41,484,486,920,921,922,951,952,953,954,966,1116,1121,1122,1147,1290],model:[1247,1289],modul:[40,41,42,59,996,1056,1147,1247,1248,1250,1251,1252,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1278,1279,1286,1287,1293],moment:[1093,1095,1096,1100,1280,1281,1282],more:[43,870,871,996,1078,1147,1247,1290,1293],more_util_node_str:1147,most:[40,41,43,1116,1121,1247,1293],move:[40,41,43,922,967,1147],much:[43,1247,1293],multi:[491,996,1056,1228,1239,1264,1275],multi_head_attent:1228,multi_index_nest:1191,multi_map:[40,41],multi_nod:1147,multidev:[922,933,934,935,954],multidevcontain:[40,41],multidevic:[922,931],multidevit:[922,925,928,931,932,936],multidevitem:[922,924,927],multidevnest:[922,926,929],multiheadattent:[1247,1264],multinod:[1147,1151],multinodecontain:1147,multinodeit:1147,multinodeitem:1147,multinodenest:1147,multinomi:[177,364,491,625,806,1203],multipl:[40,41,877,878,879,996,1051,1074,1116,1118,1210,1212,1213,1214,1215,1216,1218,1245,1246,1264,1274,1290],multipli:[40,41,996,1017,1210,1215],multiprocess:[40,41,42,441,703,922,931,996,1147],must:[40,41,42,43,844,845,846,847,848,853,854,855,859,861,865,867,869,870,871,877,878,879,881,900,906,922,951,952,953,954,966,996,999,1012,1014,1016,1024,1053,1055,1067,1078,1127,1132,1135,1147,1203,1208,1280,1284],mutabl:[1191,1193,1200],mutlidevic:[922,931],mutlinod:1147,mw_tm1:[1093,1096,1100],mx_concat:1247,mxn:[844,847],mxnet:[43,1247,1293],my_func:43,mymodel:1247,name:[43,920,921,1289],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1290],nan:[40,41,843,853,854,859,860,996,1038,1089],nativ:[15,17,18,19,40,41,43,922,938,940,949,950,961,968,971,972,977,984,985,1147,1247,1248,1253,1254],native_modul:[1253,1254],native_module_class:[1253,1254],nativearrai:[15,18,19,43,844,847,849,850,851,853,854,855,856,857,858,859,860,861,862,863,864,865,867,869,870,871,874,875,877,878,879,881,900,906,922,940,966,967,972,976,982,987,988,996,997,998,999,1001,1002,1003,1004,1005,1007,1009,1010,1011,1012,1013,1015,1016,1017,1018,1021,1022,1023,1024,1026,1027,1028,1029,1031,1032,1036,1038,1039,1040,1047,1048,1049,1050,1052,1053,1054,1055,1058,1059,1060,1063,1064,1065,1066,1067,1072,1074,1075,1078,1080,1081,1083,1084,1085,1086,1088,1089,1090,1091,1092,1147,1191,1193,1200],natur:[853,862,1127,1138,1293],ncdhw:[1228,1233,1234,1264,1269,1270],nchw:[1228,1231,1232,1235,1264,1267,1268,1271],ncw:[1228,1229,1230,1264,1265,1266],ndarrai:[43,392,393,394,395,396,397,399,400,491,996,1084],ndhwc:[1228,1233,1234,1264,1269,1270],nearest:[996,1065],need:[43,996,1010,1011,1228,1230,1232,1234,1247,1264,1266,1268,1270,1293],neg:[40,41,853,859,867,869,870,871,877,878,879,1210,1215,1217,1220,1222],negative_slop:1255,neither:1147,nest:[15,16,17,18,19,40,41,42,922,944,948,954,996,1003,1083,1143,1144,1145,1147,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1276,1277,1280,1281,1282,1283,1284,1285],nested_indices_wher:1191,nested_map:[1147,1191],network:[1228,1237,1247,1248,1250,1264,1276,1277,1293],neural:[1228,1247,1250,1264,1289],never:43,new_node_percent_mem:1147,new_node_util:1147,new_node_utils_kei:1147,new_std:[1245,1246,1278,1279],newli:[43,920,921,996,1007,1008],newlin:[40,41,42],newshap:[996,1007,1064],next:[849,850,1147,1276,1277,1280,1281,1282,1283,1284,1285],nhwc:[1228,1231,1232,1235,1264,1267,1268,1271],node:[40,41,1191,1192,1199],node_clon:1147,node_dist:1147,node_dist_arrai:1147,node_dist_it:1147,node_in:1147,node_mapp:1147,node_str:1147,node_to_str:1147,node_util:1147,nodedistit:1147,nodedistitem:1147,nodedistnest:1147,nodemanag:[1147,1158],nodemapp:1147,nodemappermultiproc:1147,noinspect:[43,923,973,974,975,1094,1147],non:[40,41,867,869,877,878,879,920,921,972,986,1276,1277,1280,1284,1290],none:[40,41,42,43,59,61,64,392,393,394,396,439,441,442,445,447,454,455,456,457,464,465,466,467,468,469,470,471,472,474,484,485,491,492,844,845,846,848,849,850,851,853,861,867,868,869,870,871,877,878,879,920,921,922,931,932,938,939,964,965,966,967,972,979,980,981,996,999,1003,1019,1020,1025,1030,1031,1032,1037,1039,1041,1042,1043,1044,1045,1049,1050,1056,1058,1059,1060,1063,1066,1067,1068,1069,1074,1075,1076,1077,1086,1087,1092,1093,1096,1098,1100,1101,1102,1108,1109,1113,1116,1119,1121,1143,1144,1145,1146,1147,1191,1192,1195,1199,1200,1203,1204,1205,1206,1207,1210,1212,1213,1214,1215,1216,1217,1218,1228,1230,1232,1234,1237,1238,1239,1240,1245,1246,1253,1254,1255,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287],norm:[40,41,867,869,996,1010,1011,1116,1119,1246,1247,1279,1280,1282],normal:[1203,1206,1245,1246,1278,1279],normalized_idx:[1245,1246],normalized_shap:[1278,1279],notat:[40,41,1210,1211],note:[43,1116,1121],noth:[40,41,1290],notimplementederror:1147,now:[40,41,922,967,996,997,1147,1247,1264,1275,1276,1277,1289,1290,1293],np_concat:1247,np_finfo:397,ns_tune_step:1147,num:[441,464,465,996,1049,1050],num_arrai:[40,41],num_arrays_in_memori:996,num_arrays_on_dev:922,num_band:[996,1029],num_channel:[1264,1271],num_chunk:1147,num_chunks_floor:1147,num_class:[1203,1204],num_cpu_cor:922,num_gpu:[124,439,922,1147],num_head:[1228,1239,1264,1275],num_kei:[1228,1239,1240],num_lay:[1264,1273],num_or_size_split:[40,41,441,470,996,1074],num_output:1147,num_queri:[1228,1239,1240],num_sampl:[441,463,491,492,996,1048,1109,1110,1203,1204],num_task:[1143,1144,1145,1146],number:[40,41,42,843,849,850,851,853,860,877,878,879,920,921,922,958,959,960,972,983,987,988,996,999,1009,1013,1026,1029,1036,1039,1048,1049,1050,1053,1057,1063,1074,1081,1085,1089,1091,1116,1122,1143,1144,1145,1146,1147,1203,1204,1208,1210,1212,1213,1214,1216,1218,1228,1239,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1290,1293],numer:[43,853,859,881,900,906,996,1034,1035,1068,1069,1076,1077,1127,1135,1255],numhead:[1228,1239],numpi:[40,41,43,392,393,394,395,396,397,399,400,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,996,1084,1116,1121,1122,1210,1211,1247,1289,1290,1293],nwc:[1228,1229,1230,1264,1265,1266],obj:[40,41],object:[40,41,42,59,397,849,850,851,922,972,976,996,999,1003,1093,1191,1194,1196,1197,1198,1201,1202,1203,1209,1255,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1276,1277],object_in:[441,445,996,1003],observ:1147,obvious:43,occupi:[849,850,851,996,1066,1067],off:[996,999],offer:1247,offset:[867,868,1245,1246],often:1290,old:[40,41],on_init:[1264,1275,1276,1277],onc:[43,922,966,1147,1203,1204,1247],one:[40,41,43,867,869,870,871,922,951,952,953,954,966,972,978,996,1039,1051,1058,1066,1067,1075,1078,1116,1119,1147,1210,1211,1212,1213,1214,1215,1216,1217,1218,1247,1290,1293],one_hot:[131,441,571,703,996],onearrai:[996,1026],ones:[40,41,77,209,392,516,647,844,996,1039,1058,1060,1247],ones_lik:[131,296,441,571,703,996],ongo:43,onli:[40,41,43,491,870,871,922,1116,1121,1147,1191,1192,1193,1199,1280,1281,1282,1283,1284,1285,1289,1290],onlin:1247,onto:[922,951,952,967,1147,1191,1195,1200],oom:[922,1147],open:[996,999,1203,1207,1247,1293],opencv:1290,oper:[40,41,853,864,996,1006,1021,1022,1023,1049,1050,1079,1093,1096,1098,1100,1101,1102,1124,1125,1126,1228,1229,1230,1231,1232,1233,1234,1235,1237,1247,1248],operand:[40,41,853,854,1210,1211],oppos:[996,1029],optim:[922,1093,1096,1098,1100,1101,1102,1143,1144,1145,1146,1147,1247,1281,1282,1283,1285,1289,1293],optimizer_upd:1093,option:[15,18,19,40,41,42,43,392,393,394,396,844,845,846,848,867,869,870,871,877,878,879,920,921,922,931,932,940,944,945,946,947,948,951,952,953,954,961,964,965,966,967,971,972,977,982,986,995,996,998,999,1001,1002,1003,1010,1011,1012,1017,1019,1020,1029,1030,1031,1032,1036,1038,1039,1046,1048,1049,1050,1051,1054,1056,1058,1059,1060,1063,1066,1067,1070,1072,1074,1075,1076,1077,1078,1086,1088,1089,1092,1093,1096,1098,1099,1100,1101,1102,1104,1109,1113,1116,1119,1121,1143,1144,1145,1146,1147,1191,1192,1193,1195,1199,1200,1203,1204,1210,1212,1213,1214,1215,1216,1217,1218,1220,1221,1225,1228,1236,1237,1239,1240,1241,1242,1243,1244,1245,1246,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1290],ord:[867,869,1116,1122],order:[40,41,42,43,867,869,870,871,874,875,1093,1096,1098,1100,1101,1102,1116,1119,1143,1144,1145,1286,1287],ordered_node_util_kei:1147,org:1293,organ:43,origin:[40,41,42,996,1060,1064,1092,1116,1119],other:[40,41,43,881,883,884,889,891,892,896,898,899,900,901,902,904,906,907,908,909,910,911,913,914,915,917,918,919,920,921,996,998,999,1039,1093,1097,1203,1207,1247,1289,1290,1293],other_i:[43,881,900,906],otherwis:[15,16,17,18,19,40,41,853,859,867,869,877,878,879,922,939,972,979,980,981,996,1006,1086,1087,1090,1093,1099,1104,1108,1143,1144,1145,1147,1210,1212,1213,1214,1216,1218],our:[43,1247,1293],out:[43,491,881,900,996,999,1127,1131,1228,1236,1238,1247,1264,1272],out_feat_dim:[1228,1239],out_featur:[1228,1236,1237],out_i:[853,859],outdat:1293,outer:[1143,1144,1145,1146],outer_batch_fn:[1143,1144,1145],outer_batch_shap:[1228,1237],outer_cost_fn:[1143,1144,1145],outer_v:[1143,1144,1145],outlin:1290,output:[40,41,43,844,845,846,848,870,871,922,931,932,966,996,999,1008,1030,1039,1063,1081,1093,1097,1127,1132,1147,1203,1205,1206,1207,1228,1230,1232,1234,1236,1238,1239,1240,1247,1264,1265,1266,1267,1268,1269,1270,1272,1273,1274,1275],output_ax:[922,966,1147],output_axi:1147,output_channel:[1264,1265,1266,1267,1268,1269,1270,1273,1274],output_queu:1147,output_shap:[1228,1230,1232,1234,1264,1266,1268,1270],outsid:[996,1009],over:[40,41,867,869,877,878,879,1116,1119,1203,1207,1210,1212,1213,1214,1216,1218,1245,1246,1278,1279],overal:1290,overflow:[996,999],overhead:1290,overrid:[996,1058,1060,1092],overriden:[1280,1284],overwrit:[40,41,922,966,1147],overwrite_at_key_chain:[40,41],own:[1247,1290,1293],packag:[43,1290],pad:[996,1013,1029,1091,1228,1229,1230,1231,1232,1233,1234,1235,1264,1265,1266,1267,1268,1269,1270,1271],pad_width:[441,996,1013,1091],page:1247,pair:[1228,1240],parallel:[922,931,932,1147],parallelis:[922,931,932,1147],param:[40,41,42,43,441,455,456,844,845,853,865,922,966,996,997,1031,1032,1058,1059,1147,1276,1277,1289],paramet:[15,16,17,18,19,40,41,42,844,845,846,847,848,849,850,851,853,854,855,856,857,858,859,860,861,862,863,864,867,868,869,870,871,874,875,877,878,879,881,900,906,920,921,922,931,932,938,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,961,964,965,966,967,968,971,972,976,977,978,982,983,984,985,986,987,988,995,996,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1036,1038,1039,1040,1042,1043,1044,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1059,1060,1063,1064,1065,1066,1067,1068,1069,1070,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1095,1096,1097,1098,1099,1100,1101,1102,1104,1106,1107,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289],parameter:[1203,1206,1207],pardo:1247,pars:[996,1014],part:[844,847,1093,1096,1098,1100,1101,1102,1127,1131,1247,1276,1277,1290],partial:[40,41,43,1276,1277],particl:1293,particular:[43,1293],pass:[40,41,42,43,922,931,966,972,977,996,1008,1093,1107,1143,1144,1145,1147,1253,1254,1276,1277,1280,1284,1286,1287],pattern:[40,41,996,1021,1022,1023],peopl:43,per:[922,1147,1228,1229,1230,1231,1232,1233,1234,1235,1264,1265,1266,1267,1268,1269,1270,1271],percent_used_mem_on_dev:922,percent_used_mem_on_nod:1147,percentag:[922,961,1147],perf_count:1147,perform:[40,41,43,874,875,877,878,879,922,996,1001,1002,1017,1021,1022,1023,1042,1043,1044,1048,1049,1050,1093,1096,1098,1100,1101,1102,1109,1110,1143,1144,1145,1146,1147,1191,1196,1197,1210,1212,1213,1214,1215,1216,1217,1218,1220,1225,1228,1236,1238],period:43,permissable_step:1147,permit:43,permut:[491,996,1080,1086],perpendicular:[996,1016],person:[43,1247],physci:1293,pickl:[40,41,1147],pickle_filepath:[40,41],pinv:[354,780,1116],pip:1247,pipelin:1289,pkk:1293,pkkm1:1293,pkm1km1:1293,place:[40,41,43,844,845,846,848,922,967,996,1026,1030,1042,1043,1044,1147,1280,1281,1282,1283,1284,1285],placehold:[43,1191,1200],pleas:[43,491,1116,1121],point:[43,843,844,845,846,848,849,850,853,854,865,867,869,972,987,996,999,1127,1135],popul:[40,41,1203,1204],popular:1293,population_s:[491,492,1203,1204],portabl:[1247,1248],posit:[15,16,17,849,850,853,859,922,944,948,954,996,997,999,1026,1029,1147,1203,1208,1253,1254],possibi:[40,41],possibl:[43,996,1051,1083,1109,1114,1293],post:[1245,1246],post_shap:[40,41],power:[43,881,906,912,996,1034,1068,1077,1255],practic:1247,pre:[922,1147,1247],pre_shap:[40,41],precis:[849,850,853,865],pred:[1241,1242,1243,1244],predict:[1241,1242,1243,1244,1293],preprint:1247,present:[40,41],preserv:[40,41,42,870,871,1093,1104],preserve_typ:[40,41,475,478,1093,1104],press:1247,prevent:[43,1093,1095,1096,1100,1147,1280,1281,1282],prevet:43,previou:[1093,1096,1100],previous:[996,1008],prime:1247,print:[40,41,42,922,962,996,1061,1247,1289],print_all_arrays_in_memori:996,print_all_arrays_on_dev:922,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1280,1284],prob:[491,492,1203,1204,1228,1236,1264,1272],probabl:[1203,1204,1228,1236,1264,1272],problem:[43,1293],process:[43,922,931,932,961,971,996,1056,1147],process_specif:[922,961,971,1147],prod:[40,41,996,1022],produc:[922,931,932,1147],product:[40,41,996,1016,1017,1052,1210,1211,1228,1239,1240,1264,1275],profil:[124,290,439,564,695,922,1147],progress:43,project:[1247,1289,1290,1293],promot:[43,853,854,855,865,867,869,881,906,1127,1135],prompt:1247,properli:43,properti:[40,41,397,922,934,1147,1276,1277,1280,1281,1282,1283,1285],provid:[40,41,43,870,871,877,878,879,920,921,922,939,972,979,980,981,986,995,996,1020,1058,1060,1067,1092,1093,1096,1098,1100,1101,1102,1108,1147,1247,1264,1273,1280,1281,1282,1283,1284,1285,1290],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1116,1120],pull:[1247,1248],pure:[40,41,1247,1293],purpos:[43,1293],put:1147,pybroadexcept:1147,pyprotectedmemb:1147,pyshadowingbuiltin:43,pyshadowingnam:[923,973,974,975,1094,1147],python:[40,41,922,961,971,996,999,1147,1247],pytorch:[1093,1096,1098,1100,1101,1102,1116,1121,1247,1280,1281,1282,1283,1284,1285,1289,1290,1293],pyunresolvedrefer:1147,quadrant:[1127,1132],qualiti:43,queri:[40,41,881,895,916,922,955,965,1147,1228,1239,1240,1264,1275],query_dim:[1264,1275],query_kei:[40,41],queue:[40,41,42,922,931,932,996,1062,1070,1147],queue_class:[922,931,932,1147],queue_load_s:[40,41,42],queue_timeout:[40,41,42,996,1147],quick:[491,1247],quickli:[43,1289],radian:[853,857,1127,1128,1130,1132,1139,1141],rai:[1127,1128],rais:[40,41,43,877,878,879,881,906,996,1006,1034,1068,1075,1077,1087,1147,1276,1277,1280,1284],ram:[922,961,968,971,1147],randint:[177,364,491,625,806,1203],random:[37,40,41,492,1204,1205,1206,1207,1208,1209,1247],random_crop:1109,random_norm:[177,364,491,625,806,1203],random_uniform:[177,364,491,625,806,1203],randomli:[491,1109,1113,1228,1236,1264,1272],rang:[491,996,999,1049,1050,1127,1132,1147,1247,1289,1293],rank:[867,869,877,878,879,996,1013,1088,1091],rate:[1093,1096,1098,1100,1101,1102,1143,1144,1145,1146,1264,1275,1280,1281,1282,1283,1284,1285],rather:[40,41,43,922,966,996,999,1046,1093,1099,1147],ratio:[922,1093,1100,1109,1114,1147,1280,1282],raw:[40,41,1116,1121],raw_delta:1147,reach:[43,922,944,948,954,1147,1191,1200],read:[40,41],readi:[1147,1289],real:[1127,1128,1131],realiti:1290,rearrang:[40,41,996,1021,1023],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1143,1145],receiv:[43,922,931,932,996,1000,1051,1147,1264,1274],receivess:[922,1147],receivng:[1143,1146],recev:[1143,1144,1145],recognit:1293,recommend:1247,rectifi:[1220,1222,1223],recurr:[1228,1238],recurrent_bia:[1228,1238],recurrent_kernel:[1228,1238],recurs:[40,41,1191,1192,1193,1199,1200],redefin:43,reduc:[40,41,877,878,879,922,966,996,1022,1116,1121,1147,1210,1212,1213,1214,1215,1216,1217,1218],reduce_max:[40,41,184,369,493,630,813,1210],reduce_mean:[40,41,184,369,493,630,813,1210,1247,1289],reduce_min:[40,41,184,369,493,630,813,1210],reduce_prod:[40,41,184,369,493,630,813,1210],reduce_std:[40,41,369,1210],reduce_sum:[40,41,184,369,493,630,813,1147,1210],reduce_var:[40,41,184,369,493,630,813,1210],reduct:[39,40,41,441,468,469,877,878,879,996,1022,1066,1067,1211,1212,1213,1214,1215,1216,1217,1218,1247],refactor:43,refer:[43,853,862,877,878,879,1093,1095,1096,1116,1123,1264,1274,1293],reflect:43,reflected_oper:[0,13,14],regard:[922,1147],regardless:[40,41,920,921],register_paramet:1289,reimplement:1293,rel:[870,871,1093,1096,1098,1100,1101,1102],rel_slice_obj:1147,relat:43,relev:[1280,1281,1282,1283,1284,1285],relu:[822,1220,1221,1222,1247,1289],remain:[43,996,1064,1191,1195],remaind:[40,41,996,1028,1074],remov:[40,41,43,996,1075,1143,1144,1145],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,870,871],rep:[996,1081],repeat:[40,41,43,296,703,996,1023,1081,1147,1290],repeated_config_check:[922,1147],repeatedli:[1191,1198],repetit:[40,41,996,1063,1081],replac:[40,41,43,491,492,996,1009,1066,1067,1203,1204],repo:[43,1247],repositori:43,repres:[43,853,854,972,978,983,1228,1237],represent:[40,41,42,43,843,849,850,851,853,855,922,949,950,972,978,984,985,996,1073,1083,1147],reptil:[1143,1146],reptile_step:1143,request:[1247,1248],requir:[43,853,865,920,921,972,976,996,999,1003,1253,1254],resampl:[996,1048],reserv:43,reshap:[40,41,43,491,703,996],reshape_lik:[40,41],respect:[853,855,861,881,900,996,1024,1093,1095,1096,1097,1098,1100,1101,1102,1116,1121,1127,1135,1143,1144,1145,1146],respond:43,respons:[43,1147],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,853,854,855,859,861,862,864,865,867,869,877,878,879,881,900,906,922,931,996,999,1024,1066,1067,1078,1116,1119,1124,1125,1126,1127,1135,1147,1210,1212,1213,1214,1215,1216,1217,1218,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1247],ret:1147,ret_dict:1147,ret_fn:[922,931,932,1147],retain:[1093,1097],retain_grad:[475,476,1093,1097],retreiv:1147,retrn:[996,1073],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1143,1144,1145,1146],return_sequ:[1264,1273],return_st:[1264,1273],rev:[996,1020],revers:[40,41,870,871,996,1020,1086],review:43,right:[40,41,43],rk_e:1293,robot:1247,ronald:1247,root:[43,853,865],round:[296,441,703,853,865,996,999,1147],row:[996,1039,1203,1204],rule:[43,853,855,865,881,906,996,999,1127,1135],run:[43,922,931,1093,1095,1096,1100,1143,1144,1145,1146,1147,1247,1248,1264,1275,1276,1277],safe:[922,931,1147],safety_factor:[922,1147],same:[15,16,17,40,41,43,844,847,853,856,870,871,922,931,932,966,967,972,976,996,997,1012,1027,1028,1031,1032,1058,1060,1065,1066,1067,1078,1092,1093,1099,1104,1116,1122,1127,1131,1143,1144,1145,1147,1210,1211,1228,1229,1230,1231,1232,1233,1234,1235,1247,1264,1265,1266,1267,1268,1269,1270,1271,1289,1293],same_arrai:[40,41],sampl:[996,1048,1109,1110,1203,1204,1206,1207,1228,1236,1247,1264,1272],satisfi:[996,1003,1116,1118,1123],save:[40,41,996,1071,1082,1109,1111,1276,1277],save_dir:[439,440,922,937,1147],save_weight:[1276,1277],scalar:[867,869,996,1009,1058,1085,1089],scale:[922,964,965,1093,1101,1147,1228,1236,1239,1240,1245,1246,1264,1272,1275,1280,1283],scaled_dot_product_attent:1228,scatter:[996,1058,1066,1067],scatter_flat:[131,296,441,571,703,996],scatter_nd:[131,296,441,571,703,996],scene:[1093,1096,1098,1100,1101,1102],schemat:1247,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,853,855,922,953,996,1004,1016,1024,1062,1070,1080,1093,1095,1096,1100,1143,1145,1147,1280,1281,1282],secondli:1293,sector:[853,854],see:[43,59,397,439,440,491,853,855,867,869,877,878,879,881,900,906,922,934,935,936,937,972,996,999,1049,1050,1093,1127,1135,1247,1255,1257,1258,1260,1261,1263],seed:[40,41,177,491,806,1203],seed_valu:[40,41,491,1203,1208],seem:1247,seen_set:[996,1037],select:[996,1003,1075,1290,1293],self:[40,41,43,59,397,439,440,881,900,906,922,934,935,936,937,972,1093,1147,1247,1255,1257,1258,1260,1261,1263,1280,1284,1289,1293],self_i:[881,900],sent:1147,seper:[43,996,1029],seq:[40,41,42,1210,1211,1276,1277],sequenc:[15,16,17,40,41,42,43,491,920,921,922,931,932,941,942,943,944,945,946,947,948,951,952,966,972,976,996,999,1003,1005,1007,1012,1013,1039,1051,1054,1059,1063,1064,1067,1074,1078,1081,1086,1091,1093,1097,1109,1113,1114,1116,1119,1147,1191,1202,1203,1205,1207,1210,1212,1213,1214,1215,1216,1217,1218,1228,1229,1230,1231,1232,1233,1234,1235,1245,1246,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271,1273,1276,1277,1278,1279,1280,1284,1286,1287],sequenti:1247,seri:43,set:[15,18,19,40,41,922,951,952,964,965,966,996,998,1019,1039,1068,1069,1070,1071,1093,1096,1098,1099,1100,1101,1102,1116,1119,1147,1191,1192,1199,1201,1202,1203,1204,1208,1210,1212,1213,1214,1215,1216,1217,1218,1247,1264,1273,1280,1281,1282,1283,1284,1285,1290,1293],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:922,set_default_dtyp:972,set_default_float_dtyp:972,set_default_int_dtyp:972,set_default_nod:1147,set_exception_debug_mod:44,set_framework:[40,41,43,59,1147,1247,1289,1290,1293],set_ivy_backend:[40,41],set_min_bas:996,set_min_denomin:996,set_nest_at_index:1191,set_nest_at_indic:1191,set_queue_timeout:996,set_split_factor:[922,1147],set_stat:[1280,1281,1282,1283,1284,1285],set_tmp_dir:996,set_with_grad:1093,setter:1147,sever:1293,sgd:[1247,1280],shape0:1147,shape:[40,41,43,392,393,394,396,441,454,469,491,703,844,845,846,847,848,853,856,870,871,922,934,972,976,996,997,1007,1012,1013,1026,1027,1028,1030,1032,1036,1039,1058,1059,1060,1063,1064,1065,1066,1067,1073,1075,1078,1091,1092,1109,1113,1116,1118,1121,1127,1131,1132,1147,1203,1205,1206,1207,1210,1211,1228,1230,1232,1234,1264,1266,1267,1268,1269,1270,1271,1278,1279],shape_slic:[40,41],shape_to_tupl:996,share:[40,41,1247,1290],shift:1147,should:[40,41,42,43,491,844,847,853,854,855,859,865,867,869,881,900,906,920,921,922,996,1007,1008,1014,1058,1064,1093,1096,1098,1100,1101,1102,1127,1135,1147,1210,1211,1247],show:[40,41,1247,1293],show_mod_in_top_mod:[1276,1277],show_structur:[1276,1277],show_sub_contain:[40,41],show_v:[1276,1277],show_v_in_top_v:[1276,1277],shown:[40,41],shp:1147,shuffl:[40,41,177,491,806,1203],shuffle_h5_fil:[40,41],side:43,sigmoid:[822,1220,1247,1289],signatur:[43,59,397,439,440,441,475,480,484,488,489,491,922,934,935,936,937,972,1093,1255,1257,1258,1260,1261,1263],signific:1293,similar:[43,1228,1239,1264,1275],similarli:[1116,1121],simpl:[43,996,1025,1247,1290,1293],simpler:43,simplest:1290,simpli:[40,41,43,1247,1290,1293],simultan:1247,sin:[791,996,1029,1127,1141,1290],sinco:1290,sine:[853,854,1127,1130,1139,1140],singl:[40,41,920,921,922,931,932,951,952,953,954,996,1075,1085,1089,1109,1114,1147,1203,1206,1207,1210,1212,1213,1214,1215,1216,1217,1218,1247,1290,1293],singleton:[867,869,877,878,879],singular:[1116,1122],sinh:[791,1127],siren:[1247,1255],situat:43,size:[40,41,42,441,468,922,945,946,947,948,964,965,966,996,999,1007,1049,1050,1066,1074,1109,1113,1116,1119,1122,1147,1203,1204,1206,1207,1210,1212,1213,1214,1215,1216,1217,1218,1264,1265,1266],size_ordered_arrai:[40,41],skew:[1116,1123],skinv:1293,skip:[40,41],slice:[40,41,874,875,996,1031,1032,1147,1191,1198],slice_kei:[40,41],slice_obj:[40,41,1147],slice_via_kei:[40,41],slide:[1228,1229,1230,1231,1232,1233,1234,1235,1264,1265,1266,1267,1268,1269,1270,1271],slope:[1220,1222],small:[1241,1242,1243,1244,1245,1246,1247,1278,1279,1290],smaller:[996,1009],smallest:[40,41,849,850,851,853,856,996,1002],smallest_norm:[397,849,850],softmax:[193,502,822,1220,1228,1239,1240],softplu:[822,1220],solut:43,solv:1293,some:[40,41,43,996,999,1093,1095,1096,1098,1100,1101,1102,1107,1228,1236,1247,1264,1272,1290,1293],some_backend:43,some_namespac:43,someth:[43,1293],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,875,1116,1122,1147],sort_by_kei:[40,41],sorting_funct:[874,875],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,392,393,394,395,396,397,399,400,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,489,490,491,492,844,845,846,847,848,849,850,851,853,854,855,856,857,858,859,860,861,862,863,864,865,867,868,869,870,871,874,875,877,878,879,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,924,925,926,927,928,929,931,932,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1250,1251,1252,1253,1254,1255,1257,1258,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1291,1292,1293],space:[996,999,1029,1049,1050],spars:[1241,1244],sparse_cross_entropi:1241,spawn:[996,1056],special:[853,854],specif:[40,41,43,922,964,996,1014,1021,1022,1023,1056,1143,1144,1145,1146,1147,1203,1209,1247,1276,1277,1289,1290],specifc:[1203,1204],specifi:[40,41,43,844,845,847,867,868,869,870,871,877,878,879,922,941,942,943,944,945,946,947,948,951,952,956,958,962,965,966,967,972,976,978,996,999,1001,1002,1003,1009,1012,1013,1030,1031,1032,1038,1049,1050,1078,1088,1091,1116,1119,1147,1191,1196,1197,1201,1202,1210,1211,1212,1213,1214,1215,1216,1217,1218],split:[40,41,131,296,441,571,703,922,931,945,946,947,948,964,965,966,996,1051,1147],split_arg:1147,split_factor:[922,931,1147],split_func_cal:[922,1147],split_siz:1147,spread:[922,954,1147],sqrt:[87,219,402,526,657,853,867,869],squar:[853,865,996,1039,1116,1118],squeez:[131,296,441,571,703,996],stabil:[874,875,996,1076,1077],stabl:[874,875,996,1034,1035,1068,1069,1076,1077],stable_divid:996,stable_pow:996,stack:[40,41,296,703,844,847,996,1109,1114,1191,1192,1199,1264,1273],stack_imag:[167,350,480,614,776,1109],stacked_dim_s:1147,stage:43,standard:[40,41,849,850,1203,1206,1210,1216,1245,1246,1247,1248,1278,1279],start:[40,41,43,439,440,441,442,464,465,491,922,937,996,999,1049,1050,1147,1247,1290],starting_index:[40,41],starting_split_factor:[922,1147],state:[1147,1228,1238,1247,1250,1251,1252,1253,1254,1255,1257,1258,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289],statement:1290,static_argnam:[441,447,920,921],static_argnum:[441,447,920,921],std:[491,1203,1206],step:[40,41,441,442,922,996,999,1049,1050,1093,1095,1096,1098,1100,1101,1102,1143,1144,1145,1146,1147,1247,1280,1281,1282,1283,1284,1285,1289,1293],stephen:1247,stick:1247,still:[40,41,43],stochast:[1280,1285],stop:[40,41,439,440,441,442,464,465,922,937,966,996,999,1049,1050,1093,1096,1098,1100,1101,1102,1104,1143,1144,1145,1146,1147,1280,1281,1282,1283,1284,1285],stop_gradi:[40,41,345,475,609,770,922,966,1093,1096,1098,1100,1101,1102,1143,1144,1145,1146,1147,1280,1281,1282,1283,1284,1285],stopiter:1147,store:[40,41,996,1029,1074,1093,1107,1276,1277],store_var:[1276,1277],str:[15,16,17,40,41,42,43,392,393,394,396,397,399,400,849,850,851,920,921,922,931,932,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,966,972,977,978,983,984,985,986,987,988,995,996,1003,1019,1021,1022,1023,1054,1056,1059,1066,1067,1116,1119,1121,1143,1144,1145,1146,1147,1191,1195,1210,1211,1253,1254,1264,1275,1276,1277],str_to_nod:1147,straight:1290,strength:[1247,1293],stride:[1228,1229,1230,1231,1232,1233,1234,1235,1264,1265,1266,1267,1268,1269,1270,1271],string:[40,41,43,922,938,940,949,950,955,961,967,968,971,972,976,982,984,985,986,995,996,999,1003,1019,1039,1059,1060,1092,1147,1228,1229,1230,1231,1232,1233,1234,1235,1264,1265,1266,1267,1268,1269,1270,1271,1276,1277],structur:[40,41,42,43,996,1014],structural_diff:[40,41],sub:[40,41,43,922,945,946,951,952,953,954,996,1074,1143,1144,1145,1146,1147],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1147,sub_mod:[1276,1277],sub_modul:[1286,1287],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1247,1248,1278,1279,1286,1287],subsequ:43,subset:43,substr:[40,41],suffici:[1116,1121],suggest:1247,suitabl:[1109,1114],sum:[40,41,441,468,469,867,869,922,951,952,953,954,966,996,1018,1022,1066,1067,1147,1210,1211,1217],summat:[40,41,1210,1211],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,83,84,85,88,89,90,91,92,93,94,95,96,97,98,99,102,103,105,109,112,113,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,168,169,170,172,173,174,178,179,180,181,182,183,185,186,187,188,189,190,191,194,196,197,199,200,201,202,203,204,205,210,211,212,213,215,216,217,220,221,222,223,224,225,226,229,230,232,236,239,240,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,351,352,353,355,356,357,358,359,361,362,365,366,367,368,370,371,372,373,374,375,376,377,380,382,383,384,385,386,387,388,393,394,395,396,398,399,400,403,404,405,406,407,408,409,410,411,412,413,414,417,418,420,424,427,428,440,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,476,477,478,479,481,482,483,485,486,487,490,492,494,495,496,497,498,499,500,503,504,506,507,508,509,510,511,512,517,518,519,520,522,523,524,527,528,529,530,531,532,533,534,535,536,537,538,541,542,544,548,551,552,560,565,566,567,568,569,570,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,610,611,612,613,615,616,617,619,620,621,622,626,627,628,629,631,632,633,634,635,636,637,641,642,643,648,649,650,651,653,654,655,658,659,660,661,662,663,664,665,666,667,668,669,672,673,675,679,682,683,691,696,697,698,699,700,701,702,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,771,772,773,774,775,777,778,779,781,782,783,784,785,786,787,789,790,792,793,794,795,796,797,798,799,800,801,802,803,804,805,807,808,809,810,811,812,814,815,816,817,818,819,820,823,824,825,826,827,828,829,831,832,834,835,836,837,838,839,840,845,846,847,848,850,851,854,855,856,857,858,859,860,861,862,863,864,865,867,868,869,871,875,878,879,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,921,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1125,1126,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1242,1243,1244,1246,1247,1251,1252,1254,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1292,1293],supports_inplac:996,suppos:1293,sure:43,svd:[354,618,780,1116],swap:[40,41,996,1080],swapax:[40,41,571,703,996,1293],symmetr:[1116,1123],syntax:[439,441,475,480,484,488,489,491],tab:1247,take:[43,996,1048],taken:[43,1210,1212,1213,1214,1216,1218],tan:[791,1127,1131],tangent:[1127,1131,1132,1133,1141,1142,1220,1227],tanh:[791,822,1127,1220],target:[40,41,922,938,941,942,943,944,945,946,947,948,951,952,953,954,967,1147,1247],target_dict:[40,41],task:[43,1143,1144,1145,1146],team:[43,1293],templat:1247,temporari:[996,1071,1082],tensor:[40,41,43,441,468,469,874,875,922,940,972,982,996,999,1001,1002,1007,1049,1050,1053,1055,1058,1059,1060,1064,1066,1067,1074,1092,1147,1203,1204,1205,1228,1236,1238,1247,1264,1272,1274,1280,1281,1282,1283,1284,1285,1289,1290],tensorflow:[43,1116,1121,1228,1230,1232,1234,1247,1264,1266,1268,1270,1290,1293],term:[40,41,43,1228,1238,1247,1264,1274],termcolor:[40,41,42],termin:[40,41,42,1147],test:[43,853,859,877,878,879,972,987,988],test_array_api:43,tf_concat:1247,than:[40,41,43,849,850,853,856,867,869,870,871,922,966,996,999,1009,1027,1046,1053,1075,1078,1093,1099,1147,1203,1207,1247,1290],thei:[40,41,43,1127,1132,1143,1144,1145,1203,1204,1247,1286,1287,1290],them:[1247,1293],themselv:[1191,1192],therefor:43,thi:[40,41,42,43,922,944,948,954,961,966,971,996,999,1029,1062,1064,1070,1093,1096,1098,1099,1100,1101,1102,1107,1116,1119,1147,1191,1195,1200,1210,1212,1213,1214,1215,1216,1217,1218,1228,1237,1247,1276,1277,1280,1281,1282,1283,1284,1285,1289,1290,1293],thing:[43,1247],those:[40,41,43,996,1009,1093,1107,1116,1122,1147],though:43,thought:43,threshold:[996,1053,1055],through:[40,41,43],tick:43,tickbox:43,tile:[296,571,703,996],time:[43,996,1081,1093,1096,1100,1143,1144,1145,1146,1147,1203,1204,1228,1238,1264,1275,1276,1277,1293],timeout:[40,41,42,922,931,932,996,1062,1070,1147],timestep:[1228,1238,1264,1273],titl:[43,1247],tmp_dir:996,tmp_dr:[996,1071],to_appli:[40,41],to_clon:[922,1147],to_dev:[40,41,124,290,439,564,695,922],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[922,1147],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1247],to_ivy_modul:[195,830,1247,1253],to_json:[40,41],to_kv_fn:[1228,1239],to_kv_v:[1228,1239],to_list:[40,41,441,703,996],to_multi_dev:[40,41],to_mut:[1191,1193,1200],to_n:[15,40,41,1247],to_nod:1147,to_numpi:[40,41,441,703,996,1247,1289],to_out_fn:[1228,1239],to_out_v:[1228,1239],to_q_fn:[1228,1239],to_q_v:[1228,1239],to_raw:[40,41],to_scalar:[441,703,996],todo:[1147,1247,1248],togeth:[40,41,1286,1287],tool:[1247,1290],top_mod:[1276,1277],topic:1293,torch:[43,920,921,1247,1289,1290,1293],torch_concat:1247,torchfcmodel:1289,total:[40,41,42,922,968,1147],total_mem_on_dev:922,total_mem_on_nod:1147,tpu:[922,969,1147],tpu_is_avail:[439,564,695,922,1147],tpye:[972,983],trace:[40,41,996,1046],track:[43,922,1147,1191,1200,1276,1277],track_submod_call_ord:[1276,1277],track_submod_ret:[1276,1277],trail:[1278,1279],train:[1093,1095,1096,1100,1247,1248],trainabl:[1093,1099,1247,1248,1253,1254,1276,1277,1286],trainer:1247,tran:1293,transform:[1228,1236,1237],transpos:[40,41,131,296,441,703,922,953,996,1147,1228,1230,1232,1234,1264,1266,1268,1270],travers:[15,18,19,40,41,1191,1200],treat:[40,41,920,921],tri:[40,41],triangular:[844,847],trigonometr:[853,857,1127,1128,1131,1139],tril:[77,209,392,516,647,844],trim_kei:[40,41],trust:[1093,1100,1280,1282],truth:[853,861,864,881,900,996,1024,1124,1125,1126],try_else_non:996,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[922,1147],tune_dev_alloc:922,tune_dev_split:922,tune_node_alloc:1147,tune_node_split:1147,tune_step:[922,1147],tupl:[15,16,17,18,19,40,41,43,392,393,394,396,844,845,846,848,867,869,870,871,877,878,879,920,921,996,1013,1029,1030,1073,1091,1147,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1202,1203,1205,1210,1212,1213,1214,1215,1216,1217,1218],tutori:43,two:[40,41,844,847,996,999,1004,1016,1052,1080,1116,1119,1122],type:[15,18,40,41,42,43,59,399,400,439,440,844,845,846,847,848,850,851,853,854,855,856,859,861,865,867,869,870,871,877,878,879,881,900,906,922,934,935,936,937,949,950,954,966,972,976,977,978,982,983,984,985,986,987,988,995,996,997,999,1003,1012,1014,1024,1027,1028,1030,1039,1046,1058,1059,1060,1065,1079,1089,1092,1093,1099,1104,1127,1135,1147,1247,1255,1257,1258,1260,1261,1263,1276,1277,1290],types_to_iteratively_nest:[40,41,42],uint8:[1109,1111,1115],uint8_img_to_float_img:1109,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[853,855],underwai:43,unfairli:43,unif:1147,unifi:[40,41,922,951,952,953,954,966,1147,1247],uniform:[40,41,1203,1204,1206,1207,1255,1257,1258,1261,1262],uniformli:[1203,1205,1207],unify_arrai:1147,unify_it:1147,unify_nest:1147,uniniti:[844,845],union:[15,18,19,40,41,43,392,393,394,396,397,399,400,844,845,846,847,848,849,850,851,853,854,855,856,857,858,859,860,861,862,863,864,865,867,869,870,871,874,875,877,878,879,881,900,906,920,921,922,940,945,946,947,948,966,967,972,976,977,978,982,983,984,985,986,987,988,995,996,997,998,999,1001,1002,1003,1004,1005,1007,1009,1010,1011,1012,1013,1015,1016,1017,1018,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1036,1038,1039,1040,1047,1048,1049,1050,1052,1053,1054,1055,1058,1059,1060,1063,1064,1065,1066,1067,1072,1073,1074,1075,1078,1080,1081,1083,1084,1085,1086,1088,1089,1090,1091,1092,1147,1191,1192,1193,1199,1200],uniqu:[922,931,932,1143,1144,1145,1146,1147,1191,1195],unique_kwarg:1147,unit:[43,922,1127,1128,1130,1147,1220,1221,1222,1223],unitari:[1116,1122],unless:[996,1058,1060,1092],unlik:[922,1147],unnorm:[1203,1204],unpack:[996,1088],unrol:[1228,1238],unset:1290,unset_debug_mod:44,unset_default_devic:922,unset_default_dtyp:972,unset_default_float_dtyp:972,unset_default_int_dtyp:972,unset_framework:[59,1290],unset_with_grad:1093,unstack:[40,41,131,296,441,571,703,996],until:43,unus:[920,921],updat:[40,41,441,468,469,922,931,996,1044,1066,1067,1093,1095,1096,1098,1100,1101,1102,1143,1144,1145,1147,1191,1196,1197,1201,1202,1228,1238,1247,1248,1253,1254,1280,1281,1282,1283,1284,1285,1290,1293],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1203,1207],upper_depth:[1276,1277],upstream:43,usabl:[1247,1293],usag:[922,966,1147],use:[40,41,42,43,491,922,931,932,957,969,996,1063,1076,1077,1116,1121,1147,1228,1239,1245,1246,1247,1278,1279,1290,1293],used:[40,41,43,491,922,931,961,964,965,971,972,983,996,1034,1035,1051,1060,1066,1067,1068,1069,1092,1093,1100,1101,1116,1119,1143,1144,1145,1146,1147,1191,1200,1264,1275,1280,1282,1283,1289,1290],used_dev:[922,931],used_mem_on_dev:922,used_mem_on_nod:1147,used_node_str:1147,used_node_strs_dict:1147,useful:[40,41,922,966,1147,1228,1237,1247,1290],user:[1247,1264,1275,1276,1277,1290,1293],uses:1247,using:[40,41,1093,1095,1096,1191,1194,1198,1210,1211,1228,1236,1240,1247,1264,1272,1289,1290,1293],util:[922,955,1147],utility_funct:[877,878,879],v_with_top_v_key_chain:[1276,1277],val:[40,41,441,459,460,461,881,916,996,1042,1043,1044,1068,1069],valid:[877,878,879,972,977,996,1076,1077,1228,1229,1230,1231,1232,1233,1234,1235,1264,1265,1266,1267,1268,1269,1270,1271],valid_dtyp:972,valu:[40,41,441,853,860,861,864,867,869,874,875,881,900,922,934,965,966,996,997,999,1001,1002,1009,1010,1011,1013,1014,1020,1024,1029,1030,1031,1032,1047,1049,1050,1053,1055,1062,1063,1064,1065,1066,1067,1068,1069,1070,1086,1089,1090,1091,1093,1097,1100,1109,1115,1116,1122,1124,1125,1126,1127,1136,1137,1138,1143,1144,1145,1147,1191,1195,1196,1197,1201,1202,1203,1206,1207,1210,1212,1214,1228,1239,1240,1245,1246,1264,1275,1278,1279,1280,1282],value_is_nan:996,vanilla:[1143,1145],var_shap:1255,variabl:[15,16,17,18,19,40,41,345,475,609,770,996,1006,1042,1043,1044,1045,1046,1079,1093,1096,1097,1098,1099,1100,1101,1102,1104,1107,1143,1144,1145,1146,1228,1239,1245,1246,1253,1254,1255,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287],variable_data:[475,770,1093],varianc:[40,41,1210,1218,1293],varieti:1290,variou:[43,1247],vector:[40,41,484,487,867,869,996,1011,1016,1116,1122,1123,1228,1237,1264,1274],vector_norm:[40,41,101,228,416,540,671,867],vector_to_skew_symmetric_matrix:[171,354,484,618,780,1116],verbos:1292,veri:[43,1247],verifi:43,version:43,via:[1191,1192,1199,1290],view:[1109,1114],vision:1247,visual:1290,volum:[1228,1233],vw_tm1:[1093,1096,1100],wai:[1290,1293],wait:[40,41,42,43],want:[43,1247,1290,1293],warn:[59,66,67,68,69,70],warp:[480,481,1109,1110],watch:1289,websit:43,weight:[1093,1095,1096,1098,1100,1101,1102,1228,1237,1238,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1276,1277,1280,1282,1283],weight_initi:[1264,1265,1266,1267,1268,1269,1270,1271,1273,1274],weights_path:[1276,1277],well:[40,41,996,1038],were:[40,41,1147],what:[43,1247],when:[40,41,42,43,922,996,1008,1077,1090,1116,1122,1147,1247,1276,1277,1290,1293],where:[40,41,43,296,441,703,853,860,862,877,878,879,881,906,996,999,1007,1009,1013,1026,1040,1047,1058,1091,1116,1122,1191,1192,1199,1203,1204],wherea:43,wherebi:[1191,1200],whether:[15,18,19,40,41,42,877,878,879,920,921,922,940,953,957,961,966,969,971,972,982,986,987,988,995,996,998,1004,1005,1017,1020,1025,1029,1036,1038,1041,1045,1046,1051,1072,1079,1088,1089,1093,1096,1097,1098,1099,1100,1101,1102,1104,1143,1144,1145,1146,1147,1191,1192,1193,1195,1199,1200,1203,1204,1220,1221,1228,1236,1247,1253,1254,1264,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285],which:[40,41,42,43,491,844,845,846,847,848,849,850,851,867,868,869,870,871,877,878,879,920,921,922,931,932,940,945,946,947,948,951,952,953,954,956,958,962,964,965,966,972,977,982,986,995,996,999,1003,1012,1014,1016,1017,1018,1020,1030,1031,1032,1033,1039,1040,1048,1049,1050,1057,1058,1059,1060,1061,1063,1066,1067,1074,1078,1088,1090,1092,1093,1096,1097,1098,1100,1101,1102,1104,1106,1107,1109,1111,1116,1119,1127,1132,1147,1191,1195,1196,1197,1201,1202,1203,1204,1205,1206,1207,1210,1212,1213,1214,1215,1216,1217,1218,1220,1225,1228,1239,1240,1247,1253,1254,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1286,1287,1289,1290],whilst:43,whitespac:[40,41,42],who:43,whose:[43,844,847,853,854,870,871,881,906,996,1003,1008,1210,1211,1212,1213,1214,1216,1218],why:[1247,1248],width:[1109,1114],wiki:1293,wikipedia:1293,window:[1109,1114,1228,1229,1230,1231,1232,1233,1234,1235,1264,1265,1266,1267,1268,1269,1270,1271],wise:[40,41,43,853,855,856,857,861,864,881,900,906,996,1009,1024,1027,1028,1053,1055,1065,1093,1096,1098,1100,1102,1124,1125,1126,1127,1128,1130,1131,1132,1135,1136,1137,1138,1139,1141,1220,1221,1222,1223,1224,1225,1226,1227],wish:1290,with_bia:[1264,1274],with_cal:[996,1020],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1093,1103],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1147,with_partial_v:[1276,1277],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,441,470,996,1074,1147],with_to_kv_fn:[1264,1275],with_to_out_fn:[1264,1275],with_to_q_fn:[1264,1275],within:[15,18,19,43,996,999,1116,1122,1203,1207],without:[40,41,43,996,1062,1064,1070,1191,1193,1290],wonder:1247,word:[15,16,17,996,999,1203,1207,1253,1254],work:[43,1289],worker:[922,931,932,1147],worker_class:[922,931,932,1147],worker_kwarg:1147,would:[43,874,875,1220,1225,1247,1290,1293],wrap:[15,40,41,42,43,439,441,475,480,484,488,489,491,996,1008,1093,1107,1247],wrapper:43,write:[40,41,43,1247,1248,1293],written:[43,1247,1293],ws_new:[1093,1096,1098,1100,1101,1102],x1_i:[853,855,861,996,1024,1127,1135],x2_i:[853,855,861,996,1024,1127,1135],x_feat_dim:[1228,1239],x_i:[853,854,859,865],x_in:[1247,1289],x_inv:[1116,1118],x_max:[441,996,1009],x_min:[441,996,1009],x_sub:1147,xkk:1293,xkkm1:1293,xkm1km1:1293,xs0:1147,xs_t:1147,year:[1247,1293],yet:[1191,1200,1293],yield:[996,1090],you:[43,1247,1289,1290,1293],your:[1247,1248,1289,1290,1293],your_awesome_project:1290,yourself:[43,1247],yourslef:43,youtub:43,zero:[40,41,77,209,392,516,647,844,845,847,867,869,877,878,879,996,1013,1058,1060,1066,1067,1091,1092,1093,1095,1096,1100,1101,1228,1236,1247,1255,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274,1280,1281,1282,1283],zero_pad:[296,441,571,703,996],zeros_lik:[131,296,441,571,703,996],zip:1147,zk_e:1293},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1020,"function":[77,82,87,100,104,106,107,108,110,111,209,214,219,227,231,233,234,235,237,238,392,397,402,415,419,421,422,423,425,426,516,521,526,539,543,545,546,547,549,550,647,652,657,670,674,676,677,678,680,681,844,849,853,866,870,872,873,874,876,877],Ones:1260,Using:1290,abs:[297,572,704,997],aco:[792,1128],acosh:[793,1129],activ:[193,379,502,639,822,1220,1250],adam:1281,adam_step:1095,adam_upd:1096,algebra:[101,171,228,354,416,484,540,618,671,780,867],all:[112,239,427,551,682,878],all_equ:998,all_nested_indic:1192,ani:[113,240,428,552,683,879],api:[0,43,75,115,207,242,390,430,514,554,645,685,842],arang:[132,298,442,573,705,999],arg_nam:1000,argmax:[133,443,574,706,1001],argmin:[134,444,575,707,1002],args_to_ivi:16,args_to_n:17,argsort:[109,236,424,548,679,875],arithmet:[1,116,243,431,555,686],arrai:[0,3,43,75,114,115,117,135,207,241,242,244,251,299,390,429,430,432,445,514,553,554,556,576,645,684,685,687,708,842,881,1003],array_equ:[300,709,1004],arrays_equ:1005,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[794,1130],asinh:[88,403,527,658,854],assert_supports_inplac:1006,atan2:[796,1132],atan:[795,1131],atanh:[797,1133],attribut:[5,118,245,433,557,688],backend:[43,73],bilinear_resampl:[168,351,481,615,777,1110],binary_cross_entropi:1242,bitwis:[7,119,246,434,558,689],bitwise_and:[89,220,404,528,659,855],broadcast_to:[301,710,1007],builder:51,builtin:[114,241,251,429,553,684,881],builtin_ab:[252,882],builtin_add:[253,883],builtin_and:[254,884],builtin_bool:[255,885],builtin_contain:[256,886],builtin_deepcopi:[257,887],builtin_dir:[258,888],builtin_eq:[259,889],builtin_float:[260,890],builtin_floordiv:[261,891],builtin_g:[262,892],builtin_getattr:[263,893],builtin_getattribut:[264,894],builtin_getitem:[265,895],builtin_gt:[266,896],builtin_int:[267,897],builtin_invert:[268,898],builtin_l:[269,899],builtin_lt:[270,560,691,900],builtin_mul:[271,901],builtin_n:[272,902],builtin_neg:[273,903],builtin_or:[274,904],builtin_po:[275,905],builtin_pow:[276,906],builtin_radd:[277,907],builtin_rand:[278,908],builtin_rfloordiv:[279,909],builtin_rmul:[280,910],builtin_ror:[281,911],builtin_rpow:[282,912],builtin_rsub:[283,913],builtin_rtruediv:[284,914],builtin_rxor:[285,915],builtin_setitem:[286,916],builtin_sub:[287,917],builtin_truediv:[288,918],builtin_xor:[289,919],cache_fn:1008,cast:[136,302,446,577,711,976],ceil:[90,221,405,529,660,856],choleski:[781,1117],choose_random_framework:61,citat:1247,clear_framework_stack:62,clear_mem_on_dev:[697,938],clip:[303,712,1009],clip_matrix_norm:1010,clip_vector_norm:1011,clone:1162,clone_arrai:1163,clone_it:1164,clone_nest:1165,clonedit:1149,cloneditem:1148,clonednest:1150,closest_valid_dtyp:977,code:1293,comparison:[9,120,247,435,559,690],compil:[304,447,713,920,921],concaten:[137,305,448,578,714,1012],constant:[76,208,391,515,646,843],constant_pad:[306,579,715,1013],contain:[40,41],container_typ:[716,1014],content:1247,contribut:43,conv1d:[199,382,506,834,1229,1265],conv1d_transpos:[200,383,507,835,1230],conv1dtranspos:1266,conv2d:[201,384,508,641,836,1231,1267],conv2d_transpos:[202,385,509,837,1232],conv2dtranspos:1268,conv3d:[203,386,510,642,838,1233,1269],conv3d_transpos:[204,387,511,839,1234],conv3dtranspos:1270,convers:15,convert:[195,830,1253],convert_dtyp:978,copy_arrai:[717,1015],copy_nest:1193,core:[123,250,438,563,694,880],cos:[91,406,530,661,857],cosh:[92,407,531,662,798,858,1134],cprint:1292,creat:43,creation:[77,209,392,516,647,844],cross:[307,718,1016],cross_entropi:1243,cumprod:[138,308,449,719,1017],cumsum:[720,1018],current_framework:63,current_framework_str:[721,1019],data:[82,86,214,218,397,401,521,525,652,656,849,852],debug_mod:45,debugg:44,default_devic:939,default_dtyp:979,default_float_dtyp:980,default_int_dtyp:981,default_nod:1166,depthwise_conv2d:[205,388,512,643,840,1235],depthwiseconv2d:1271,design:43,dev:[126,292,566,698,940],dev_clon:941,dev_clone_arrai:942,dev_clone_it:943,dev_clone_nest:944,dev_dist:945,dev_dist_arrai:946,dev_dist_it:947,dev_dist_nest:948,dev_from_str:[127,293,567,699,949],dev_to_str:[128,294,568,700,950],dev_unifi:951,dev_unify_arrai:952,dev_unify_it:953,dev_unify_nest:954,dev_util:955,devclonedit:925,devcloneditem:924,devclonednest:926,devdistit:928,devdistitem:927,devdistnest:929,devic:[20,124,290,439,564,695,922],devmapp:931,devmappermultiproc:932,diagon:[102,229,417,541,672,868],distribute_nest:1167,divid:1135,document:1247,dropout:[1236,1272],dtype:[139,309,450,580,722,972,982],dtype_bit:[140,310,451,581,723,983],dtype_from_str:[141,311,452,582,724,984],dtype_to_str:[142,312,453,583,725,985],ecosystem:52,einops_rearrang:1021,einops_reduc:1022,einops_repeat:1023,einsum:[185,370,494,631,814,1211],elementwis:[87,219,402,526,657,853],empti:[78,210,393,517,648,845],equal:[584,726,1024],erf:[490,799,1136],execute_with_gradi:[165,346,476,610,771,1097],exist:1025,exp:[800,1137],expand_dim:[313,727,1026],finfo:[84,216,399,523,654,850],firstlayersiren:1257,flip:[105,232,420,544,675,871],float_img_to_uint8_img:1111,floor:[314,728,1027],floormod:[315,729,1028],fomaml_step:1144,fork:43,fourier_encod:1029,framework:59,full:[143,316,454,585,730,1030],func:72,gather:[144,317,455,586,731,1031],gather_nd:[145,318,456,587,732,1032],geglu:1251,gelu:[380,503,823,1221,1252],gener:[22,131,296,441,571,703,996],get_all_arrays_in_memori:1033,get_all_arrays_on_dev:956,get_framework:64,get_min_bas:1034,get_min_denomin:1035,get_num_dim:[733,1036],get_referrers_recurs:1037,glorotuniform:1258,gpu_is_avail:[957,1168],gradient:[24,164,345,475,609,770,1093],gradient_descent_upd:1098,gradient_imag:[169,352,482,616,778,1112],gym:53,handler:59,has_nan:1038,ident:[146,319,457,588,734,1039],iinfo:[85,217,400,524,655,851],imag:[26,167,350,480,614,776,1109],index_nest:1194,indices_wher:[147,320,458,735,1040],initi:1255,inplac:[11,121,248,436,561,692],inplace_arrays_support:1041,inplace_decr:[148,321,459,589,736,1042],inplace_incr:[149,322,460,590,737,1043],inplace_upd:[150,323,461,591,738,1044],inplace_variables_support:1045,inv:[782,1118],invalid_dtyp:986,is_arrai:[151,324,462,592,739,1046],is_float_dtyp:987,is_int_dtyp:988,is_vari:[166,347,477,611,772,1099],isfinit:[93,222,408,532,663,859],isinf:[325,593,740,1047],isnan:[94,223,409,533,664,860],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,841,1289,1290,1293],ivymodul:[196,831],jax:74,keep:43,lamb:1282,lamb_upd:1100,lar:1283,lars_upd:1101,layer:[198,381,505,640,833,1228,1264],layer_norm:1246,layernorm:1279,leaky_relu:[824,1222],less:[95,224,410,534,665,861],linalg:[28,1116],linear:[101,171,228,354,416,484,540,618,671,780,867,1237,1274],linear_resampl:[152,326,463,594,741,1048],linspac:[153,327,464,595,742,1049],list:43,log1p:[96,411,535,666,862],log2:[97,412,536,667,863],log:[801,1138],logic:[30,175,360,488,623,788,1124],logical_and:[361,789,1125],logical_not:[98,225,413,537,668,864],logical_or:[362,790,1126],logspac:[154,328,465,596,743,1050],loss:1241,lstm:1273,lstm_updat:1238,maml_step:1145,manipul:[104,231,419,543,674,870],map:1195,map_nest_at_index:1196,map_nest_at_indic:1197,match_kwarg:1051,math:[32,176,363,489,624,791,1127],matmul:[329,597,744,1052],matrix_norm:[172,355,485,619,783,1119],maximum:[745,1053],mech:54,memori:55,meshgrid:[330,746,1054],meta:[34,1143],method:[100,227,415,539,670,866],minimum:[747,1055],model:56,modul:[1276,1277,1289],multi:1147,multi_head_attent:1239,multi_index_nest:1198,multidevcontain:42,multidevit:935,multidevitem:934,multidevnest:936,multiheadattent:1275,multinodeit:1153,multinodeitem:1152,multinodenest:1154,multinomi:[178,365,492,626,807,1204],multiprocess:[748,1056],mxnet:206,nativ:1289,nest:1191,nested_indices_wher:1199,nested_map:1200,network:1289,next:1247,node:[1147,1169],node_dist:1170,node_dist_arrai:1171,node_dist_it:1172,node_str:1173,node_to_str:1174,node_util:1175,nodedistit:1156,nodedistitem:1155,nodedistnest:1157,nodemapp:1159,nodemappermultiproc:1160,norm:[1245,1278],num_arrays_in_memori:1057,num_arrays_on_dev:958,num_cpu_cor:959,num_gpu:[129,960,1176],numpi:389,nutshel:1247,one_hot:[155,466,598,749,1058],ones:[79,211,394,518,649,846,1059],ones_lik:[156,331,467,599,750,1060],oper:[1,3,7,9,11,13,43,116,117,119,120,121,122,243,244,246,247,248,249,431,432,434,435,436,437,555,556,558,559,561,562,686,687,689,690,692,693],optim:[1280,1284],optimizer_upd:1102,overview:1247,percent_used_mem_on_dev:961,percent_used_mem_on_nod:1177,pinv:[356,784,1120],portabl:1293,print_all_arrays_in_memori:1061,print_all_arrays_on_dev:962,profil:[125,291,440,565,696,937,1161],pull:43,queue_timeout:1062,randint:[179,366,627,808,1205],random:[36,177,364,491,625,806,1203],random_crop:1113,random_norm:[180,367,628,809,1206],random_uniform:[181,368,629,810,1207],reduce_max:[186,371,495,632,815,1212],reduce_mean:[187,372,496,633,816,1213],reduce_min:[188,373,497,634,817,1214],reduce_prod:[189,374,498,635,818,1215],reduce_std:[375,1216],reduce_sum:[190,376,499,636,819,1217],reduce_var:[191,377,500,637,820,1218],reduct:[38,184,369,493,630,813,1210],reflect:[13,122,249,437,562,693],relu:[825,1223],repeat:[332,751,1063],reptile_step:1146,request:43,reshap:[752,1064],robot:57,round:[333,753,1065],run:1290,scaled_dot_product_attent:1240,scatter_flat:[157,334,468,600,754,1066],scatter_nd:[158,335,469,601,755,1067],search:[106,233,421,545,676,872],seed:[182,811,1208],sequenti:[1286,1287],set:[107,234,422,546,677,873],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:963,set_default_dtyp:989,set_default_float_dtyp:990,set_default_int_dtyp:991,set_default_nod:1178,set_exception_debug_mod:48,set_framework:65,set_min_bas:1068,set_min_denomin:1069,set_nest_at_index:1201,set_nest_at_indic:1202,set_queue_timeout:1070,set_split_factor:[964,1179],set_tmp_dir:1071,set_with_grad:1103,sgd:1285,shape:[756,1072],shape_to_tupl:1073,shuffl:[183,812,1209],sigmoid:[826,1224],signatur:[100,227,415,539,670,866],sin:[802,1139],sinh:[803,1140],siren:1261,softmax:[194,504,827,1225],softplu:[828,1226],sort:[108,235,423,547,678,874],sparse_cross_entropi:1244,split:[159,336,470,602,757,1074],split_factor:[965,1180],split_func_cal:[966,1181],sqrt:[99,226,414,538,669,865],squeez:[160,337,471,603,758,1075],stable_divid:1076,stable_pow:1077,stack:[338,759,1078],stack_imag:[170,353,483,617,779,1114],standard:43,statist:[110,237,425,549,680,876],stop_gradi:[348,478,612,773,1104],str_to_nod:1182,submodul:43,supports_inplac:1079,svd:[358,621,786,1122],swapax:[604,760,1080],tan:[804,1141],tanh:[805,829,1142,1227],tensorflow:513,tile:[339,605,761,1081],tmp_dir:1082,to_dev:[130,295,569,701,967],to_ivi:18,to_ivy_modul:[197,832,1254],to_list:[762,1083],to_n:19,to_nod:1183,to_numpi:[763,1084],to_scalar:[764,1085],todo:43,torch:644,total_mem_on_dev:968,total_mem_on_nod:1184,tpu_is_avail:[570,702,969,1185],train:1289,trainabl:1289,transpos:[161,340,472,765,1086],tree:1247,tril:[80,212,395,519,650,847],try_else_non:1087,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[82,86,214,218,397,401,521,525,652,656,849,852],uint8_img_to_float_img:1115,unifi:1186,unify_arrai:1187,unify_it:1188,unify_nest:1189,unset_debug_mod:49,unset_default_devic:970,unset_default_dtyp:992,unset_default_float_dtyp:993,unset_default_int_dtyp:994,unset_framework:71,unset_with_grad:1105,unstack:[162,341,473,606,766,1088],updat:43,used_mem_on_dev:971,used_mem_on_nod:1190,util:[111,238,426,550,681,877],valid_dtyp:995,value_is_nan:1089,variabl:[349,479,613,774,1106],variable_data:[775,1107],vector_norm:[103,230,418,542,673,869],vector_to_skew_symmetric_matrix:[174,359,487,622,787,1123],verbos:1291,vision:58,where:[342,767,1090,1247],why:1293,with_grad:1108,wrapper:72,write:1290,your:43,zero:[81,213,396,520,651,848,1263],zero_pad:[343,607,768,1091],zeros_lik:[163,344,474,608,769,1092]}})